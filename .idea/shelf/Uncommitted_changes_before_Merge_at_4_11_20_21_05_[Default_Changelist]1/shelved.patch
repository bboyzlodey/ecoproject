Index: app/src/main/java/skarlat/dev/ecoproject/activity/WhyActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.activity\n\nimport android.content.res.AssetManager\nimport android.graphics.Typeface\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport androidx.core.content.ContextCompat\nimport com.google.gson.GsonBuilder\nimport com.google.gson.reflect.TypeToken\nimport skarlat.dev.ecoproject.R\nimport skarlat.dev.ecoproject.adapter.NewEJAdapter\nimport skarlat.dev.ecoproject.databinding.ActivityWhyBinding\nimport work.upstarts.editorjskit.models.EJBlock\nimport work.upstarts.editorjskit.models.HeadingLevel\nimport work.upstarts.editorjskit.ui.EditorJsAdapter\nimport work.upstarts.editorjskit.ui.theme.EJStyle\nimport work.upstarts.gsonparser.EJDeserializer\n\nconst val DATA_JSON_PATH = \"dummy_data.json\"\n\ndata class EJResponse(val blocks: List<EJBlock>)\nclass WhyActivity : AppCompatActivity() {\n    lateinit var binding : ActivityWhyBinding\n\n    private val rvAdapter: NewEJAdapter by lazy {\n        NewEJAdapter(EJStyle.builderWithDefaults(this.applicationContext)\n                .paragraphTextSize(16)\n                .paragraphTextColor(ContextCompat.getColor(this, R.color.paragraphTextColor))\n                .paragraphMargin(100 , 0, 0, 20)\n                .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h1)\n                .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h2)\n                .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h3)\n                .headingTextSizes(floatArrayOf(20f))\n                .headingTypefaceDetailed(Typeface.createFromAsset(assets, \"fonts/bellota_bold.ttf\"), HeadingLevel.h1)\n                .paragraphTypeface(Typeface.createFromAsset(assets, \"fonts/bellota_bold.ttf\"))\n                .imageMargin(0 , 0, 0, 20)\n                .build())\n    }\n    val blocksType = object : TypeToken<MutableList<EJBlock>>() {}.type\n    val gson = GsonBuilder()\n            .registerTypeAdapter(blocksType, EJDeserializer())\n            .create()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityWhyBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        val dummyData = readFileFromAssets(DATA_JSON_PATH, assets)\n        binding.recyclerView.adapter = rvAdapter\n        val ejResponse = gson.fromJson(dummyData, EJResponse::class.java)\n        rvAdapter.items = ejResponse.blocks\n\n    }\n\n    fun readFileFromAssets(fname: String, assetsManager: AssetManager) =\n            assetsManager.open(fname).readBytes().toString(Charsets.UTF_8)\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/WhyActivity.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/WhyActivity.kt	(date 1604520122000)
@@ -1,39 +1,36 @@
 package skarlat.dev.ecoproject.activity
 
 import android.content.res.AssetManager
-import android.graphics.Typeface
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
 import androidx.core.content.ContextCompat
 import com.google.gson.GsonBuilder
 import com.google.gson.reflect.TypeToken
+import kotlinx.android.synthetic.main.activity_why.*
+import skarlat.dev.ecoproject.Const.ARTICLE_JSON_PATH
 import skarlat.dev.ecoproject.R
-import skarlat.dev.ecoproject.adapter.NewEJAdapter
-import skarlat.dev.ecoproject.databinding.ActivityWhyBinding
+import skarlat.dev.ecoproject.adapter.ArticleAdapter
 import work.upstarts.editorjskit.models.EJBlock
 import work.upstarts.editorjskit.models.HeadingLevel
-import work.upstarts.editorjskit.ui.EditorJsAdapter
 import work.upstarts.editorjskit.ui.theme.EJStyle
 import work.upstarts.gsonparser.EJDeserializer
 
-const val DATA_JSON_PATH = "dummy_data.json"
-
 data class EJResponse(val blocks: List<EJBlock>)
 class WhyActivity : AppCompatActivity() {
-    lateinit var binding : ActivityWhyBinding
 
-    private val rvAdapter: NewEJAdapter by lazy {
-        NewEJAdapter(EJStyle.builderWithDefaults(this.applicationContext)
-                .paragraphTextSize(16)
-                .paragraphTextColor(ContextCompat.getColor(this, R.color.paragraphTextColor))
-                .paragraphMargin(100 , 0, 0, 20)
+    private val rvAdapter: ArticleAdapter by lazy {
+        ArticleAdapter(EJStyle.builderWithDefaults(this.applicationContext)
+//                .paragraphTextSize(16)
+//                .paragraphTextColor(ContextCompat.getColor(this, R.color.paragraphTextColor))
+//                .paragraphMargin( , 0, 0, 20)
                 .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h1)
                 .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h2)
                 .headingColorDetailed(ContextCompat.getColor(this, R.color.paragraphTextColor), HeadingLevel.h3)
                 .headingTextSizes(floatArrayOf(20f))
-                .headingTypefaceDetailed(Typeface.createFromAsset(assets, "fonts/bellota_bold.ttf"), HeadingLevel.h1)
-                .paragraphTypeface(Typeface.createFromAsset(assets, "fonts/bellota_bold.ttf"))
-                .imageMargin(0 , 0, 0, 20)
+//                .headingTypefaceDetailed(Typeface.createFromAsset(assets, "fonts/bellota_bold.ttf"), HeadingLevel.h1)
+//                .headingTypefaceDetailed(Typeface.createFromAsset(assets, "fonts/bellota_bold.ttf"), HeadingLevel.h2)
+//                .paragraphTypeface(Typeface.createFromAsset(assets, "fonts/bellota_bold.ttf"))
+                .imageMargin(0, 0, 0, 20)
                 .build())
     }
     val blocksType = object : TypeToken<MutableList<EJBlock>>() {}.type
@@ -43,18 +40,19 @@
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-        binding = ActivityWhyBinding.inflate(layoutInflater)
-        setContentView(binding.root)
+        setContentView(R.layout.activity_why)
 
-        val dummyData = readFileFromAssets(DATA_JSON_PATH, assets)
-        binding.recyclerView.adapter = rvAdapter
+        backButton.setOnClickListener { onBackPressed() }
+        val JsonDataPath = intent.extras?.getString(ARTICLE_JSON_PATH)
+        val dummyData = JsonDataPath?.let { readFileFromAssets(it, assets) }
+        recyclerView.adapter = rvAdapter
         val ejResponse = gson.fromJson(dummyData, EJResponse::class.java)
         rvAdapter.items = ejResponse.blocks
-
     }
 
-    fun readFileFromAssets(fname: String, assetsManager: AssetManager) =
-            assetsManager.open(fname).readBytes().toString(Charsets.UTF_8)
+    fun readFileFromAssets(fname: String, assetsManager: AssetManager): String {
+        return assetsManager.open(fname).readBytes().toString(Charsets.UTF_8)
+    }
 
 
 }
Index: app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.activity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport skarlat.dev.ecoproject.App;\nimport skarlat.dev.ecoproject.User;\nimport skarlat.dev.ecoproject.databinding.ActivityMainBinding;\n\npublic class MainActivity extends AppCompatActivity{\n\n\tprivate TextView count;\n\tstatic final private int PROGRESS_BAR = 0;\n\tprivate final String TAG = \"MainActivity\";\n\tprivate ActivityMainBinding binding;\n\t@SuppressLint(\"StaticFieldLeak\")\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tbinding = ActivityMainBinding.inflate(getLayoutInflater());\n\t\t// new feature\n\t\tIntent intent = new Intent(); // удалить\n//\t\tintent.setClass(this, WhyActivity.class);\n//\t\tstartActivity(intent);\n//\t\tfinish();\n\n\t\t// Код временно закоментирован для дебагинга\n\t\tnew AsyncTask<Void, Void, User>() {\n\t\t\t@Override\n\t\t\tprotected User doInBackground(Void... voids) {\n\t\t\t\treturn App.auth.getCurrentUser();\n\t\t\t}\n\n\t\t\t@SuppressLint(\"StaticFieldLeak\")\n\t\t\t@Override\n\t\t\tprotected void onPostExecute(User user) {\n\t\t\t\tif (user == null)\n\t\t\t\t\t{intent.setClass(getBaseContext(), SignInActivity.class);\n\t\t\t\t\t\tLog.d(TAG, \"User is null\");\n\t\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tintent.setClass(getBaseContext(), HomeActivity.class);\n\t\t\t\t\tLog.d(TAG, \"User not null\");\n\t\t\t\t}\n\t\t\t\tbinding.progress.setVisibility(View.INVISIBLE);\n\t\t\t\tstartActivity(intent);\n\t\t\t\tsuper.onPostExecute(user);\n\t\t\t}\n\t\t}.execute();\n\t}\n\n\n\t@Override\n\tprotected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\n\t\tif (requestCode == PROGRESS_BAR){\n\t\t\tif (resultCode == RESULT_OK){\n\n\t\t\t}\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java	(date 1604520164000)
@@ -15,57 +15,59 @@
 import skarlat.dev.ecoproject.User;
 import skarlat.dev.ecoproject.databinding.ActivityMainBinding;
 
-public class MainActivity extends AppCompatActivity{
+public class MainActivity extends AppCompatActivity {
 
-	private TextView count;
-	static final private int PROGRESS_BAR = 0;
-	private final String TAG = "MainActivity";
-	private ActivityMainBinding binding;
-	@SuppressLint("StaticFieldLeak")
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		binding = ActivityMainBinding.inflate(getLayoutInflater());
-		// new feature
-		Intent intent = new Intent(); // удалить
-//		intent.setClass(this, WhyActivity.class);
-//		startActivity(intent);
-//		finish();
+    private TextView count;
+    static final private int PROGRESS_BAR = 0;
+    private final String TAG = "MainActivity";
+    private ActivityMainBinding binding;
+
+    @SuppressLint("StaticFieldLeak")
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        binding = ActivityMainBinding.inflate(getLayoutInflater());
 
-		// Код временно закоментирован для дебагинга
-		new AsyncTask<Void, Void, User>() {
-			@Override
-			protected User doInBackground(Void... voids) {
-				return App.auth.getCurrentUser();
-			}
+        // new feature WhyActivity
+		/*Intent intent = new Intent(); // удалить
+		intent.setClass(this, WhyActivity.class);
+		startActivity(intent);
+		finish();
+*/
+        // Код временно закоментирован для дебагинга
+        new AsyncTask<Void, Void, User>() {
+            @Override
+            protected User doInBackground(Void... voids) {
+                return App.auth.getCurrentUser();
+            }
 
-			@SuppressLint("StaticFieldLeak")
-			@Override
-			protected void onPostExecute(User user) {
-				if (user == null)
-					{intent.setClass(getBaseContext(), SignInActivity.class);
-						Log.d(TAG, "User is null");
-					}
-				else{
-					intent.setClass(getBaseContext(), HomeActivity.class);
-					Log.d(TAG, "User not null");
-				}
-				binding.progress.setVisibility(View.INVISIBLE);
-				startActivity(intent);
-				super.onPostExecute(user);
-			}
-		}.execute();
-	}
+            @SuppressLint("StaticFieldLeak")
+            @Override
+            protected void onPostExecute(User user) {
+                final Intent intent = new Intent();
+                if (user == null) {
+                    intent.setClass(getBaseContext(), SignInActivity.class);
+                    Log.d(TAG, "User is null");
+                } else {
+                    intent.setClass(getBaseContext(), HomeActivity.class);
+                    Log.d(TAG, "User not null");
+                }
+                binding.progress.setVisibility(View.INVISIBLE);
+                startActivity(intent);
+                super.onPostExecute(user);
+            }
+        }.execute();
+    }
 
 
-	@Override
-	protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
-		super.onActivityResult(requestCode, resultCode, data);
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
 
-		if (requestCode == PROGRESS_BAR){
-			if (resultCode == RESULT_OK){
+        if (requestCode == PROGRESS_BAR) {
+            if (resultCode == RESULT_OK) {
 
-			}
-		}
-	}
+            }
+        }
+    }
 }
Index: .idea/markdown-navigator.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"MarkdownProjectSettings\">\n    <PreviewSettings splitEditorLayout=\"SPLIT\" splitEditorPreview=\"PREVIEW\" useGrayscaleRendering=\"false\" zoomFactor=\"1.0\" maxImageWidth=\"0\" synchronizePreviewPosition=\"true\" highlightPreviewType=\"LINE\" highlightFadeOut=\"5\" highlightOnTyping=\"true\" synchronizeSourcePosition=\"true\" verticallyAlignSourceAndPreviewSyncPosition=\"true\" showSearchHighlightsInPreview=\"true\" showSelectionInPreview=\"true\" lastLayoutSetsDefault=\"false\">\n      <PanelProvider>\n        <provider providerId=\"com.vladsch.md.nav.editor.swing.html.panel\" providerName=\"Default - Swing\" />\n      </PanelProvider>\n    </PreviewSettings>\n    <ParserSettings gitHubSyntaxChange=\"false\" correctedInvalidSettings=\"false\" emojiShortcuts=\"1\" emojiImages=\"0\">\n      <PegdownExtensions>\n        <option name=\"ATXHEADERSPACE\" value=\"true\" />\n        <option name=\"FENCED_CODE_BLOCKS\" value=\"true\" />\n        <option name=\"INTELLIJ_DUMMY_IDENTIFIER\" value=\"true\" />\n        <option name=\"RELAXEDHRULES\" value=\"true\" />\n        <option name=\"STRIKETHROUGH\" value=\"true\" />\n        <option name=\"TABLES\" value=\"true\" />\n        <option name=\"TASKLISTITEMS\" value=\"true\" />\n      </PegdownExtensions>\n      <ParserOptions>\n        <option name=\"COMMONMARK_LISTS\" value=\"true\" />\n        <option name=\"EMOJI_SHORTCUTS\" value=\"true\" />\n        <option name=\"GFM_TABLE_RENDERING\" value=\"true\" />\n        <option name=\"PRODUCTION_SPEC_PARSER\" value=\"true\" />\n        <option name=\"SIM_TOC_BLANK_LINE_SPACER\" value=\"true\" />\n      </ParserOptions>\n    </ParserSettings>\n    <HtmlSettings headerTopEnabled=\"false\" headerBottomEnabled=\"false\" bodyTopEnabled=\"false\" bodyBottomEnabled=\"false\" addPageHeader=\"false\" addAnchorLinks=\"false\" anchorLinksWrapText=\"false\" imageUriSerials=\"false\" addDocTypeHtml=\"true\" noParaTags=\"false\" defaultUrlTitle=\"false\" migratedPlantUml=\"true\" migratedAnchorLinks=\"true\" plantUmlConversion=\"0\">\n      <GeneratorProvider>\n        <provider providerId=\"com.vladsch.md.nav.editor.text.html.generator\" providerName=\"Unmodified HTML Generator\" />\n      </GeneratorProvider>\n      <headerTop />\n      <headerBottom />\n      <bodyTop />\n      <bodyBottom />\n      <fencedCodeConversions>\n        <option name=\"c4plantuml\" value=\"NONE\" />\n        <option name=\"ditaa\" value=\"NONE\" />\n        <option name=\"erd\" value=\"NONE\" />\n        <option name=\"graphviz\" value=\"NONE\" />\n        <option name=\"latex\" value=\"KATEX\" />\n        <option name=\"math\" value=\"KATEX\" />\n        <option name=\"mermaid\" value=\"NONE\" />\n        <option name=\"nomnoml\" value=\"NONE\" />\n        <option name=\"plantuml\" value=\"NONE\" />\n        <option name=\"puml\" value=\"NONE\" />\n        <option name=\"svgbob\" value=\"NONE\" />\n        <option name=\"umlet\" value=\"NONE\" />\n        <option name=\"vega\" value=\"NONE\" />\n        <option name=\"vegalite\" value=\"NONE\" />\n        <option name=\"wavedrom\" value=\"NONE\" />\n      </fencedCodeConversions>\n    </HtmlSettings>\n    <CssSettings previewScheme=\"UI_SCHEME\" cssUri=\"\" isCssUriEnabled=\"false\" isCssUriSerial=\"true\" isCssTextEnabled=\"false\" isDynamicPageWidth=\"true\">\n      <StylesheetProvider>\n        <provider providerId=\"com.vladsch.md.nav.editor.text.html.css\" providerName=\"No Stylesheet\" />\n      </StylesheetProvider>\n      <ScriptProviders />\n      <cssText />\n      <cssUriHistory />\n    </CssSettings>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/markdown-navigator.xml	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ .idea/markdown-navigator.xml	(date 1604520134000)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="MarkdownProjectSettings">
-    <PreviewSettings splitEditorLayout="SPLIT" splitEditorPreview="PREVIEW" useGrayscaleRendering="false" zoomFactor="1.0" maxImageWidth="0" synchronizePreviewPosition="true" highlightPreviewType="LINE" highlightFadeOut="5" highlightOnTyping="true" synchronizeSourcePosition="true" verticallyAlignSourceAndPreviewSyncPosition="true" showSearchHighlightsInPreview="true" showSelectionInPreview="true" lastLayoutSetsDefault="false">
+    <PreviewSettings splitEditorLayout="SPLIT" splitEditorPreview="PREVIEW" useGrayscaleRendering="false" zoomFactor="1.0" maxImageWidth="0" synchronizePreviewPosition="true" highlightPreviewType="NONE" highlightFadeOut="5" highlightOnTyping="true" synchronizeSourcePosition="true" verticallyAlignSourceAndPreviewSyncPosition="true" showSearchHighlightsInPreview="false" showSelectionInPreview="true" lastLayoutSetsDefault="false">
       <PanelProvider>
         <provider providerId="com.vladsch.md.nav.editor.swing.html.panel" providerName="Default - Swing" />
       </PanelProvider>
@@ -24,35 +24,19 @@
         <option name="SIM_TOC_BLANK_LINE_SPACER" value="true" />
       </ParserOptions>
     </ParserSettings>
-    <HtmlSettings headerTopEnabled="false" headerBottomEnabled="false" bodyTopEnabled="false" bodyBottomEnabled="false" addPageHeader="false" addAnchorLinks="false" anchorLinksWrapText="false" imageUriSerials="false" addDocTypeHtml="true" noParaTags="false" defaultUrlTitle="false" migratedPlantUml="true" migratedAnchorLinks="true" plantUmlConversion="0">
+    <HtmlSettings headerTopEnabled="false" headerBottomEnabled="false" bodyTopEnabled="false" bodyBottomEnabled="false" addPageHeader="true" addAnchorLinks="true" anchorLinksWrapText="false" imageUriSerials="false" addDocTypeHtml="true" noParaTags="false" defaultUrlTitle="false" migratedPlantUml="true" migratedAnchorLinks="true" plantUmlConversion="0">
       <GeneratorProvider>
-        <provider providerId="com.vladsch.md.nav.editor.text.html.generator" providerName="Unmodified HTML Generator" />
+        <provider providerId="com.vladsch.md.nav.editor.swing.html.generator" providerName="Default Swing HTML Generator" />
       </GeneratorProvider>
       <headerTop />
       <headerBottom />
       <bodyTop />
       <bodyBottom />
-      <fencedCodeConversions>
-        <option name="c4plantuml" value="NONE" />
-        <option name="ditaa" value="NONE" />
-        <option name="erd" value="NONE" />
-        <option name="graphviz" value="NONE" />
-        <option name="latex" value="KATEX" />
-        <option name="math" value="KATEX" />
-        <option name="mermaid" value="NONE" />
-        <option name="nomnoml" value="NONE" />
-        <option name="plantuml" value="NONE" />
-        <option name="puml" value="NONE" />
-        <option name="svgbob" value="NONE" />
-        <option name="umlet" value="NONE" />
-        <option name="vega" value="NONE" />
-        <option name="vegalite" value="NONE" />
-        <option name="wavedrom" value="NONE" />
-      </fencedCodeConversions>
+      <fencedCodeConversions />
     </HtmlSettings>
     <CssSettings previewScheme="UI_SCHEME" cssUri="" isCssUriEnabled="false" isCssUriSerial="true" isCssTextEnabled="false" isDynamicPageWidth="true">
       <StylesheetProvider>
-        <provider providerId="com.vladsch.md.nav.editor.text.html.css" providerName="No Stylesheet" />
+        <provider providerId="com.vladsch.md.nav.editor.swing.html.css" providerName="Default Swing Stylesheet" />
       </StylesheetProvider>
       <ScriptProviders />
       <cssText />
Index: app/src/main/java/skarlat/dev/ecoproject/FireBaseAuthenticator.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/FireBaseAuthenticator.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/FireBaseAuthenticator.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,20 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-
-public class FireBaseAuthenticator extends Authenticator<FirebaseAuth> {
-	
-	public FireBaseAuthenticator(FirebaseAuth instance) {
-		super(instance);
-	}
-	
-	@Override
-	public User getCurrentUser() {
-		FirebaseUser user = instance.getCurrentUser();
-		if (user == null){
-			return null;
-		}
-		return new User(user.getDisplayName());
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/EJQuoteBlockType.kt
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/EJQuoteBlockType.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/EJQuoteBlockType.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,7 +0,0 @@
-package skarlat.dev.ecoproject
-
-import work.upstarts.editorjskit.models.EJAbstractBlockType
-
-enum class EJQuoteBlockType(override val jsonName: String) : EJAbstractBlockType {
-    QUOTE("quote")
-}
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/AbstractEco.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/AbstractEco.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/AbstractEco.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,96 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import java.io.Serializable;
-
-/*
-**
-* Абстрактный класс AbstractEco от которого можно наследоваться.
-* В классах наследниках нужно будет вызвать контсруктор суперкласса:
-* super(name, description, status);
-*
- */
-
-/**
- * removed
- */
-abstract public class AbstractEco implements EcoInterface, Serializable {
-	private final String title;
-	private final String desription;
-	private final String name;
-	private final String fullDescription;
-	private int status;
-//<<<<<<< HEAD
-	public boolean temp;
-//=======
-	private int i;
-//>>>>>>> denis
-	
-	public AbstractEco(String name, String title, String desription, String fullDescription, int status){
-		this.name = name;
-		this.title = title;
-		this.desription = desription;
-		this.status = status;
-		this.fullDescription = fullDescription;
-	}
-	public AbstractEco(String name, String title, String desription, String fullDescription){
-		this.name = name;
-		this.title = title;
-		this.desription = desription;
-		this.status = status;
-		this.fullDescription = fullDescription;
-	}
-	
-	public AbstractEco(String name, String title){
-		this.name = name;
-		this.title = title;
-		desription = null;
-		fullDescription = null;
-	}
-
-	public AbstractEco(String name, String title, String desription, boolean status){
-		this.name = name;
-		this.title = title;
-		this.desription = desription;
-		this.temp = status;
-		this.fullDescription = null;
-	}
-
-	public AbstractEco(String title, String desription, boolean status){
-		this.name = null;
-		this.title = title;
-		this.desription = desription;
-		this.temp = status;
-		this.fullDescription = null;
-	}
-
-	/**
-	 *
-	 * @return: 0 - закрытый курс, 1 - открытый курс, 2 - текущий посещенный курс
-	 * Смотри ниже метод с Enum
-	 */
-//	@Override
-//	public int getStatus() {
-//		return status;
-//	}
-	/**
-	 *
-	 * @return: Enum - объект перпечисления.
-	 * Метод переодпределяется в каждом классе
-	 */
-	@Override
-	abstract public Enum getStatus();
-
-	@Override
-	public String getTitle() {
-		return title;
-	}
-	
-	@Override
-	public String getDescription() {
-		return desription;
-	}
-
-	@Override
-	public String getName(){ return name; }
-
-}
Index: app/src/main/java/skarlat/dev/ecoproject/Loginner.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/Loginner.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/Loginner.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,13 +0,0 @@
-package skarlat.dev.ecoproject;
-
-abstract public class Loginner {
-	protected String passwd, eMail;
-	
-	public Loginner(String passwd, String eMail) {
-		this.passwd = passwd;
-		this.eMail = eMail;
-	}
-	
-	abstract public User logIn(String passwd, String eMail);
-	abstract public User logIn();
-}
Index: app/src/main/java/skarlat/dev/ecoproject/activity/RemindActivity.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/RemindActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/RemindActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,35 +0,0 @@
-package skarlat.dev.ecoproject.activity;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-
-import com.google.android.material.snackbar.Snackbar;
-import com.google.android.material.textfield.TextInputEditText;
-
-import skarlat.dev.ecoproject.R;
-
-public class RemindActivity extends AppCompatActivity {
-	private Button remindButton;
-	private TextInputEditText email;
-	
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.activity_remind);
-		email = (TextInputEditText) findViewById(R.id.user_email);
-		remindButton = (Button) findViewById(R.id.remind);
-	}
-	public void onClick(View v){
-		int pressed = v.getId();
-		if (pressed == R.id.remind){
-			Snackbar.make(v, "На почту отправлена иснтрукция по восстановлению пароля :-)",
-					Snackbar.LENGTH_LONG)
-					.show();
-			onBackPressed();
-		}
-	}
-	
-}
Index: app/src/main/java/skarlat/dev/ecoproject/EcoInterface.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/EcoInterface.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/EcoInterface.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,10 +0,0 @@
-package skarlat.dev.ecoproject;
-
-public interface EcoInterface {
-	String getName();
-	String getTitle();
-	String getDescription();
-	String getFullDescription();
-	Enum getStatus();
-	String getPathImage();
-}
Index: app/src/main/java/skarlat/dev/ecoproject/activity/ProjectActivity.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/ProjectActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/ProjectActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,69 +0,0 @@
-package skarlat.dev.ecoproject.activity;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-import skarlat.dev.ecoproject.R;
-
-
-/*
-**  Project Activity
-*
-*
- */
-public class ProjectActivity extends AppCompatActivity {
-	private int progress = 0;
-	private ProgressBar pbHorizontal;
-	private TextView tvProgressHorizontal;
-
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-//		setContentView(R.layout.activity_project);
-
-//		pbHorizontal = (ProgressBar) findViewById(R.id.pb_horizontal);
-//		tvProgressHorizontal = (TextView) findViewById(R.id.tv_progress_horizontal);
-
-//		progress =  getIntent().getExtras().getInt("progressBar");
-
-//		postProgress(10);
-	}
-
-	public void onClick(View v) {
-		progress = progress + 10;
-		postProgress(progress);
-	}
-
-	private void postProgress(int progress) {
-		String strProgress = String.valueOf(progress) + " %";
-		pbHorizontal.setProgress(progress);
-
-		if (progress == 0) {
-			pbHorizontal.setSecondaryProgress(0);
-		} else {
-			pbHorizontal.setSecondaryProgress(progress + 5);
-		}
-		tvProgressHorizontal.setText(strProgress);
-	}
-
-	@Override
-	public void onBackPressed() {
-		saveStatusBar();
-	}
-	
-	public void openCard(View view) {
-		Intent intent = new Intent(this, HomeActivity.class);
-		startActivity(intent);
-	}
-	public void saveStatusBar(){
-		Intent intent = new Intent();
-		intent.putExtra("progressBar", progress);
-		setResult(RESULT_OK, intent);
-		finish();
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/FireBaseLoginner.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/FireBaseLoginner.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/FireBaseLoginner.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,55 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import android.util.Log;
-
-import androidx.annotation.NonNull;
-
-import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.Task;
-import com.google.firebase.auth.AuthResult;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-
-public class FireBaseLoginner extends Loginner implements OnCompleteListener<AuthResult> {
-	private final String TAG = "FireBaseLoginner";
-	private String operation;
-	private String debugLogInGoogle = "signInWithGoogle";
-	
-	public FireBaseLoginner(String passwd, String eMail) {
-		super(passwd, eMail);
-	}
-	
-	@Override
-	public User logIn(String passwd, String eMail) {
-		operation = "signInWithEmail";
-		FirebaseAuth mAuth = (FirebaseAuth) App.auth.getInstance();
-		/*FirebaseUser user* =*/ mAuth
-				                    .signInWithEmailAndPassword(eMail, passwd)
-				                    .addOnCompleteListener(this);
-//				                    .getResult()
-//				                    .getUser();
-		FirebaseUser user = mAuth.getCurrentUser();
-		if (user == null)
-			return null;
-		return new User(user.getDisplayName());
-	}
-	
-//	public
-	
-	@Override
-	public User logIn() {
-		return logIn(this.passwd, this.eMail);
-	}
-	
-	
-	
-	@Override
-	public void onComplete(@NonNull Task<AuthResult> task) {
-		if (task.isSuccessful()){
-			Log.d(TAG, "Task " + operation +" is successful");
-		}
-		else{
-			Log.d(TAG, "Task " + operation +" is failure");
-		}
-	}
-}
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/Authenticator.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/Authenticator.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/Authenticator.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,15 +0,0 @@
-package skarlat.dev.ecoproject;
-
-public abstract class Authenticator<T> {
-	protected T instance;
-	
-	public Authenticator(T instance) {
-		this.instance = instance;
-	}
-	
-	public abstract User getCurrentUser();
-	
-	T getInstance(){
-		return instance;
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/includes/CSVFile.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/CSVFile.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/CSVFile.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,40 +0,0 @@
-package skarlat.dev.ecoproject.includes;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.util.ArrayList;
-import java.util.List;
-
-public class CSVFile  {
-    InputStream inputStream;
-
-    public CSVFile(InputStream inputStream){
-        this.inputStream = inputStream;
-    }
-
-    public List read(){
-        List resultList = new ArrayList();
-        BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
-        try {
-            String csvLine;
-            while ((csvLine = reader.readLine()) != null) {
-                String[] row = csvLine.split(";");
-                resultList.add(row);
-            }
-        }
-        catch (IOException ex) {
-            throw new RuntimeException("Error in reading CSV file: "+ex);
-        }
-        finally {
-            try {
-                inputStream.close();
-            }
-            catch (IOException e) {
-                throw new RuntimeException("Error while closing input stream: "+e);
-            }
-        }
-        return resultList;
-    }
-}
Index: app/src/main/java/skarlat/dev/ecoproject/activity/EcoCardActivity.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/EcoCardActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/EcoCardActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,118 +0,0 @@
-package skarlat.dev.ecoproject.activity;
-
-import android.app.ActionBar;
-import android.content.res.ColorStateList;
-import android.content.res.Resources;
-import android.content.res.TypedArray;
-import android.graphics.Rect;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.ScrollView;
-import android.widget.TextView;
-import android.widget.ToggleButton;
-import android.widget.Toolbar;
-
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.recyclerview.widget.RecyclerView;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Locale;
-
-import skarlat.dev.ecoproject.EcoCard;
-import skarlat.dev.ecoproject.EcoSoviet;
-import skarlat.dev.ecoproject.R;
-import skarlat.dev.ecoproject.adapter.DataAdapter;
-import skarlat.dev.ecoproject.databinding.ActivityEcoCardsBinding;
-import skarlat.dev.ecoproject.includes.database.DatabaseHelper;
-
-//import skarlat.dev.ecoproject.activity.adapters;
-//import androidx.appcompat.widget.Toolbar;
-
-public class EcoCardActivity extends AppCompatActivity {
-	public static String TAG = "EcoCardActivity";
-	private RecyclerView recyclerView;
-	private ScrollView scrollView;
-	private EcoCard ecoCard;
-	private DatabaseHelper db;
-	private View fullDescView;
-	List<EcoSoviet> ecoSoviets = new ArrayList<>();
-	Drawable whyBackground;
-	Drawable howBackground;
-	ColorStateList whyColor;
-	ColorStateList howColor;
-	Toolbar myToolbar;
-	LinearLayout linearLayout;
-	private ActivityEcoCardsBinding binding;
-	
-	
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		binding = ActivityEcoCardsBinding.inflate(getLayoutInflater());
-		setContentView(binding.getRoot());
-		db = new DatabaseHelper();
-		Bundle bundle = getIntent().getExtras();
-		ecoCard = (EcoCard) bundle.get(EcoCard.class.getSimpleName());
-		String path = ecoCard.cardNameID + ".png";
-		try {
-			binding.cardPicture.setImageDrawable(ecoCard.getImage());
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-		
-		TextView textView = (TextView) findViewById(R.id.card_title);
-		textView.setText(capitalize(ecoCard.title));
-		textView = (TextView) findViewById(R.id.card_category);
-		textView.setText(ecoCard.description);
-		initiList();
-		linearLayout = (LinearLayout) findViewById(R.id.card_linear_layout);
-		int i = 0;
-		Iterator iterator = ecoSoviets.iterator();
-		if (!ecoSoviets.isEmpty()){
-			do{
-				inflateLayout((EcoSoviet) iterator.next());
-			}while(iterator.hasNext());
-		}
-		
-	}
-	private String capitalize(String cap){
-		return cap.substring(0,1).concat(cap.substring(1).toLowerCase());
-	}
-		private void inflateLayout(EcoSoviet ecoSoviet){
-			LayoutInflater layoutInflater = LayoutInflater.from(this);
-			View view = layoutInflater.inflate(R.layout.card_soviet, null, false);
-			((TextView) view.findViewById(R.id.header_card)).setText(ecoSoviet.getTitle());
-			((TextView) view.findViewById(R.id.descr_card)).setText(ecoSoviet.getDescription());
-			linearLayout.addView(view);
-		}
-	
-		private void log(String message){
-		Log.d(TAG, message);
-	} // Для дебагинга и логинга
-	
-	protected void initiList(){
-		ecoSoviets = db.getAllByCardName(ecoCard.getName());
-	}
-	
-	
-	public void onBackBtn(View view){
-		onBackPressed();
-	}
-
-
-	@Override
-	public void onBackPressed() {
-		setResult(RESULT_OK);
-		super.onBackPressed();
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/EJQuoteData.kt
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/EJQuoteData.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/EJQuoteData.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,7 +0,0 @@
-package skarlat.dev.ecoproject
-
-import work.upstarts.editorjskit.models.data.EJData
-
-data class EJQuoteData(
-        val text: String
-): EJData()
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/EcoCard.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/EcoCard.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/EcoCard.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,105 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-
-import androidx.annotation.NonNull;
-import androidx.room.Entity;
-import androidx.room.PrimaryKey;
-
-import java.io.IOException;
-import java.io.Serializable;
-
-import skarlat.dev.ecoproject.includes.database.AppDatabase;
-import skarlat.dev.ecoproject.includes.database.dao.CardsDao;
-
-@Entity
-public class EcoCard  implements EcoInterface, Serializable {
-	private final static String postfixPath = "_cover_hdpi";
-	@PrimaryKey
-	@NonNull
-	public String cardNameID;
-
-	public String courseNameID;
-
-	public String title;
-
-	public String description;
-
-	public String fullDescription;
-
-	public int isActive;
-
-	public enum Status{
-		CLOSED,
-		OPENED,
-		WATCHED,
-	}
-	@Override
-	public String getName() {
-		return this.cardNameID;
-	}
-
-	@Override
-	public String getTitle() {
-		return this.title;
-	}
-
-	@Override
-	public String getDescription() {
-		return this.description;
-	}
-
-	@Override
-	public String getFullDescription(){
-		return this.fullDescription;
-	}
-
-	public String getCourseNameID(){
-		return this.courseNameID;
-	}
-
-	@Override
-	public Enum getStatus() {
-		switch (this.isActive){
-			case 0:
-				return Status.CLOSED;
-			case 1:
-				return Status.OPENED;
-			case 2:
-				return Status.WATCHED;
-		}
-		return null;
-	}
-	
-	public Drawable getImage() throws IOException {
-		Drawable drawable = new BitmapDrawable(App.instance.getAssets().open(getPathImage()));
-		return drawable;
-	}
-	
-	@Override
-	public String getPathImage() {
-		return Const.IMAGES_ROOT_FOLDER + courseNameID  + "/" +  cardNameID + postfixPath + ".png";
-	}
-	
-	public void upDate(EcoCard.Status status) {
-		AppDatabase db = App.getInstance().getDatabase();
-		CardsDao cardsDao = db.cardsDao();
-		setStatus(status);
-		cardsDao.update(this);
-	}
-
-	public void setStatus(EcoCard.Status status){
-		switch (status){
-			case OPENED:
-				this.isActive = 1;
-				break;
-			case WATCHED:
-				this.isActive = 2;
-				break;
-			case CLOSED:
-				this.isActive = 0;
-				break;
-		}
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/Education.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/Education.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/Education.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,16 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import java.io.InputStream;
-import java.io.Serializable;
-import java.util.List;
-import java.util.Map;
-
-public class Education implements Serializable {
-	List<Course> courses;
-	Map<Course.Status, List<Course>> mapOfCouses;
-	
-	public Education(InputStream inputStream){
-	
-	}
-	
-}
Index: app/src/main/java/skarlat/dev/ecoproject/EcoSoviet.java
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/EcoSoviet.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/EcoSoviet.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
@@ -1,77 +0,0 @@
-package skarlat.dev.ecoproject;
-
-import androidx.annotation.NonNull;
-import androidx.room.Entity;
-import androidx.room.PrimaryKey;
-
-import skarlat.dev.ecoproject.includes.database.AppDatabase;
-import skarlat.dev.ecoproject.includes.database.dao.SovietsDao;
-
-@Entity
-public class EcoSoviet implements EcoInterface{
-
-	public String cardNameID;
-
-	@PrimaryKey(autoGenerate = true)
-	@NonNull
-	public long sovietID;
-
-	public int isFavorite;
-
-	public String title;
-
-	public String description;
-
-	@Override
-	public String getName() {
-		return null;
-	}
-
-	@Override
-	public String getTitle() {
-		return this.title;
-	}
-
-	@Override
-	public String getDescription() {
-		return this.description;
-	}
-
-	@Override
-	public String getFullDescription() {
-		return null;
-	}
-
-	@Override
-	public Enum getStatus() {
-		return isFavorite == 0 ? Status.UNLIKED : Status.LIKED;
-	}
-	
-	@Override
-	public String getPathImage() {
-		return null;
-	}
-	
-	public enum Status{
-		UNLIKED,
-		LIKED
-	}
-
-	public void setStatus(EcoSoviet.Status status){
-		switch (status){
-			case UNLIKED:
-				isFavorite = 0;
-				break;
-			case LIKED:
-				isFavorite = 1;
-				break;
-		}
-	}
-
-	public void upDate(EcoSoviet.Status status){
-		AppDatabase db = App.getInstance().getDatabase();
-		SovietsDao dao = db.sovietsDao();
-		setStatus(status);
-		dao.update(this);
-	}
-}
Index: app/src/main/java/skarlat/dev/ecoproject/activity/SignInActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.activity;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.text.Editable;\nimport android.text.TextWatcher;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Toast;\n\nimport com.google.android.gms.auth.api.Auth;\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\nimport com.google.android.gms.auth.api.signin.GoogleSignInResult;\nimport com.google.android.gms.common.ConnectionResult;\nimport com.google.android.gms.common.api.GoogleApiClient;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.textfield.TextInputEditText;\nimport com.google.firebase.auth.AuthCredential;\nimport com.google.firebase.auth.AuthResult;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.GoogleAuthProvider;\n\nimport skarlat.dev.ecoproject.Const;\nimport skarlat.dev.ecoproject.R;\nimport skarlat.dev.ecoproject.User;\nimport skarlat.dev.ecoproject.databinding.ActivitySignInBinding;\n\npublic class SignInActivity extends AppCompatActivity implements\n\t\tGoogleApiClient.OnConnectionFailedListener{\n\tprivate final String TAG = \"SignInActivity\";\n\tprivate final int RC_SIGN_IN = 10;\n\tprivate final String KEY_USENAME = \"USERNAME\";\n\tprivate GoogleApiClient mGoogleApiClient;\n\tprivate FirebaseAuth mFirebaseAuth;\n\tprivate TextInputEditText emailEditText;\n\tprivate TextInputEditText passwdEditText;\n\tActivitySignInBinding binding;\n\t\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tbinding = ActivitySignInBinding.inflate(getLayoutInflater());\n\t\tsetContentView(binding.getRoot());\n\t\tmFirebaseAuth = FirebaseAuth.getInstance();\n\t\tGoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n\t\t\t\t                          .requestIdToken(getString(R.string.default_web_client_id))\n\t\t\t\t                          .requestEmail()\n\t\t\t\t                          .build();\n\t\tmGoogleApiClient = new GoogleApiClient.Builder(this)\n\t\t\t\t                   .enableAutoManage(this /* FragmentActivity */,\n\t\t\t\t\t\t                   this /* OnConnectionFailedListener */)\n\t\t\t\t                   .addApi(Auth.GOOGLE_SIGN_IN_API, gso)\n\t\t\t\t                   .build();\n\t\tbinding.signInGoogle.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tsignInGoogle();\n\t\t\t}\n\t\t});\n\t\tbinding.signIn.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tsignInWithEmailAndPassword();\n\t\t\t}\n\t\t});\n\t\tbinding.signIn.setEnabled(false);\n\t\tbinding.userEmail.addTextChangedListener(new TextWatcher() {\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tenableOrDisableButton(binding.signIn);\n\t\t\t}\n\t\t});\n\t\tbinding.userPasswd.addTextChangedListener(new TextWatcher() {\n\t\t\t@Override\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void afterTextChanged(Editable s) {\n\t\t\t\tenableOrDisableButton(binding.signIn);\n\t\t\t}\n\t\t});\n\t}\n\t\n\tprivate void enableOrDisableButton(View view){\n\t\tString userEmail = binding.userEmail.getText().toString();\n\t\tString userPassword = binding.userPasswd.getText().toString();\n\t\t\n\t\tif (!userEmail.equals(\"\") && !userPassword.equals(\"\")){\n\t\t\tview.setEnabled(true);\n\t\t}\n\t\telse if (binding.signIn.isEnabled()){\n\t\t\tview.setEnabled(false);\n\t\t}\n\t}\n\t\n\tpublic void remindPassword(View v) {\n\t\n\t}\n\t\n\tpublic void onClick(View v) {\n\t\tint pressed = v.getId();\n\t\tIntent intent = new Intent();\n\t\t\n\t\tswitch (pressed){\n\t\t\tcase R.id.remind_passwd:\n\t\t\t\tintent.setClass(this, RemindActivity.class);\n\t\t\t\tstartActivity(intent);\n\t\t\t\tbreak;\n\t\t\tcase R.id.register:\n\t\t\t\tintent.setClass(this, RegistrationActivity.class);\n\t\t\t\tstartActivity(intent);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate void signInGoogle() {\n\t\t// TODO (Method not working)\n\t\tLog.d(TAG, \"signInGoogle\");\n\t\t\n\t\tIntent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);\n\t\tstartActivityForResult(signInIntent, Const.RC_SIGN_IN_GOOGLE);\n\t}\n\t\n\tprivate void signInWithEmailAndPassword(){\n\t\tString pass = binding.userPasswd.getText().toString();\n\t\tString eMail = binding.userEmail.getText().toString();\n\t\tmFirebaseAuth.signInWithEmailAndPassword(eMail, pass)\n\t\t\t\t.addOnCompleteListener(new OnCompleteListener<AuthResult>() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\n\t\t\t\t\t\tif (task.isSuccessful()){\n\t\t\t\t\t\t\tIntent intent = new Intent();\n\t\t\t\t\t\t\tintent.setClass(getBaseContext(), HomeActivity.class);\n\t\t\t\t\t\t\tintent.putExtra(KEY_USENAME, task.getResult().getUser().getDisplayName());\n\t\t\t\t\t\t\tUser.currentUser = new User(task.getResult().getUser().getDisplayName());\n\t\t\t\t\t\t\tLog.d(TAG, \"Task \" +\" is successful\");\n\t\t\t\t\t\t\tstartActivity(intent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tLog.d(TAG, \"Task \" +\" is failure\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t}\n\t\n\t@SuppressLint(\"ShowToast\")\n\t@Override\n\tpublic void onActivityResult(int requestCode, int resultCode, Intent data) {\n\t\tsuper.onActivityResult(requestCode, resultCode, data);\n\t\tLog.d(TAG, \"onActivityResult\");\n\t\t// Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\n\t\tif (requestCode == Const.RC_SIGN_IN_GOOGLE) {\n\t\t\tGoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);\n\t\t\tif (result.isSuccess()) {\n\t\t\t\tLog.e(TAG, \"Result is Success\");\n\t\t\t\t// Google Sign-In was successful, authenticate with Firebase\n\t\t\t\tGoogleSignInAccount account = result.getSignInAccount();\n\t\t\t\tfirebaseAuthWithGoogle(account);\n\t\t\t\tIntent intent = new Intent(this, HomeActivity.class);\n\t\t\t\tstartActivity(intent);\n\t\t\t} else {\n\t\t\t\t// Google Sign-In failed\n\t\t\t\tToast.makeText(this, \"Авторизация не удалась!\", Toast.LENGTH_SHORT);\n\t\t\t\tLog.e(TAG, \"Google Sign-In failed.\" + result.getStatus().getStatusMessage());\n\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate void firebaseAuthWithGoogle(final GoogleSignInAccount acct) {\n\t\tLog.d(TAG, \"firebaseAuthWithGooogle:\" + acct.getId());\n\t\tAuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);\n\t\t\n\t\tmFirebaseAuth.signInWithCredential(credential)\n\t\t\t\t.addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onComplete(@NonNull Task<AuthResult> task) {\n\t\t\t\t\t\tLog.d(TAG, \"signInWithCredential:onComplete:\" + task.isSuccessful());\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If sign in fails, display a message to the user. If sign in succeeds\n\t\t\t\t\t\t// the auth state listener will be notified and logic to handle the\n\t\t\t\t\t\t// signed in user can be handled in the listener.\n\t\t\t\t\t\tif (!task.isSuccessful()) {\n\t\t\t\t\t\t\tLog.w(TAG, \"signInWithCredential\", task.getException());\n\t\t\t\t\t\t\tToast.makeText(SignInActivity.this, \"Authentication failed.\",\n\t\t\t\t\t\t\t\t\tToast.LENGTH_SHORT).show();\n\t\t\t\t\t\t\tIntent intent = new Intent(getBaseContext(), HomeActivity.class);\n\t\t\t\t\t\t\tstartActivity(intent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLog.d(TAG, \"name: \" + acct.getDisplayName() + \"\\n\".concat(acct.getEmail()));\n\t\t\t\t\t\t\tstartActivity(new Intent(SignInActivity.this, AuthActivity.class));\n\t\t\t\t\t\t\tfinish();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t}\n\t\n\t@Override\n\tpublic void onConnectionFailed(@NonNull ConnectionResult connectionResult) {\n\t\t\n\t\t// An unresolvable error has occurred and Google APIs (including Sign-In) will not\n\t\t// be available.\n\t\tLog.d(TAG, \"onConnectionFailed:\" + connectionResult);\n\t\tToast.makeText(this, \"Google Play Services error.\", Toast.LENGTH_SHORT).show();\n\t\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/SignInActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/SignInActivity.java	(date 1604520122000)
@@ -32,199 +32,197 @@
 import skarlat.dev.ecoproject.databinding.ActivitySignInBinding;
 
 public class SignInActivity extends AppCompatActivity implements
-		GoogleApiClient.OnConnectionFailedListener{
-	private final String TAG = "SignInActivity";
-	private final int RC_SIGN_IN = 10;
-	private final String KEY_USENAME = "USERNAME";
-	private GoogleApiClient mGoogleApiClient;
-	private FirebaseAuth mFirebaseAuth;
-	private TextInputEditText emailEditText;
-	private TextInputEditText passwdEditText;
-	ActivitySignInBinding binding;
-	
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		binding = ActivitySignInBinding.inflate(getLayoutInflater());
-		setContentView(binding.getRoot());
-		mFirebaseAuth = FirebaseAuth.getInstance();
-		GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
-				                          .requestIdToken(getString(R.string.default_web_client_id))
-				                          .requestEmail()
-				                          .build();
-		mGoogleApiClient = new GoogleApiClient.Builder(this)
-				                   .enableAutoManage(this /* FragmentActivity */,
-						                   this /* OnConnectionFailedListener */)
-				                   .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
-				                   .build();
-		binding.signInGoogle.setOnClickListener(new View.OnClickListener() {
-			@Override
-			public void onClick(View v) {
-				signInGoogle();
-			}
-		});
-		binding.signIn.setOnClickListener(new View.OnClickListener() {
-			@Override
-			public void onClick(View v) {
-				signInWithEmailAndPassword();
-			}
-		});
-		binding.signIn.setEnabled(false);
-		binding.userEmail.addTextChangedListener(new TextWatcher() {
-			@Override
-			public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-			
-			}
-			
-			@Override
-			public void onTextChanged(CharSequence s, int start, int before, int count) {
-			
-			}
-			
-			@Override
-			public void afterTextChanged(Editable s) {
-				enableOrDisableButton(binding.signIn);
-			}
-		});
-		binding.userPasswd.addTextChangedListener(new TextWatcher() {
-			@Override
-			public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-			
-			}
-			
-			@Override
-			public void onTextChanged(CharSequence s, int start, int before, int count) {
-			
-			}
-			
-			@Override
-			public void afterTextChanged(Editable s) {
-				enableOrDisableButton(binding.signIn);
-			}
-		});
-	}
-	
-	private void enableOrDisableButton(View view){
-		String userEmail = binding.userEmail.getText().toString();
-		String userPassword = binding.userPasswd.getText().toString();
-		
-		if (!userEmail.equals("") && !userPassword.equals("")){
-			view.setEnabled(true);
-		}
-		else if (binding.signIn.isEnabled()){
-			view.setEnabled(false);
-		}
-	}
-	
-	public void remindPassword(View v) {
-	
-	}
-	
-	public void onClick(View v) {
-		int pressed = v.getId();
-		Intent intent = new Intent();
-		
-		switch (pressed){
-			case R.id.remind_passwd:
-				intent.setClass(this, RemindActivity.class);
-				startActivity(intent);
-				break;
-			case R.id.register:
-				intent.setClass(this, RegistrationActivity.class);
-				startActivity(intent);
-				break;
-		}
-	}
-	
-	private void signInGoogle() {
-		// TODO (Method not working)
-		Log.d(TAG, "signInGoogle");
-		
-		Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
-		startActivityForResult(signInIntent, Const.RC_SIGN_IN_GOOGLE);
-	}
-	
-	private void signInWithEmailAndPassword(){
-		String pass = binding.userPasswd.getText().toString();
-		String eMail = binding.userEmail.getText().toString();
-		mFirebaseAuth.signInWithEmailAndPassword(eMail, pass)
-				.addOnCompleteListener(new OnCompleteListener<AuthResult>() {
-					@Override
-					public void onComplete(@NonNull Task<AuthResult> task) {
-						if (task.isSuccessful()){
-							Intent intent = new Intent();
-							intent.setClass(getBaseContext(), HomeActivity.class);
-							intent.putExtra(KEY_USENAME, task.getResult().getUser().getDisplayName());
-							User.currentUser = new User(task.getResult().getUser().getDisplayName());
-							Log.d(TAG, "Task " +" is successful");
-							startActivity(intent);
-						}
-						else{
-							Log.d(TAG, "Task " +" is failure");
-						}
-					}
-				});
-	}
-	
-	@SuppressLint("ShowToast")
-	@Override
-	public void onActivityResult(int requestCode, int resultCode, Intent data) {
-		super.onActivityResult(requestCode, resultCode, data);
-		Log.d(TAG, "onActivityResult");
-		// Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);
-		if (requestCode == Const.RC_SIGN_IN_GOOGLE) {
-			GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
-			if (result.isSuccess()) {
-				Log.e(TAG, "Result is Success");
-				// Google Sign-In was successful, authenticate with Firebase
-				GoogleSignInAccount account = result.getSignInAccount();
-				firebaseAuthWithGoogle(account);
-				Intent intent = new Intent(this, HomeActivity.class);
-				startActivity(intent);
-			} else {
-				// Google Sign-In failed
-				Toast.makeText(this, "Авторизация не удалась!", Toast.LENGTH_SHORT);
-				Log.e(TAG, "Google Sign-In failed." + result.getStatus().getStatusMessage());
+        GoogleApiClient.OnConnectionFailedListener {
+    private final String TAG = "SignInActivity";
+    private final int RC_SIGN_IN = 10;
+    private final String KEY_USENAME = "USERNAME";
+    private GoogleApiClient mGoogleApiClient;
+    private FirebaseAuth mFirebaseAuth;
+    private TextInputEditText emailEditText;
+    private TextInputEditText passwdEditText;
+    ActivitySignInBinding binding;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        binding = ActivitySignInBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+        mFirebaseAuth = FirebaseAuth.getInstance();
+        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
+                .requestIdToken(getString(R.string.default_web_client_id))
+                .requestEmail()
+                .build();
+        mGoogleApiClient = new GoogleApiClient.Builder(this)
+                .enableAutoManage(this /* FragmentActivity */,
+                        this /* OnConnectionFailedListener */)
+                .addApi(Auth.GOOGLE_SIGN_IN_API, gso)
+                .build();
+        binding.signInGoogle.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                signInGoogle();
+            }
+        });
+        binding.signIn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                signInWithEmailAndPassword();
+            }
+        });
+        binding.signIn.setEnabled(false);
+        binding.userEmail.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+                enableOrDisableButton(binding.signIn);
+            }
+        });
+        binding.userPasswd.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+                enableOrDisableButton(binding.signIn);
+            }
+        });
+    }
+
+    private void enableOrDisableButton(View view) {
+        String userEmail = binding.userEmail.getText().toString();
+        String userPassword = binding.userPasswd.getText().toString();
+
+        if (!userEmail.equals("") && !userPassword.equals("")) {
+            view.setEnabled(true);
+        } else if (binding.signIn.isEnabled()) {
+            view.setEnabled(false);
+        }
+    }
+
+    public void remindPassword(View v) {
+
+    }
+
+    public void onClick(View v) {
+        int pressed = v.getId();
+        Intent intent = new Intent();
+
+        switch (pressed) {
+            case R.id.remind_passwd:
+                intent.setClass(this, RemindPasswordActivity.class);
+                startActivity(intent);
+                break;
+            case R.id.register:
+                intent.setClass(this, RegistrationActivity.class);
+                startActivity(intent);
+                break;
+        }
+    }
+
+    private void signInGoogle() {
+        // TODO (Method not working)
+        Log.d(TAG, "signInGoogle");
+
+        Intent signInIntent = Auth.GoogleSignInApi.getSignInIntent(mGoogleApiClient);
+        startActivityForResult(signInIntent, Const.RC_SIGN_IN_GOOGLE);
+    }
+
+    private void signInWithEmailAndPassword() {
+        String pass = binding.userPasswd.getText().toString();
+        String eMail = binding.userEmail.getText().toString();
+        mFirebaseAuth.signInWithEmailAndPassword(eMail, pass)
+                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        if (task.isSuccessful()) {
+                            Intent intent = new Intent();
+                            intent.setClass(getBaseContext(), HomeActivity.class);
+                            intent.putExtra(KEY_USENAME, task.getResult().getUser().getDisplayName());
+                            User.currentUser = new User(task.getResult().getUser().getDisplayName());
+                            Log.d(TAG, "Task " + " is successful");
+                            startActivity(intent);
+                        } else {
+                            Log.d(TAG, "Task " + " is failure");
+                        }
+                    }
+                });
+    }
+
+    @SuppressLint("ShowToast")
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.d(TAG, "onActivityResult");
+        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);
+        if (requestCode == Const.RC_SIGN_IN_GOOGLE) {
+            GoogleSignInResult result = Auth.GoogleSignInApi.getSignInResultFromIntent(data);
+            if (result.isSuccess()) {
+                Log.e(TAG, "Result is Success");
+                // Google Sign-In was successful, authenticate with Firebase
+                GoogleSignInAccount account = result.getSignInAccount();
+                firebaseAuthWithGoogle(account);
+                Intent intent = new Intent(this, HomeActivity.class);
+                startActivity(intent);
+            } else {
+                // Google Sign-In failed
+                Toast.makeText(this, "Авторизация не удалась!", Toast.LENGTH_SHORT);
+                Log.e(TAG, "Google Sign-In failed." + result.getStatus().getStatusMessage());
 
-			}
-		}
-	}
-	
-	private void firebaseAuthWithGoogle(final GoogleSignInAccount acct) {
-		Log.d(TAG, "firebaseAuthWithGooogle:" + acct.getId());
-		AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);
-		
-		mFirebaseAuth.signInWithCredential(credential)
-				.addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
-					@Override
-					public void onComplete(@NonNull Task<AuthResult> task) {
-						Log.d(TAG, "signInWithCredential:onComplete:" + task.isSuccessful());
-						
-						// If sign in fails, display a message to the user. If sign in succeeds
-						// the auth state listener will be notified and logic to handle the
-						// signed in user can be handled in the listener.
-						if (!task.isSuccessful()) {
-							Log.w(TAG, "signInWithCredential", task.getException());
-							Toast.makeText(SignInActivity.this, "Authentication failed.",
-									Toast.LENGTH_SHORT).show();
-							Intent intent = new Intent(getBaseContext(), HomeActivity.class);
-							startActivity(intent);
-						} else {
-							Log.d(TAG, "name: " + acct.getDisplayName() + "\n".concat(acct.getEmail()));
-							startActivity(new Intent(SignInActivity.this, AuthActivity.class));
-							finish();
-						}
-					}
-				});
-	}
-	
-	@Override
-	public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
-		
-		// An unresolvable error has occurred and Google APIs (including Sign-In) will not
-		// be available.
-		Log.d(TAG, "onConnectionFailed:" + connectionResult);
-		Toast.makeText(this, "Google Play Services error.", Toast.LENGTH_SHORT).show();
-	
-	}
+            }
+        }
+    }
+
+    private void firebaseAuthWithGoogle(final GoogleSignInAccount acct) {
+        Log.d(TAG, "firebaseAuthWithGooogle:" + acct.getId());
+        AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);
+
+        mFirebaseAuth.signInWithCredential(credential)
+                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<AuthResult> task) {
+                        Log.d(TAG, "signInWithCredential:onComplete:" + task.isSuccessful());
+
+                        // If sign in fails, display a message to the user. If sign in succeeds
+                        // the auth state listener will be notified and logic to handle the
+                        // signed in user can be handled in the listener.
+                        if (!task.isSuccessful()) {
+                            Log.w(TAG, "signInWithCredential", task.getException());
+                            Toast.makeText(SignInActivity.this, "Authentication failed.",
+                                    Toast.LENGTH_SHORT).show();
+                            Intent intent = new Intent(getBaseContext(), HomeActivity.class);
+                            startActivity(intent);
+                        } else {
+                            Log.d(TAG, "name: " + acct.getDisplayName() + "\n".concat(acct.getEmail()));
+                            startActivity(new Intent(SignInActivity.this, AuthActivity.class));
+                            finish();
+                        }
+                    }
+                });
+    }
+
+    @Override
+    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
+
+        // An unresolvable error has occurred and Google APIs (including Sign-In) will not
+        // be available.
+        Log.d(TAG, "onConnectionFailed:" + connectionResult);
+        Toast.makeText(this, "Google Play Services error.", Toast.LENGTH_SHORT).show();
+
+    }
 }
Index: app/src/main/java/skarlat/dev/ecoproject/fragment/UserFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.fragment;\n\nimport android.graphics.drawable.BitmapDrawable;\nimport android.os.Bundle;\n\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.DividerItemDecoration;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.net.URLConnection;\nimport java.util.List;\nimport java.util.Objects;\n\nimport skarlat.dev.ecoproject.EcoCard;\nimport skarlat.dev.ecoproject.R;\nimport skarlat.dev.ecoproject.User;\nimport skarlat.dev.ecoproject.adapter.CategoryAdapter;\nimport skarlat.dev.ecoproject.App;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link UserFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class UserFragment extends Fragment {\n\t// TODO: Rename parameter arguments, choose names that match\n\t// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n\tprivate static final String ARG_PARAM1 = \"param1\";\n\tprivate static final String ARG_PARAM2 = \"param2\";\n\tpublic static UserFragment userFragment;\n\tpublic static String userPhotoUrl;\n\tpublic static String userName;\n\t\n\t// TODO: Rename and change types of parameters\n\tprivate String mParam1;\n\tprivate String mParam2;\n\t\n\tprivate List<EcoCard> cards;\n\t\n\tpublic UserFragment() {\n\t\t// Required empty public constructor\n\t}\n\t\n\t/**\n\t * Use this factory method to create a new instance of\n\t * this fragment using the provided parameters.\n\t *\n\t * @param param1 Parameter 1.\n\t * @param param2 Parameter 2.\n\t * @return A new instance of fragment UserFragment.\n\t */\n\t// TODO: Rename and change types and number of parameters\n\tpublic static UserFragment newInstance(int page) {\n\t\tBundle args = new Bundle();\n\t\targs.putInt(\"UserFragment\", page);\n\t\tUserFragment fragment = new UserFragment();\n\t\tfragment.setArguments(args);\n\t\tuserFragment = fragment;\n\t\treturn fragment;\n\t}\n\t\n\t@Override\n\tpublic void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tif (getArguments() != null) {\n\t\t\tmParam1 = getArguments().getString(ARG_PARAM1);\n\t\t\tmParam2 = getArguments().getString(ARG_PARAM2);\n\t\t}\n\t}\n\tImageView imageView;\n\t\n\t@Override\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container,\n\t                         Bundle savedInstanceState) {\n\t\t// Inflate the layout for this fragment\n\t\tView view = inflater.inflate(R.layout.fragment_user, container, false);\n\t\tRecyclerView recyclerView = (RecyclerView) view.findViewById(R.id.cards_by_category);\n\t\tTextView textView = (TextView) view.findViewById(R.id.user_name);\n\t\t\n\t\timageView = (ImageView) view.findViewById(R.id.profile_image);\n\t\ttextView.setText(User.currentUser.name);\n\t\tRunnable runnable = new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tshowUserAvatar();\n\t\t\t}\n\t\t};\n\t\t\n\t\tcards = App.getDatabase().cardsDao().getAll();\n\t\t\n\t\tFloatingActionButton fab = view.findViewById(R.id.pressBackFromFragment);\n\t\tfab.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tObjects.requireNonNull(getActivity()).onBackPressed();\n\t\t\tonDestroy();}\n\t\t});\n\t\t// @TODO: Заменить заполнение листа с ипользованием БД\n\t\t\n\t\tCategoryAdapter adapter = new CategoryAdapter(getContext(), cards);\n\t\tDividerItemDecoration itemDecoration = new DividerItemDecoration(getContext(), RecyclerView.HORIZONTAL);\n\t\titemDecoration.setDrawable(getResources().getDrawable(R.drawable.divider_category));\n\t\trecyclerView.addItemDecoration(itemDecoration);\n\t\trecyclerView.setAdapter(adapter);\n\t\t\n\t\treturn view;\n\t}\n\t\n\tprivate void showUserAvatar(){\n\t\ttry {\n\t\t\tURL photoURL = new URL(userPhotoUrl);\n\t\t\tURLConnection urlConnection = photoURL.openConnection();\n\t\t\tInputStream inputStream = urlConnection.getInputStream();\n\t\t\timageView.setImageDrawable(new BitmapDrawable(getResources(),inputStream));\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/fragment/UserFragment.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/fragment/UserFragment.java	(date 1604520122000)
@@ -23,7 +23,7 @@
 import java.util.List;
 import java.util.Objects;
 
-import skarlat.dev.ecoproject.EcoCard;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
 import skarlat.dev.ecoproject.R;
 import skarlat.dev.ecoproject.User;
 import skarlat.dev.ecoproject.adapter.CategoryAdapter;
@@ -35,99 +35,101 @@
  * create an instance of this fragment.
  */
 public class UserFragment extends Fragment {
-	// TODO: Rename parameter arguments, choose names that match
-	// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-	private static final String ARG_PARAM1 = "param1";
-	private static final String ARG_PARAM2 = "param2";
-	public static UserFragment userFragment;
-	public static String userPhotoUrl;
-	public static String userName;
-	
-	// TODO: Rename and change types of parameters
-	private String mParam1;
-	private String mParam2;
-	
-	private List<EcoCard> cards;
-	
-	public UserFragment() {
-		// Required empty public constructor
-	}
-	
-	/**
-	 * Use this factory method to create a new instance of
-	 * this fragment using the provided parameters.
-	 *
-	 * @param param1 Parameter 1.
-	 * @param param2 Parameter 2.
-	 * @return A new instance of fragment UserFragment.
-	 */
-	// TODO: Rename and change types and number of parameters
-	public static UserFragment newInstance(int page) {
-		Bundle args = new Bundle();
-		args.putInt("UserFragment", page);
-		UserFragment fragment = new UserFragment();
-		fragment.setArguments(args);
-		userFragment = fragment;
-		return fragment;
-	}
-	
-	@Override
-	public void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		if (getArguments() != null) {
-			mParam1 = getArguments().getString(ARG_PARAM1);
-			mParam2 = getArguments().getString(ARG_PARAM2);
-		}
-	}
-	ImageView imageView;
-	
-	@Override
-	public View onCreateView(LayoutInflater inflater, ViewGroup container,
-	                         Bundle savedInstanceState) {
-		// Inflate the layout for this fragment
-		View view = inflater.inflate(R.layout.fragment_user, container, false);
-		RecyclerView recyclerView = (RecyclerView) view.findViewById(R.id.cards_by_category);
-		TextView textView = (TextView) view.findViewById(R.id.user_name);
-		
-		imageView = (ImageView) view.findViewById(R.id.profile_image);
-		textView.setText(User.currentUser.name);
-		Runnable runnable = new Runnable() {
-			@Override
-			public void run() {
-				showUserAvatar();
-			}
-		};
-		
-		cards = App.getDatabase().cardsDao().getAll();
-		
-		FloatingActionButton fab = view.findViewById(R.id.pressBackFromFragment);
-		fab.setOnClickListener(new View.OnClickListener() {
-			@Override
-			public void onClick(View v) {
-				Objects.requireNonNull(getActivity()).onBackPressed();
-			onDestroy();}
-		});
-		// @TODO: Заменить заполнение листа с ипользованием БД
-		
-		CategoryAdapter adapter = new CategoryAdapter(getContext(), cards);
-		DividerItemDecoration itemDecoration = new DividerItemDecoration(getContext(), RecyclerView.HORIZONTAL);
-		itemDecoration.setDrawable(getResources().getDrawable(R.drawable.divider_category));
-		recyclerView.addItemDecoration(itemDecoration);
-		recyclerView.setAdapter(adapter);
-		
-		return view;
-	}
-	
-	private void showUserAvatar(){
-		try {
-			URL photoURL = new URL(userPhotoUrl);
-			URLConnection urlConnection = photoURL.openConnection();
-			InputStream inputStream = urlConnection.getInputStream();
-			imageView.setImageDrawable(new BitmapDrawable(getResources(),inputStream));
-		} catch (MalformedURLException e) {
-			e.printStackTrace();
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-	}
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+    public static UserFragment userFragment;
+    public static String userPhotoUrl;
+    public static String userName;
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    private List<EcoCard> cards;
+
+    public UserFragment() {
+        // Required empty public constructor
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment UserFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static UserFragment newInstance(int page) {
+        Bundle args = new Bundle();
+        args.putInt("UserFragment", page);
+        UserFragment fragment = new UserFragment();
+        fragment.setArguments(args);
+        userFragment = fragment;
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+    ImageView imageView;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        View view = inflater.inflate(R.layout.fragment_user, container, false);
+        RecyclerView recyclerView = view.findViewById(R.id.cards_by_category);
+        TextView textView = view.findViewById(R.id.user_name);
+
+        imageView = view.findViewById(R.id.profile_image);
+        textView.setText(User.currentUser.name);
+        Runnable runnable = new Runnable() {
+            @Override
+            public void run() {
+                showUserAvatar();
+            }
+        };
+
+        cards = App.getDatabase().cardsDao().getAll();
+
+        FloatingActionButton fab = view.findViewById(R.id.pressBackFromFragment);
+        fab.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Objects.requireNonNull(getActivity()).onBackPressed();
+                onDestroy();
+            }
+        });
+        // @TODO: Заменить заполнение листа с ипользованием БД
+
+        CategoryAdapter adapter = new CategoryAdapter(getContext(), cards);
+        DividerItemDecoration itemDecoration = new DividerItemDecoration(getContext(), RecyclerView.HORIZONTAL);
+        itemDecoration.setDrawable(getResources().getDrawable(R.drawable.divider_category));
+        recyclerView.addItemDecoration(itemDecoration);
+        recyclerView.setAdapter(adapter);
+
+        return view;
+    }
+
+    private void showUserAvatar() {
+        try {
+            URL photoURL = new URL(userPhotoUrl);
+            URLConnection urlConnection = photoURL.openConnection();
+            InputStream inputStream = urlConnection.getInputStream();
+            imageView.setImageDrawable(new BitmapDrawable(getResources(), inputStream));
+        } catch (MalformedURLException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
 }
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/Version.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database;\n\nimport androidx.annotation.NonNull;\nimport androidx.room.Entity;\nimport androidx.room.PrimaryKey;\n\n@Entity\npublic class Version {\n\n   @PrimaryKey\n   @NonNull\n   public String searchKey;\n\n   public long versionContent;\n\n   public int versionUserBar;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/Version.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/Version.java	(date 1604520122000)
@@ -7,12 +7,12 @@
 @Entity
 public class Version {
 
-   @PrimaryKey
-   @NonNull
-   public String searchKey;
+    @PrimaryKey
+    @NonNull
+    public String searchKey;
 
-   public long versionContent;
+    public long versionContent;
 
-   public int versionUserBar;
+    public int versionUserBar;
 
 }
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database;\n\nimport android.util.ArrayMap;\n\nimport androidx.annotation.NonNull;\n\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.GenericTypeIndicator;\nimport com.google.firebase.database.ValueEventListener;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Objects;\n\nimport skarlat.dev.ecoproject.App;\nimport skarlat.dev.ecoproject.Course;\nimport skarlat.dev.ecoproject.EcoCard;\nimport skarlat.dev.ecoproject.EcoSoviet;\nimport skarlat.dev.ecoproject.includes.database.dao.CardsDao;\nimport skarlat.dev.ecoproject.includes.database.dao.CourseDao;\nimport skarlat.dev.ecoproject.includes.database.dao.SovietsDao;\n\n/**\n * @Class - помошник в обработке данных для добавления\\взятия данных\n */\npublic class DatabaseHelper {\n\n    private AppDatabase db = App.getInstance().getDatabase();\n    private CourseDao coursesDao = db.courseDao();\n    private CardsDao cardsDao = db.cardsDao();\n    private SovietsDao sovietsDao = db.sovietsDao();\n\n    /**\n     * функции получения объектов Course из базы\n     * @return Courses\n     */\n    public List<Course> getAllCourses(){\n        return coursesDao.getAll();\n    }\n\n    public Course getCurrentCourse(){\n        return coursesDao.getCurrentCourse();\n    }\n\n    public Course getCourseByName(String courseName){\n        return coursesDao.getByCourseID(courseName);\n    }\n\n    public ArrayList<String> keyStoreCourses(){\n        List<Course> list = getAllCourses();\n        ArrayList<String> keys = new ArrayList<>();\n\n        for (int i = 0; i < list.size() ; i++) {\n            keys.add(list.get(i).courseNameID);\n        }\n        return keys;\n    }\n\n    /**\n     * Функции получения объектов карточек из базы\n     * @return EcoCards\n     */\n    public List<EcoCard> getAllCards(){\n        return cardsDao.getAll();\n    }\n\n    public List<EcoCard> getAllCardsByCourseNameID(String nameID){\n        return cardsDao.getAllByCurs(nameID);\n    }\n\n    /**\n     * Функции получения объектов советов\n     * @param cardName\n     * @return EcoSiviets\n     */\n    public List<EcoSoviet> getAllByCardName(String cardName){\n        return sovietsDao.getAllByCardNameID(cardName);\n    }\n\n    public List<EcoSoviet> getAll(){\n        return sovietsDao.getAll();\n    }\n    public List<EcoSoviet> getAllFavorite(){\n        return sovietsDao.getAllFavorite();\n    }\n\n\n    /**\n     * Возвращает текст остатка карточек в курсе\n     * @param courseNameID\n     * @return String\n     */\n\n    public String getLeftCards(String courseNameID){\n        int active = cardsDao.getAllActive(courseNameID).size();\n        int allCards = cardsDao.getAllByCurs(courseNameID).size();\n        int left = allCards - active;\n        String text = \"Осталось \" + left;\n\n        left = left % 100;\n        int left1 = left % 10;\n\n        if (left == 0)\n            return \"Курс пройден\";\n        if (left > 10 && left < 20)\n            return text + \" карточек\";\n        if (left1 > 1 && left1 < 5)\n            return text + \" карточки\";\n        if (left1 == 1)\n            return \"Осталась \" + left + \" карточка\";\n        return text + \" карточек\";\n    }\n\n\n    /**\n     * Обновляет текущий курс для главного меню курсов\n     * @param courseName\n     */\n\n    public void upDateIsCurrentCourse(String courseName){\n        Course next = coursesDao.getByCourseID(courseName);\n        Course last = coursesDao.getCurrentCourse();\n\n        if (last != null && last.isActive == 1 ){\n            if (last.getProgressBar() >= 100)\n                last.isActive = 2;\n            else\n                last.isActive = 0;\n        }\n        next.isActive = 1;\n\n        if (last != null)\n            coursesDao.update(last);\n        coursesDao.update(next);\n    }\n\n\n    /**\n     * Кодирование массива в формат JSON\n     * @return String - строку в формате JSON\n     * @throws JSONException\n     * @param - не реализована\n     */\n    public String jsonEncode () throws JSONException {\n        JSONObject obj = new JSONObject();\n        JSONObject resultJson = new JSONObject();\n\n        obj.put(\"water_0\", 1);\n        obj.put(\"water_1\", 1);\n        obj.put(\"water_2\", 1);\n\n//\t\tresultJson.put(\"checkList\", obj);\n\n        return obj.toString();\n    }\n\n    /**\n     * Декодирование строки формата JSON в массив\n     * @param json - строка в формате JSON\n     * @return ArrayMap<String, Integer>\n     * @throws JSONException\n     */\n    public ArrayMap<String, Integer> jsonDecode(String json) throws JSONException {\n        JSONObject parser = new JSONObject(json);\n\n        ArrayMap<String, Integer> map = new ArrayMap<>();\n\n        Iterator<String> iterator = parser.keys();\n\n        while (iterator.hasNext()){\n            String key = iterator.next();\n            map.put(key, (Integer) parser.get(key));\n        }\n\n        return map;\n    }\n\n    private int getContentVersion(){\n        Version version = db.versionDao().getVer();\n        return (int) version.versionContent;\n    }\n\n    private int getProgressVersion(){\n        Version version = db.versionDao().getVer();\n        return version.versionUserBar;\n    }\n\n    private void updateTips(HashMap<String, Object> map, String cardName){\n        HashMap<String, Object > tips = (HashMap<String, Object>) map.get(cardName);\n        for (HashMap.Entry entry: tips.entrySet()\n             ) {\n            HashMap<String, Object> tip = (HashMap<String, Object>) entry.getValue();\n            EcoSoviet newEcoSoviet = new EcoSoviet();\n            newEcoSoviet.isFavorite = 0;\n            newEcoSoviet.cardNameID = cardName;\n            newEcoSoviet.description = (String) tip.get(\"description\");\n            newEcoSoviet.title = (String) tip.get(\"title\");\n            sovietsDao.insert(newEcoSoviet);\n        }\n    }\n\n    private void updateCards(HashMap<String,Object> map, String courseName){\n        HashMap<String, Object > cards = (HashMap<String, Object>) map.get(\"Cards\");\n        HashMap<String, Object> cardLvl = (HashMap<String, Object>) cards.get(courseName);\n\n        for (HashMap.Entry entry: cardLvl.entrySet()\n             ) {\n            HashMap<String, Object> card = (HashMap<String, Object>) entry.getValue();\n            EcoCard newCard = new EcoCard();\n            long active = (long) card.get(\"isActive\");\n            newCard.isActive = (int) active;\n            newCard.cardNameID = (String) Objects.requireNonNull(card.get(\"cardNameID\"));\n            newCard.courseNameID = courseName;\n            newCard.description = (String) card.get(\"description\");\n            newCard.fullDescription = (String) card.get(\"fullDescription\");\n            newCard.title = (String) card.get(\"title\");\n            cardsDao.insert(newCard);\n            updateTips((HashMap<String, Object>) map.get(\"Tips\"), newCard.cardNameID);\n        }\n    }\n\n    private void updateCourses(HashMap<String,Object> map){\n        ArrayList<String> keys = keyStoreCourses();\n        HashMap<String, Object> courses = (HashMap<String, Object>) map.get(\"Courses\");\n        for (HashMap.Entry entry: courses.entrySet()\n             ) {\n            HashMap<String, Object> course = (HashMap<String, Object>) entry.getValue();\n            if (!keys.contains(course.get(\"courseNameID\"))){\n                Course newCourse = new Course();\n                newCourse.courseNameID = (String) course.get(\"courseNameID\");\n                newCourse.isActive = 0;\n                newCourse.description = (String) course.get(\"description\");\n                newCourse.fullDescription = (String) course.get(\"fullDescription\");\n                newCourse.title = (String) course.get(\"title\");\n                newCourse.progressBar = 0;\n                coursesDao.insert(newCourse);\n                updateCards(map, newCourse.courseNameID);\n            }\n        }\n    }\n\n\n\n    public void updateDatabase(){\n        FirebaseDatabase mDb = FirebaseDatabase.getInstance();\n        DatabaseReference mRef = (DatabaseReference) mDb.getReference();\n        mRef.child(\"content\").addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n\n                GenericTypeIndicator<HashMap<String,Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {};\n                HashMap<String, Object> map = dataSnapshot.getValue(indicator);\n\n               long verFirebase = (long) map.get(\"version\");\n               int verLocalbase = (int) getContentVersion();\n               if (verFirebase > verLocalbase){\n                   updateCourses(map);\n                   Version version = db.versionDao().getVer();\n                   version.versionContent = (int) verFirebase;\n                   db.versionDao().update(version);\n               }\n                updateUserProfile();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n\n    }\n\n    private void updateUserProgress(HashMap<String, Object> map){\n        HashMap<String, Objects> courseProgress = (HashMap<String, Objects>) map.get(\"Courses\");\n        HashMap<String, Objects> cardProgress = (HashMap<String, Objects>) map.get(\"Cards\");\n        HashMap<String, Objects> tip = (HashMap<String, Objects>) map.get(\"Tips\");\n        for (HashMap.Entry entry: courseProgress.entrySet()\n             ) {\n            Course course = db.courseDao().getByCourseID((String) entry.getKey());\n            HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();\n            long progress = (long) temp.get(\"progress\");\n            course.progressBar = (int) progress;\n            if (progress >= 100)\n                course.setStatus(Course.Status.FINISHED);\n            db.courseDao().update(course);\n        }\n        for (HashMap.Entry entry: cardProgress.entrySet()\n             ) {\n            EcoCard card = db.cardsDao().getByCardID((String) entry.getKey());\n            HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();\n            long status = (long) temp.get(\"status\");\n            card.isActive = (int) status;\n            db.cardsDao().update(card);\n        }\n\n        for (HashMap.Entry entry: tip.entrySet()\n             ) {\n            EcoSoviet ecoSoviet = db.sovietsDao().getByTipID(Integer.parseInt((String) entry.getKey()));\n            HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();\n            long status = (long) temp.get(\"status\");\n            ecoSoviet.isFavorite = (int) status;\n            db.sovietsDao().update(ecoSoviet);\n        }\n\n    }\n\n    public void updateFirebaseProgress(String group, String child, String key, int value){\n        FirebaseDatabase mDb = FirebaseDatabase.getInstance();\n        DatabaseReference mRef = (DatabaseReference) mDb.getReference();\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\n        FirebaseUser user = mAuth.getCurrentUser();\n//        if (child != null && group != null)\n//            mRef.child(user.getUid()).child(\"progress\").child(group).child(child).child(key).setValue(value);\n//        else\n//            mRef.child(user.getUid()).child(\"progress\").child(key).setValue(value);\n    }\n\n    public void updateUserProfile(){\n        FirebaseDatabase mDb = FirebaseDatabase.getInstance();\n        DatabaseReference mRef = (DatabaseReference) mDb.getReference();\n        FirebaseAuth mAuth = FirebaseAuth.getInstance();\n        FirebaseUser user = mAuth.getCurrentUser();\n        mRef.setPriority(1);\n        mRef.child(user.getUid()).child(\"progress\").addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                GenericTypeIndicator<HashMap<String,Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {};\n                HashMap<String, Object> map = dataSnapshot.getValue(indicator);\n                if (map == null){\n                    updateFirebaseProgress(null,null,\"version\", 1);\n                }else{\n                    long ver = (long) map.get(\"version\");\n                    int localVer = getProgressVersion();\n                    if (ver > localVer) {\n                        updateUserProgress(map);\n                        Version version = db.versionDao().getVer();\n                        version.versionUserBar = (int) ver;\n                        db.versionDao().update(version);\n                    }\n                }\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError databaseError) {\n\n            }\n        });\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/DatabaseHelper.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/DatabaseHelper.java	(date 1604520122000)
@@ -23,9 +23,9 @@
 import java.util.Objects;
 
 import skarlat.dev.ecoproject.App;
-import skarlat.dev.ecoproject.Course;
-import skarlat.dev.ecoproject.EcoCard;
-import skarlat.dev.ecoproject.EcoSoviet;
+import skarlat.dev.ecoproject.includes.dataclass.Course;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
+import skarlat.dev.ecoproject.includes.dataclass.EcoSoviet;
 import skarlat.dev.ecoproject.includes.database.dao.CardsDao;
 import skarlat.dev.ecoproject.includes.database.dao.CourseDao;
 import skarlat.dev.ecoproject.includes.database.dao.SovietsDao;
@@ -35,32 +35,33 @@
  */
 public class DatabaseHelper {
 
-    private AppDatabase db = App.getInstance().getDatabase();
+    private AppDatabase db = App.getDatabase();
     private CourseDao coursesDao = db.courseDao();
     private CardsDao cardsDao = db.cardsDao();
     private SovietsDao sovietsDao = db.sovietsDao();
 
     /**
      * функции получения объектов Course из базы
+     *
      * @return Courses
      */
-    public List<Course> getAllCourses(){
+    public List<Course> getAllCourses() {
         return coursesDao.getAll();
     }
 
-    public Course getCurrentCourse(){
+    public Course getCurrentCourse() {
         return coursesDao.getCurrentCourse();
     }
 
-    public Course getCourseByName(String courseName){
+    public Course getCourseByName(String courseName) {
         return coursesDao.getByCourseID(courseName);
     }
 
-    public ArrayList<String> keyStoreCourses(){
+    public ArrayList<String> keyStoreCourses() {
         List<Course> list = getAllCourses();
         ArrayList<String> keys = new ArrayList<>();
 
-        for (int i = 0; i < list.size() ; i++) {
+        for (int i = 0; i < list.size(); i++) {
             keys.add(list.get(i).courseNameID);
         }
         return keys;
@@ -68,40 +69,44 @@
 
     /**
      * Функции получения объектов карточек из базы
+     *
      * @return EcoCards
      */
-    public List<EcoCard> getAllCards(){
+    public List<EcoCard> getAllCards() {
         return cardsDao.getAll();
     }
 
-    public List<EcoCard> getAllCardsByCourseNameID(String nameID){
+    public List<EcoCard> getAllCardsByCourseNameID(String nameID) {
         return cardsDao.getAllByCurs(nameID);
     }
 
     /**
      * Функции получения объектов советов
+     *
      * @param cardName
      * @return EcoSiviets
      */
-    public List<EcoSoviet> getAllByCardName(String cardName){
+    public List<EcoSoviet> getAllByCardName(String cardName) {
         return sovietsDao.getAllByCardNameID(cardName);
     }
 
-    public List<EcoSoviet> getAll(){
+    public List<EcoSoviet> getAll() {
         return sovietsDao.getAll();
     }
-    public List<EcoSoviet> getAllFavorite(){
+
+    public List<EcoSoviet> getAllFavorite() {
         return sovietsDao.getAllFavorite();
     }
 
 
     /**
      * Возвращает текст остатка карточек в курсе
+     *
      * @param courseNameID
      * @return String
      */
 
-    public String getLeftCards(String courseNameID){
+    public String getLeftCards(String courseNameID) {
         int active = cardsDao.getAllActive(courseNameID).size();
         int allCards = cardsDao.getAllByCurs(courseNameID).size();
         int left = allCards - active;
@@ -124,14 +129,15 @@
 
     /**
      * Обновляет текущий курс для главного меню курсов
+     *
      * @param courseName
      */
 
-    public void upDateIsCurrentCourse(String courseName){
+    public void upDateIsCurrentCourse(String courseName) {
         Course next = coursesDao.getByCourseID(courseName);
         Course last = coursesDao.getCurrentCourse();
 
-        if (last != null && last.isActive == 1 ){
+        if (last != null && last.isActive == 1) {
             if (last.getProgressBar() >= 100)
                 last.isActive = 2;
             else
@@ -147,11 +153,12 @@
 
     /**
      * Кодирование массива в формат JSON
+     *
+     * @param - не реализована
      * @return String - строку в формате JSON
      * @throws JSONException
-     * @param - не реализована
      */
-    public String jsonEncode () throws JSONException {
+    public String jsonEncode() throws JSONException {
         JSONObject obj = new JSONObject();
         JSONObject resultJson = new JSONObject();
 
@@ -166,6 +173,7 @@
 
     /**
      * Декодирование строки формата JSON в массив
+     *
      * @param json - строка в формате JSON
      * @return ArrayMap<String, Integer>
      * @throws JSONException
@@ -177,7 +185,7 @@
 
         Iterator<String> iterator = parser.keys();
 
-        while (iterator.hasNext()){
+        while (iterator.hasNext()) {
             String key = iterator.next();
             map.put(key, (Integer) parser.get(key));
         }
@@ -185,20 +193,20 @@
         return map;
     }
 
-    private int getContentVersion(){
+    private int getContentVersion() {
         Version version = db.versionDao().getVer();
         return (int) version.versionContent;
     }
 
-    private int getProgressVersion(){
+    private int getProgressVersion() {
         Version version = db.versionDao().getVer();
         return version.versionUserBar;
     }
 
-    private void updateTips(HashMap<String, Object> map, String cardName){
-        HashMap<String, Object > tips = (HashMap<String, Object>) map.get(cardName);
-        for (HashMap.Entry entry: tips.entrySet()
-             ) {
+    private void updateTips(HashMap<String, Object> map, String cardName) {
+        HashMap<String, Object> tips = (HashMap<String, Object>) map.get(cardName);
+        for (HashMap.Entry entry : tips.entrySet()
+        ) {
             HashMap<String, Object> tip = (HashMap<String, Object>) entry.getValue();
             EcoSoviet newEcoSoviet = new EcoSoviet();
             newEcoSoviet.isFavorite = 0;
@@ -209,12 +217,12 @@
         }
     }
 
-    private void updateCards(HashMap<String,Object> map, String courseName){
-        HashMap<String, Object > cards = (HashMap<String, Object>) map.get("Cards");
+    private void updateCards(HashMap<String, Object> map, String courseName) {
+        HashMap<String, Object> cards = (HashMap<String, Object>) map.get("Cards");
         HashMap<String, Object> cardLvl = (HashMap<String, Object>) cards.get(courseName);
 
-        for (HashMap.Entry entry: cardLvl.entrySet()
-             ) {
+        for (HashMap.Entry entry : cardLvl.entrySet()
+        ) {
             HashMap<String, Object> card = (HashMap<String, Object>) entry.getValue();
             EcoCard newCard = new EcoCard();
             long active = (long) card.get("isActive");
@@ -229,13 +237,13 @@
         }
     }
 
-    private void updateCourses(HashMap<String,Object> map){
+    private void updateCourses(HashMap<String, Object> map) {
         ArrayList<String> keys = keyStoreCourses();
         HashMap<String, Object> courses = (HashMap<String, Object>) map.get("Courses");
-        for (HashMap.Entry entry: courses.entrySet()
-             ) {
+        for (HashMap.Entry entry : courses.entrySet()
+        ) {
             HashMap<String, Object> course = (HashMap<String, Object>) entry.getValue();
-            if (!keys.contains(course.get("courseNameID"))){
+            if (!keys.contains(course.get("courseNameID"))) {
                 Course newCourse = new Course();
                 newCourse.courseNameID = (String) course.get("courseNameID");
                 newCourse.isActive = 0;
@@ -250,25 +258,25 @@
     }
 
 
-
-    public void updateDatabase(){
+    public void updateDatabase() {
         FirebaseDatabase mDb = FirebaseDatabase.getInstance();
-        DatabaseReference mRef = (DatabaseReference) mDb.getReference();
+        DatabaseReference mRef = mDb.getReference();
         mRef.child("content").addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
 
-                GenericTypeIndicator<HashMap<String,Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {};
+                GenericTypeIndicator<HashMap<String, Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {
+                };
                 HashMap<String, Object> map = dataSnapshot.getValue(indicator);
 
-               long verFirebase = (long) map.get("version");
-               int verLocalbase = (int) getContentVersion();
-               if (verFirebase > verLocalbase){
-                   updateCourses(map);
-                   Version version = db.versionDao().getVer();
-                   version.versionContent = (int) verFirebase;
-                   db.versionDao().update(version);
-               }
+                long verFirebase = (long) map.get("version");
+                int verLocalbase = getContentVersion();
+                if (verFirebase > verLocalbase) {
+                    updateCourses(map);
+                    Version version = db.versionDao().getVer();
+                    version.versionContent = (int) verFirebase;
+                    db.versionDao().update(version);
+                }
                 updateUserProfile();
             }
 
@@ -280,12 +288,12 @@
 
     }
 
-    private void updateUserProgress(HashMap<String, Object> map){
+    private void updateUserProgress(HashMap<String, Object> map) {
         HashMap<String, Objects> courseProgress = (HashMap<String, Objects>) map.get("Courses");
         HashMap<String, Objects> cardProgress = (HashMap<String, Objects>) map.get("Cards");
         HashMap<String, Objects> tip = (HashMap<String, Objects>) map.get("Tips");
-        for (HashMap.Entry entry: courseProgress.entrySet()
-             ) {
+        for (HashMap.Entry entry : courseProgress.entrySet()
+        ) {
             Course course = db.courseDao().getByCourseID((String) entry.getKey());
             HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();
             long progress = (long) temp.get("progress");
@@ -294,8 +302,8 @@
                 course.setStatus(Course.Status.FINISHED);
             db.courseDao().update(course);
         }
-        for (HashMap.Entry entry: cardProgress.entrySet()
-             ) {
+        for (HashMap.Entry entry : cardProgress.entrySet()
+        ) {
             EcoCard card = db.cardsDao().getByCardID((String) entry.getKey());
             HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();
             long status = (long) temp.get("status");
@@ -303,8 +311,8 @@
             db.cardsDao().update(card);
         }
 
-        for (HashMap.Entry entry: tip.entrySet()
-             ) {
+        for (HashMap.Entry entry : tip.entrySet()
+        ) {
             EcoSoviet ecoSoviet = db.sovietsDao().getByTipID(Integer.parseInt((String) entry.getKey()));
             HashMap<String, Object> temp = (HashMap<String, Object>) entry.getValue();
             long status = (long) temp.get("status");
@@ -314,9 +322,9 @@
 
     }
 
-    public void updateFirebaseProgress(String group, String child, String key, int value){
+    public void updateFirebaseProgress(String group, String child, String key, int value) {
         FirebaseDatabase mDb = FirebaseDatabase.getInstance();
-        DatabaseReference mRef = (DatabaseReference) mDb.getReference();
+        DatabaseReference mRef = mDb.getReference();
         FirebaseAuth mAuth = FirebaseAuth.getInstance();
         FirebaseUser user = mAuth.getCurrentUser();
 //        if (child != null && group != null)
@@ -325,20 +333,21 @@
 //            mRef.child(user.getUid()).child("progress").child(key).setValue(value);
     }
 
-    public void updateUserProfile(){
+    public void updateUserProfile() {
         FirebaseDatabase mDb = FirebaseDatabase.getInstance();
-        DatabaseReference mRef = (DatabaseReference) mDb.getReference();
+        DatabaseReference mRef = mDb.getReference();
         FirebaseAuth mAuth = FirebaseAuth.getInstance();
         FirebaseUser user = mAuth.getCurrentUser();
         mRef.setPriority(1);
         mRef.child(user.getUid()).child("progress").addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                GenericTypeIndicator<HashMap<String,Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {};
+                GenericTypeIndicator<HashMap<String, Object>> indicator = new GenericTypeIndicator<HashMap<String, Object>>() {
+                };
                 HashMap<String, Object> map = dataSnapshot.getValue(indicator);
-                if (map == null){
-                    updateFirebaseProgress(null,null,"version", 1);
-                }else{
+                if (map == null) {
+                    updateFirebaseProgress(null, null, "version", 1);
+                } else {
                     long ver = (long) map.get("version");
                     int localVer = getProgressVersion();
                     if (ver > localVer) {
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/DataBaseCopy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database;\n\nimport android.content.Context;\nimport android.util.Log;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\npublic class DataBaseCopy\n{\n    private static String TAG = DataBaseCopy.class.getName();\n    private  String DB_PATH; //= \"/data/data/com.example.yourproject/database/\";\n    private static String DB_NAME = \"database\";\n    private final Context myContext;\n\n    public DataBaseCopy(Context context)\n    {\n\n        this.myContext = context;\n        DB_PATH=\"/data/data/\" + context.getPackageName() + \"/\" + \"databases/\";\n        Log.v(\"log_tag\", \"DBPath: \" + DB_PATH);\n    }\n\n    public void createDataBase() throws IOException {\n        boolean dbExist = checkDataBase();\n        if(dbExist){\n            Log.v(\"log_tag\", \"database.db does exist\");\n        }else{\n            Log.v(\"log_tag\", \"database.db does not exist\");\n            try {\n                copyDataBase();\n            } catch (IOException e) {\n                throw new Error(\"Error copying database.db\");\n            }\n        }\n    }\n\n    private void copyDataBase() throws IOException{\n        InputStream myInput = myContext.getAssets().open(DB_NAME);\n        String outFileName = DB_PATH + DB_NAME;\n        OutputStream myOutput = new FileOutputStream(outFileName);\n        byte[] buffer = new byte[1024];\n        int length;\n        while ((length = myInput.read(buffer))>0){\n            myOutput.write(buffer, 0, length);\n        }\n        myOutput.flush();\n        myOutput.close();\n        myInput.close();\n    }\n\n    private boolean checkDataBase(){\n\n        File dbFile = new File(DB_PATH + DB_NAME);\n        if (!dbFile.exists()){\n            File dbFolder = new File(DB_PATH);\n            if (!dbFolder.exists())\n               return !dbFolder.mkdir();\n        }\n        Log.v(\"dbFile\", dbFile + \"   \"+ dbFile.exists());\n        return dbFile.exists();\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/DataBaseCopy.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/DataBaseCopy.java	(date 1604520122000)
@@ -9,26 +9,24 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 
-public class DataBaseCopy
-{
+public class DataBaseCopy {
     private static String TAG = DataBaseCopy.class.getName();
-    private  String DB_PATH; //= "/data/data/com.example.yourproject/database/";
+    private String DB_PATH; //= "/data/data/com.example.yourproject/database/";
     private static String DB_NAME = "database";
     private final Context myContext;
 
-    public DataBaseCopy(Context context)
-    {
+    public DataBaseCopy(Context context) {
 
         this.myContext = context;
-        DB_PATH="/data/data/" + context.getPackageName() + "/" + "databases/";
+        DB_PATH = "/data/data/" + context.getPackageName() + "/" + "databases/";
         Log.v("log_tag", "DBPath: " + DB_PATH);
     }
 
     public void createDataBase() throws IOException {
         boolean dbExist = checkDataBase();
-        if(dbExist){
+        if (dbExist) {
             Log.v("log_tag", "database.db does exist");
-        }else{
+        } else {
             Log.v("log_tag", "database.db does not exist");
             try {
                 copyDataBase();
@@ -38,13 +36,13 @@
         }
     }
 
-    private void copyDataBase() throws IOException{
+    private void copyDataBase() throws IOException {
         InputStream myInput = myContext.getAssets().open(DB_NAME);
         String outFileName = DB_PATH + DB_NAME;
         OutputStream myOutput = new FileOutputStream(outFileName);
         byte[] buffer = new byte[1024];
         int length;
-        while ((length = myInput.read(buffer))>0){
+        while ((length = myInput.read(buffer)) > 0) {
             myOutput.write(buffer, 0, length);
         }
         myOutput.flush();
@@ -52,15 +50,15 @@
         myInput.close();
     }
 
-    private boolean checkDataBase(){
+    private boolean checkDataBase() {
 
         File dbFile = new File(DB_PATH + DB_NAME);
-        if (!dbFile.exists()){
+        if (!dbFile.exists()) {
             File dbFolder = new File(DB_PATH);
             if (!dbFolder.exists())
-               return !dbFolder.mkdir();
+                return !dbFolder.mkdir();
         }
-        Log.v("dbFile", dbFile + "   "+ dbFile.exists());
+        Log.v("dbFile", dbFile + "   " + dbFile.exists());
         return dbFile.exists();
 
     }
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/AppDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database;\n\nimport androidx.room.Database;\nimport androidx.room.RoomDatabase;\n\nimport skarlat.dev.ecoproject.Course;\nimport skarlat.dev.ecoproject.EcoCard;\nimport skarlat.dev.ecoproject.EcoSoviet;\nimport skarlat.dev.ecoproject.includes.database.dao.CardsDao;\nimport skarlat.dev.ecoproject.includes.database.dao.CourseDao;\nimport skarlat.dev.ecoproject.includes.database.dao.SovietsDao;\nimport skarlat.dev.ecoproject.includes.database.dao.VersionDao;\n\n/**\n * Связь Room и SQLite\n * если нужно обновить структуру базы данных, то нужно делать миграцию сменив версию\n * не уверен как именно оставить код миграции\n */\n@Database(entities = {EcoCard.class, Course.class, EcoSoviet.class, Version.class}, version = 1)\npublic abstract class AppDatabase extends RoomDatabase {\n    public abstract CardsDao cardsDao();\n    public abstract SovietsDao sovietsDao();\n    public abstract CourseDao courseDao();\n    public abstract VersionDao versionDao();\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/AppDatabase.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/AppDatabase.java	(date 1604520122000)
@@ -3,9 +3,9 @@
 import androidx.room.Database;
 import androidx.room.RoomDatabase;
 
-import skarlat.dev.ecoproject.Course;
-import skarlat.dev.ecoproject.EcoCard;
-import skarlat.dev.ecoproject.EcoSoviet;
+import skarlat.dev.ecoproject.includes.dataclass.Course;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
+import skarlat.dev.ecoproject.includes.dataclass.EcoSoviet;
 import skarlat.dev.ecoproject.includes.database.dao.CardsDao;
 import skarlat.dev.ecoproject.includes.database.dao.CourseDao;
 import skarlat.dev.ecoproject.includes.database.dao.SovietsDao;
@@ -19,7 +19,10 @@
 @Database(entities = {EcoCard.class, Course.class, EcoSoviet.class, Version.class}, version = 1)
 public abstract class AppDatabase extends RoomDatabase {
     public abstract CardsDao cardsDao();
+
     public abstract SovietsDao sovietsDao();
+
     public abstract CourseDao courseDao();
+
     public abstract VersionDao versionDao();
 }
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CardsDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database.dao;\n\nimport androidx.room.Dao;\nimport androidx.room.Delete;\nimport androidx.room.Insert;\nimport androidx.room.Query;\nimport androidx.room.Update;\n\nimport java.util.List;\n\nimport skarlat.dev.ecoproject.EcoCard;\n/**\n * Подключение к базе данных\n *\n * @Interface CursCardDao - интерфейс с методами работы с базой данных\n * @methods Query - получение данных по заданным аргументам\n *          Insert - создание новой таблицы в базе данных\n *          Update - обновление данных существующей таблицы\n */\n@Dao\npublic interface CardsDao {\n    @Query(\"SELECT * FROM EcoCard\")\n    List<EcoCard> getAll();\n\n    @Query(\"SELECT * FROM EcoCard WHERE courseNameID = :courseNameID\")\n    List<EcoCard> getAllByCurs(String courseNameID);\n\n    @Query(\"SELECT * FROM EcoCard WHERE cardNameID = :cardNameID\")\n    EcoCard getByCardID(String cardNameID);\n\n    @Query(\"SELECT * FROM EcoCard WHERE courseNameID = :courseNameID AND isActive = 2\")\n    List<EcoCard> getAllActive(String courseNameID);\n\n    @Insert\n    void insert(EcoCard ecoCard);\n\n    @Update\n    void update(EcoCard ecoCard);\n\n    @Delete\n    void delete(EcoCard ecoCard);\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CardsDao.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CardsDao.java	(date 1604520122000)
@@ -8,14 +8,15 @@
 
 import java.util.List;
 
-import skarlat.dev.ecoproject.EcoCard;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
+
 /**
  * Подключение к базе данных
  *
  * @Interface CursCardDao - интерфейс с методами работы с базой данных
  * @methods Query - получение данных по заданным аргументам
- *          Insert - создание новой таблицы в базе данных
- *          Update - обновление данных существующей таблицы
+ * Insert - создание новой таблицы в базе данных
+ * Update - обновление данных существующей таблицы
  */
 @Dao
 public interface CardsDao {
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/SovietsDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database.dao;\n\nimport androidx.room.Dao;\nimport androidx.room.Delete;\nimport androidx.room.Insert;\nimport androidx.room.Query;\nimport androidx.room.Update;\n\nimport java.util.List;\n\nimport skarlat.dev.ecoproject.EcoSoviet;\n/**\n * Подключение к базе данных\n *\n * @Interface CursCardDao - интерфейс с методами работы с базой данных\n * @methods Query - получение данных по заданным аргументам\n *          Insert - создание новой таблицы в базе данных\n *          Update - обновление данных существующей таблицы\n */\n@Dao\npublic interface SovietsDao {\n\n    @Query(\"SELECT * FROM EcoSoviet WHERE isFavorite = 1\")\n    List<EcoSoviet> getAllFavorite();\n\n    @Query(\"SELECT * FROM EcoSoviet\")\n    List<EcoSoviet> getAll();\n\n    @Query(\"SELECT * FROM EcoSoviet WHERE sovietID = :id\")\n    EcoSoviet getByTipID(long id);\n\n    @Query(\"SELECT * FROM EcoSoviet WHERE cardNameID = :cardNameID\")\n    List<EcoSoviet> getAllByCardNameID(String cardNameID);\n\n    @Insert\n    void insert(EcoSoviet ecoSoviet);\n\n    @Update\n    void update(EcoSoviet ecoSoviet);\n\n    @Delete\n    void delete(EcoSoviet ecoSoviet);\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/SovietsDao.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/SovietsDao.java	(date 1604520122000)
@@ -8,14 +8,15 @@
 
 import java.util.List;
 
-import skarlat.dev.ecoproject.EcoSoviet;
+import skarlat.dev.ecoproject.includes.dataclass.EcoSoviet;
+
 /**
  * Подключение к базе данных
  *
  * @Interface CursCardDao - интерфейс с методами работы с базой данных
  * @methods Query - получение данных по заданным аргументам
- *          Insert - создание новой таблицы в базе данных
- *          Update - обновление данных существующей таблицы
+ * Insert - создание новой таблицы в базе данных
+ * Update - обновление данных существующей таблицы
  */
 @Dao
 public interface SovietsDao {
Index: app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CourseDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.includes.database.dao;\n\nimport androidx.room.Dao;\nimport androidx.room.Delete;\nimport androidx.room.Insert;\nimport androidx.room.Query;\nimport androidx.room.Update;\n\nimport java.util.List;\n\nimport skarlat.dev.ecoproject.Course;\n\n/**\n * Подключение к базе данных\n *\n * @Interface CursCardDao - интерфейс с методами работы с базой данных\n * @methods Query - получение данных по заданным аргументам\n *          Insert - создание новой таблицы в базе данных\n *          Update - обновление данных существующей таблицы\n */\n@Dao\npublic interface CourseDao {\n\n    @Query(\"SELECT * FROM Course\")\n    List<Course> getAll();\n    \n    @Query(\"SELECT * FROM Course WHERE isActive = 1\")\n    List<Course> getAllIsActive();\n    \n    @Query(\"SELECT * FROM Course WHERE isActive = 0\")\n    List<Course> getAllNonActive();\n    \n    @Query(\"SELECT * FROM Course WHERE isActive != 0 AND isActive != 1\")\n    List<Course> getAllFinished();\n\n    @Query(\"SELECT * FROM Course WHERE courseNameID = :courseNameID\")\n    Course getByCourseID(String courseNameID);\n\n    @Query(\"SELECT * FROM Course WHERE isActive = 1\")\n    Course getCurrentCourse();\n\n    @Insert\n    void insert(Course course);\n\n    @Update\n    void update(Course course);\n\n    @Delete\n    void delete(Course course);\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CourseDao.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/database/dao/CourseDao.java	(date 1604520122000)
@@ -8,28 +8,28 @@
 
 import java.util.List;
 
-import skarlat.dev.ecoproject.Course;
+import skarlat.dev.ecoproject.includes.dataclass.Course;
 
 /**
  * Подключение к базе данных
  *
  * @Interface CursCardDao - интерфейс с методами работы с базой данных
  * @methods Query - получение данных по заданным аргументам
- *          Insert - создание новой таблицы в базе данных
- *          Update - обновление данных существующей таблицы
+ * Insert - создание новой таблицы в базе данных
+ * Update - обновление данных существующей таблицы
  */
 @Dao
 public interface CourseDao {
 
     @Query("SELECT * FROM Course")
     List<Course> getAll();
-    
+
     @Query("SELECT * FROM Course WHERE isActive = 1")
     List<Course> getAllIsActive();
-    
+
     @Query("SELECT * FROM Course WHERE isActive = 0")
     List<Course> getAllNonActive();
-    
+
     @Query("SELECT * FROM Course WHERE isActive != 0 AND isActive != 1")
     List<Course> getAllFinished();
 
Index: app/src/main/java/skarlat/dev/ecoproject/customView/StatisticDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.customView;\n\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.os.Bundle;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.core.app.DialogCompat;\n\npublic class StatisticDialog extends Dialog implements DialogInterface.OnClickListener {\n\tpublic StatisticDialog(@NonNull Context context) {\n\t\tsuper(context);\n\t}\n\t\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n//\t\tsetContentView(R.);\n\t}\n\t\n\tpublic StatisticDialog(@NonNull Context context, int themeResId) {\n\t\tsuper(context, themeResId);\n\t}\n\t\n\tprotected StatisticDialog(@NonNull Context context, boolean cancelable, @Nullable OnCancelListener cancelListener) {\n\t\tsuper(context, cancelable, cancelListener);\n\t}\n\t\n\t@Override\n\tpublic void onClick(DialogInterface dialog, int which) {\n\t\n\t}\n\t\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/customView/StatisticDialog.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/customView/StatisticDialog.java	(date 1604520122000)
@@ -10,27 +10,27 @@
 import androidx.core.app.DialogCompat;
 
 public class StatisticDialog extends Dialog implements DialogInterface.OnClickListener {
-	public StatisticDialog(@NonNull Context context) {
-		super(context);
-	}
-	
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
+    public StatisticDialog(@NonNull Context context) {
+        super(context);
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
 //		setContentView(R.);
-	}
-	
-	public StatisticDialog(@NonNull Context context, int themeResId) {
-		super(context, themeResId);
-	}
-	
-	protected StatisticDialog(@NonNull Context context, boolean cancelable, @Nullable OnCancelListener cancelListener) {
-		super(context, cancelable, cancelListener);
-	}
-	
-	@Override
-	public void onClick(DialogInterface dialog, int which) {
-	
-	}
-	
+    }
+
+    public StatisticDialog(@NonNull Context context, int themeResId) {
+        super(context, themeResId);
+    }
+
+    protected StatisticDialog(@NonNull Context context, boolean cancelable, @Nullable OnCancelListener cancelListener) {
+        super(context, cancelable, cancelListener);
+    }
+
+    @Override
+    public void onClick(DialogInterface dialog, int which) {
+
+    }
+
 }
Index: app/src/main/java/skarlat/dev/ecoproject/customView/ProgressBarView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.customView;\n\nimport android.annotation.SuppressLint;\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.graphics.PorterDuff;\nimport android.graphics.drawable.ClipDrawable;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.LayerDrawable;\nimport android.util.AttributeSet;\nimport android.widget.TextView;\n\n@SuppressLint(\"AppCompatCustomView\")\npublic class ProgressBarView extends TextView {\n        // Максимальное значение шкалы\n        private int mMaxValue = 100;\n\n        // Конструкторы\n        public ProgressBarView(Context context, AttributeSet attrs, int defStyle) {\n            super(context, attrs, defStyle);\n        }\n\n        public ProgressBarView(Context context, AttributeSet attrs) {\n            super(context, attrs);\n        }\n\n        public ProgressBarView(Context context) {\n            super(context);\n        }\n\n        // Установка максимального значения\n        public void setMaxValue(int maxValue) {\n            mMaxValue = maxValue;\n        }\n\n        // Установка значения\n        public synchronized void setValue(int value) {\n            // Установка новой надписи\n//            this.setText(String.valueOf(value));\n\n            // Drawable, отвечающий за фон\n            LayerDrawable background = (LayerDrawable) this.getBackground();\n\n            // Достаём Clip, отвечающий за шкалу, по индексу 1\n            ClipDrawable barValue = (ClipDrawable) background.getDrawable(1);\n\n            // Устанавливаем уровень шкалы\n            int newClipLevel = (int) (value * 10000 / mMaxValue);\n            barValue.setLevel(newClipLevel);\n\n            // Уведомляем об изменении Drawable\n            drawableStateChanged();\n        }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/customView/ProgressBarView.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/customView/ProgressBarView.java	(date 1604520122000)
@@ -13,43 +13,43 @@
 
 @SuppressLint("AppCompatCustomView")
 public class ProgressBarView extends TextView {
-        // Максимальное значение шкалы
-        private int mMaxValue = 100;
+    // Максимальное значение шкалы
+    private int mMaxValue = 100;
 
-        // Конструкторы
-        public ProgressBarView(Context context, AttributeSet attrs, int defStyle) {
-            super(context, attrs, defStyle);
-        }
+    // Конструкторы
+    public ProgressBarView(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+    }
 
-        public ProgressBarView(Context context, AttributeSet attrs) {
-            super(context, attrs);
-        }
+    public ProgressBarView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
 
-        public ProgressBarView(Context context) {
-            super(context);
-        }
+    public ProgressBarView(Context context) {
+        super(context);
+    }
 
-        // Установка максимального значения
-        public void setMaxValue(int maxValue) {
-            mMaxValue = maxValue;
-        }
+    // Установка максимального значения
+    public void setMaxValue(int maxValue) {
+        mMaxValue = maxValue;
+    }
 
-        // Установка значения
-        public synchronized void setValue(int value) {
-            // Установка новой надписи
+    // Установка значения
+    public synchronized void setValue(int value) {
+        // Установка новой надписи
 //            this.setText(String.valueOf(value));
 
-            // Drawable, отвечающий за фон
-            LayerDrawable background = (LayerDrawable) this.getBackground();
+        // Drawable, отвечающий за фон
+        LayerDrawable background = (LayerDrawable) this.getBackground();
 
-            // Достаём Clip, отвечающий за шкалу, по индексу 1
-            ClipDrawable barValue = (ClipDrawable) background.getDrawable(1);
+        // Достаём Clip, отвечающий за шкалу, по индексу 1
+        ClipDrawable barValue = (ClipDrawable) background.getDrawable(1);
 
-            // Устанавливаем уровень шкалы
-            int newClipLevel = (int) (value * 10000 / mMaxValue);
-            barValue.setLevel(newClipLevel);
+        // Устанавливаем уровень шкалы
+        int newClipLevel = value * 10000 / mMaxValue;
+        barValue.setLevel(newClipLevel);
 
-            // Уведомляем об изменении Drawable
-            drawableStateChanged();
-        }
+        // Уведомляем об изменении Drawable
+        drawableStateChanged();
+    }
 }
Index: app/src/main/java/skarlat/dev/ecoproject/customView/AdviceView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.customView;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Paint;\nimport android.graphics.Path;\nimport android.graphics.drawable.Drawable;\nimport android.graphics.drawable.ShapeDrawable;\nimport android.graphics.drawable.VectorDrawable;\nimport android.graphics.drawable.shapes.ArcShape;\nimport android.graphics.drawable.shapes.OvalShape;\nimport android.graphics.drawable.shapes.Shape;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.FrameLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\n\nimport skarlat.dev.ecoproject.R;\n\n\npublic class AdviceView extends FrameLayout {\n\tprivate ShapeDrawable mDrawable;\n\tprivate Path path;\n\tPaint paint;\n\t\n\tpublic AdviceView(Context context) {\n\t\tsuper(context);\n\t}\n\t\n\tpublic AdviceView(Context context, @Nullable AttributeSet attrs) {\n\t\tsuper(context, attrs);\n\t\t path = new Path();\n\t\t paint = new Paint(Paint.ANTI_ALIAS_FLAG);\n\t}\n\t\n\t@Override\n\tprotected void onAttachedToWindow() {\n\t\tsuper.onAttachedToWindow();\n\t}\n\t\n\t@Override\n\tprotected void onDraw(Canvas canvas) {\n\t\tsuper.onDraw(canvas);\n\t\tpaint.setColor(getResources().getColor(R.color.colorBolotoButton));\n\t\tpaint.setStyle(Paint.Style.STROKE);\n\t\tpaint.setStrokeWidth(4);\n\t\tpath.reset();\n\t\tpath.moveTo(2, 0);  // перемещаем курсор наверх\n\t\tpath.lineTo(2, getHeight() - 30);  // рисуем линию вниз\n\t\tpath.moveTo(32, getHeight() - 30); // перемещаем курсор для рисования дуги\n\t\tpath.arcTo(2, getHeight() - 62, 62, getHeight() - 2,\n\t\t\t\t90, 90, true); // рисуем дугу\n\t\tpath.moveTo(getWidth(), getHeight() - 2); // перемещаем курсор в правый нижний угол\n\t\tpath.lineTo(32, getHeight() - 2); // рисуем влево горизонтальный отрезок\n\t\tcanvas.drawPath(path, paint); // само действие \"нарисовать\"\n\t\tpath.reset(); // обязательный сброс пути\n\t}\n\t\n\tprivate void logs(){\n//\t\tLog.d(\"CustomView\", \"canvas weight: \" + canvas.getWidth() + \" high: \" + canvas.getHeight());\n\t\tLog.d(\"CustomView\", \"getX: \" +  getX() + \" getY()\" + getY());\n\t\tLog.d(\"CustomView\", \"getPivotX: \" + getPivotX() + \"getPivotY: \" + getPivotY());\n\t\tLog.d(\"CustomView\", \"width: \" + getWidth() + \"\\nheight: \" + getHeight());\n\t\tLog.d(\"CustomView\", \"Measured width: \" + getMeasuredWidth() + \"\\nMeasured height: \"\n\t\t\t\t                    + getMeasuredHeight());\n\t\tLog.d(\"CustomView\", \"pxFromDp(8) : \" + pxFromDp(8));\n\t}\n\t\n\t/**\n\t * Конвертация px в dp\n\t * @param px Значение в пикслеях\n\t * @return Значение в dp (density-independent-pixel)\n\t */\n\tprivate float dpFromPx(float px) {\n\t\treturn px/ this\n\t\t\t\t           .getResources()\n\t\t\t\t           .getDisplayMetrics()\n\t\t\t\t           .density;\n\t}\n\t\n\t/**\n\t *  Конвертация dp в px\n\t * @param dp Значение dp\n\t * @return Значение в пикселях\n\t */\n\tprivate float pxFromDp(float dp) {\n\t\treturn dp * this\n\t\t\t\t            .getResources()\n\t\t\t\t            .getDisplayMetrics()\n\t\t\t\t            .density;\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/customView/AdviceView.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/customView/AdviceView.java	(date 1604520122000)
@@ -23,74 +23,76 @@
 
 
 public class AdviceView extends FrameLayout {
-	private ShapeDrawable mDrawable;
-	private Path path;
-	Paint paint;
-	
-	public AdviceView(Context context) {
-		super(context);
-	}
-	
-	public AdviceView(Context context, @Nullable AttributeSet attrs) {
-		super(context, attrs);
-		 path = new Path();
-		 paint = new Paint(Paint.ANTI_ALIAS_FLAG);
-	}
-	
-	@Override
-	protected void onAttachedToWindow() {
-		super.onAttachedToWindow();
-	}
-	
-	@Override
-	protected void onDraw(Canvas canvas) {
-		super.onDraw(canvas);
-		paint.setColor(getResources().getColor(R.color.colorBolotoButton));
-		paint.setStyle(Paint.Style.STROKE);
-		paint.setStrokeWidth(4);
-		path.reset();
-		path.moveTo(2, 0);  // перемещаем курсор наверх
-		path.lineTo(2, getHeight() - 30);  // рисуем линию вниз
-		path.moveTo(32, getHeight() - 30); // перемещаем курсор для рисования дуги
-		path.arcTo(2, getHeight() - 62, 62, getHeight() - 2,
-				90, 90, true); // рисуем дугу
-		path.moveTo(getWidth(), getHeight() - 2); // перемещаем курсор в правый нижний угол
-		path.lineTo(32, getHeight() - 2); // рисуем влево горизонтальный отрезок
-		canvas.drawPath(path, paint); // само действие "нарисовать"
-		path.reset(); // обязательный сброс пути
-	}
-	
-	private void logs(){
+    private ShapeDrawable mDrawable;
+    private Path path;
+    Paint paint;
+
+    public AdviceView(Context context) {
+        super(context);
+    }
+
+    public AdviceView(Context context, @Nullable AttributeSet attrs) {
+        super(context, attrs);
+        path = new Path();
+        paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+    }
+
+    @Override
+    protected void onAttachedToWindow() {
+        super.onAttachedToWindow();
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        super.onDraw(canvas);
+        paint.setColor(getResources().getColor(R.color.colorBolotoButton));
+        paint.setStyle(Paint.Style.STROKE);
+        paint.setStrokeWidth(4);
+        path.reset();
+        path.moveTo(2, 0);  // перемещаем курсор наверх
+        path.lineTo(2, getHeight() - 30);  // рисуем линию вниз
+        path.moveTo(32, getHeight() - 30); // перемещаем курсор для рисования дуги
+        path.arcTo(2, getHeight() - 62, 62, getHeight() - 2,
+                90, 90, true); // рисуем дугу
+        path.moveTo(getWidth(), getHeight() - 2); // перемещаем курсор в правый нижний угол
+        path.lineTo(32, getHeight() - 2); // рисуем влево горизонтальный отрезок
+        canvas.drawPath(path, paint); // само действие "нарисовать"
+        path.reset(); // обязательный сброс пути
+    }
+
+    private void logs() {
 //		Log.d("CustomView", "canvas weight: " + canvas.getWidth() + " high: " + canvas.getHeight());
-		Log.d("CustomView", "getX: " +  getX() + " getY()" + getY());
-		Log.d("CustomView", "getPivotX: " + getPivotX() + "getPivotY: " + getPivotY());
-		Log.d("CustomView", "width: " + getWidth() + "\nheight: " + getHeight());
-		Log.d("CustomView", "Measured width: " + getMeasuredWidth() + "\nMeasured height: "
-				                    + getMeasuredHeight());
-		Log.d("CustomView", "pxFromDp(8) : " + pxFromDp(8));
-	}
-	
-	/**
-	 * Конвертация px в dp
-	 * @param px Значение в пикслеях
-	 * @return Значение в dp (density-independent-pixel)
-	 */
-	private float dpFromPx(float px) {
-		return px/ this
-				           .getResources()
-				           .getDisplayMetrics()
-				           .density;
-	}
-	
-	/**
-	 *  Конвертация dp в px
-	 * @param dp Значение dp
-	 * @return Значение в пикселях
-	 */
-	private float pxFromDp(float dp) {
-		return dp * this
-				            .getResources()
-				            .getDisplayMetrics()
-				            .density;
-	}
+        Log.d("CustomView", "getX: " + getX() + " getY()" + getY());
+        Log.d("CustomView", "getPivotX: " + getPivotX() + "getPivotY: " + getPivotY());
+        Log.d("CustomView", "width: " + getWidth() + "\nheight: " + getHeight());
+        Log.d("CustomView", "Measured width: " + getMeasuredWidth() + "\nMeasured height: "
+                + getMeasuredHeight());
+        Log.d("CustomView", "pxFromDp(8) : " + pxFromDp(8));
+    }
+
+    /**
+     * Конвертация px в dp
+     *
+     * @param px Значение в пикслеях
+     * @return Значение в dp (density-independent-pixel)
+     */
+    private float dpFromPx(float px) {
+        return px / this
+                .getResources()
+                .getDisplayMetrics()
+                .density;
+    }
+
+    /**
+     * Конвертация dp в px
+     *
+     * @param dp Значение dp
+     * @return Значение в пикселях
+     */
+    private float pxFromDp(float dp) {
+        return dp * this
+                .getResources()
+                .getDisplayMetrics()
+                .density;
+    }
 }
Index: app/src/main/assets/dummy_data.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"time\" : 1560845515750,\n  \"blocks\" : [\n    {\n      \"type\" : \"header\",\n      \"data\" : {\n        \"text\" : \"Почему это важно? Concat\",\n        \"level\" : 1\n      }\n    },\n    {\n      \"type\" : \"quote\",\n      \"data\" : {\n        \"text\" : \"Да потому что!\"\n      }\n    },\n    {\n      \"type\" : \"paragraph\",\n      \"data\" : {\n        \"text\" : \"Необходимо\"\n      }\n    }\n  ],\n  \"version\" : \"2.12.3\"\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/dummy_data.json	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/assets/dummy_data.json	(date 1604520122000)
@@ -19,6 +19,16 @@
       "data" : {
         "text" : "Необходимо"
       }
+    },
+    {
+      "type" : "image",
+      "data" : {
+        "url" : "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+      },
+      "caption" : "Here could be some caption for this picture",
+      "withBorder" : false,
+      "stretched" : true,
+      "withBackground" : true
     }
   ],
   "version" : "2.12.3"
Index: app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoSoviet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoSoviet.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoSoviet.java	(date 1604520122000)
@@ -0,0 +1,78 @@
+package skarlat.dev.ecoproject.includes.dataclass;
+
+import androidx.annotation.NonNull;
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+import skarlat.dev.ecoproject.App;
+import skarlat.dev.ecoproject.includes.database.AppDatabase;
+import skarlat.dev.ecoproject.includes.database.dao.SovietsDao;
+
+@Entity
+public class EcoSoviet implements EcoInterface {
+
+    public String cardNameID;
+
+    @PrimaryKey(autoGenerate = true)
+    @NonNull
+    public long sovietID;
+
+    public int isFavorite;
+
+    public String title;
+
+    public String description;
+
+    @Override
+    public String getName() {
+        return null;
+    }
+
+    @Override
+    public String getTitle() {
+        return this.title;
+    }
+
+    @Override
+    public String getDescription() {
+        return this.description;
+    }
+
+    @Override
+    public String getFullDescription() {
+        return null;
+    }
+
+    @Override
+    public Enum getStatus() {
+        return isFavorite == 0 ? Status.UNLIKED : Status.LIKED;
+    }
+
+    @Override
+    public String getPathImage() {
+        return null;
+    }
+
+    public enum Status {
+        UNLIKED,
+        LIKED
+    }
+
+    public void setStatus(EcoSoviet.Status status) {
+        switch (status) {
+            case UNLIKED:
+                isFavorite = 0;
+                break;
+            case LIKED:
+                isFavorite = 1;
+                break;
+        }
+    }
+
+    public void upDate(EcoSoviet.Status status) {
+        AppDatabase db = App.getDatabase();
+        SovietsDao dao = db.sovietsDao();
+        setStatus(status);
+        dao.update(this);
+    }
+}
Index: app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoInterface.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoInterface.java	(date 1604520122000)
@@ -0,0 +1,15 @@
+package skarlat.dev.ecoproject.includes.dataclass;
+
+public interface EcoInterface {
+    String getName();
+
+    String getTitle();
+
+    String getDescription();
+
+    String getFullDescription();
+
+    Enum getStatus();
+
+    String getPathImage();
+}
Index: app/src/main/java/skarlat/dev/ecoproject/includes/AbstractEco.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/AbstractEco.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/AbstractEco.java	(date 1604520122000)
@@ -0,0 +1,101 @@
+package skarlat.dev.ecoproject.includes;
+
+import java.io.Serializable;
+
+import skarlat.dev.ecoproject.includes.dataclass.EcoInterface;
+
+/*
+ **
+ * Абстрактный класс AbstractEco от которого можно наследоваться.
+ * В классах наследниках нужно будет вызвать контсруктор суперкласса:
+ * super(name, description, status);
+ *
+ */
+
+/**
+ * removed
+ */
+abstract public class AbstractEco implements EcoInterface, Serializable {
+    private final String title;
+    private final String desription;
+    private final String name;
+    private final String fullDescription;
+    private int status;
+    //<<<<<<< HEAD
+    public boolean temp;
+    //=======
+    private int i;
+//>>>>>>> denis
+
+    public AbstractEco(String name, String title, String desription, String fullDescription, int status) {
+        this.name = name;
+        this.title = title;
+        this.desription = desription;
+        this.status = status;
+        this.fullDescription = fullDescription;
+    }
+
+    public AbstractEco(String name, String title, String desription, String fullDescription) {
+        this.name = name;
+        this.title = title;
+        this.desription = desription;
+        this.status = status;
+        this.fullDescription = fullDescription;
+    }
+
+    public AbstractEco(String name, String title) {
+        this.name = name;
+        this.title = title;
+        desription = null;
+        fullDescription = null;
+    }
+
+    public AbstractEco(String name, String title, String desription, boolean status) {
+        this.name = name;
+        this.title = title;
+        this.desription = desription;
+        this.temp = status;
+        this.fullDescription = null;
+    }
+
+    public AbstractEco(String title, String desription, boolean status) {
+        this.name = null;
+        this.title = title;
+        this.desription = desription;
+        this.temp = status;
+        this.fullDescription = null;
+    }
+
+    /**
+     *
+     * @return: 0 - закрытый курс, 1 - открытый курс, 2 - текущий посещенный курс
+     * Смотри ниже метод с Enum
+     */
+//	@Override
+//	public int getStatus() {
+//		return status;
+//	}
+
+    /**
+     * @return: Enum - объект перпечисления.
+     * Метод переодпределяется в каждом классе
+     */
+    @Override
+    abstract public Enum getStatus();
+
+    @Override
+    public String getTitle() {
+        return title;
+    }
+
+    @Override
+    public String getDescription() {
+        return desription;
+    }
+
+    @Override
+    public String getName() {
+        return name;
+    }
+
+}
Index: app/src/main/java/skarlat/dev/ecoproject/Course.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject;\n\nimport android.content.res.AssetManager;\nimport android.graphics.drawable.BitmapDrawable;\nimport android.graphics.drawable.Drawable;\n\nimport androidx.annotation.NonNull;\nimport androidx.room.Entity;\nimport androidx.room.PrimaryKey;\n\nimport java.io.IOException;\nimport java.io.Serializable;\n\nimport skarlat.dev.ecoproject.includes.database.AppDatabase;\nimport skarlat.dev.ecoproject.includes.database.dao.CourseDao;\n\n@Entity\npublic class Course implements EcoInterface, Serializable {\n\n    @PrimaryKey\n    @NonNull\n    public String courseNameID;\n\n    public String title;\n\n    public String description;\n\n    public String fullDescription;\n\n    public int progressBar;\n\n    public int isActive;\n    \n    public enum Status{\n        CLOSED,\n        CURRENT,\n        FINISHED;\n    }\n\n    @Override\n    public String getName() {\n        return this.courseNameID;\n    }\n\n    @Override\n    public String getTitle() {\n        return this.title;\n    }\n\n    @Override\n    public String getDescription() {\n        return this.description;\n    }\n\n    @Override\n    public String getFullDescription() {\n        return this.fullDescription;\n    }\n\n    @Override\n    public Enum getStatus() {\n        switch (isActive){\n            case 1:\n                return Status.CURRENT;\n            case 2:\n                return Status.FINISHED;\n            default:\n                return Status.CLOSED;\n        }\n    }\n    \n    @Override\n    public String getPathImage() {\n        return Const.IMAGES_ROOT_FOLDER + courseNameID + \"/\" + courseNameID + \".png\";\n    }\n    \n    public int getProgressBar(){\n        return this.progressBar;\n    }\n\n    public void setProgressBar(int progress){\n        this.progressBar = progress;\n    }\n\n    public void setStatus(Course.Status status){\n        switch (status){\n            case CURRENT:\n                this.isActive = 1;\n                break;\n            case FINISHED:\n                this.isActive = 2;\n                break;\n            case CLOSED:\n                this.isActive = 0;\n                break;\n        }\n    }\n\n    public void upDate(int progressBar, Course.Status status){\n        AppDatabase db = App.getInstance().getDatabase();\n        CourseDao coursesDao = db.courseDao();\n        setProgressBar(progressBar);\n        setStatus(status);\n        coursesDao.update(this);\n    }\n    \n    public Drawable getImage(){\n        Drawable drawable = new BitmapDrawable(fullPathToImage());\n        return drawable;\n    }\n    \n    public Drawable getImage(AssetManager manager) throws IOException {\n        Drawable drawable = new BitmapDrawable(manager.open(fullPathToImage()));\n        return drawable;\n    }\n    \n    private String fullPathToImage(){\n        return Const.IMAGES_ROOT_FOLDER + courseNameID + \"/\" + courseNameID + \".png\";\n    }\n}\n
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/Course.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/Course.java	(date 1604520122000)
@@ -1,4 +1,4 @@
-package skarlat.dev.ecoproject;
+package skarlat.dev.ecoproject.includes.dataclass;
 
 import android.content.res.AssetManager;
 import android.graphics.drawable.BitmapDrawable;
@@ -11,6 +11,8 @@
 import java.io.IOException;
 import java.io.Serializable;
 
+import skarlat.dev.ecoproject.App;
+import skarlat.dev.ecoproject.Const;
 import skarlat.dev.ecoproject.includes.database.AppDatabase;
 import skarlat.dev.ecoproject.includes.database.dao.CourseDao;
 
@@ -30,11 +32,11 @@
     public int progressBar;
 
     public int isActive;
-    
-    public enum Status{
+
+    public enum Status {
         CLOSED,
         CURRENT,
-        FINISHED;
+        FINISHED
     }
 
     @Override
@@ -59,7 +61,7 @@
 
     @Override
     public Enum getStatus() {
-        switch (isActive){
+        switch (isActive) {
             case 1:
                 return Status.CURRENT;
             case 2:
@@ -68,22 +70,22 @@
                 return Status.CLOSED;
         }
     }
-    
+
     @Override
     public String getPathImage() {
         return Const.IMAGES_ROOT_FOLDER + courseNameID + "/" + courseNameID + ".png";
     }
-    
-    public int getProgressBar(){
+
+    public int getProgressBar() {
         return this.progressBar;
     }
 
-    public void setProgressBar(int progress){
+    public void setProgressBar(int progress) {
         this.progressBar = progress;
     }
 
-    public void setStatus(Course.Status status){
-        switch (status){
+    public void setStatus(Course.Status status) {
+        switch (status) {
             case CURRENT:
                 this.isActive = 1;
                 break;
@@ -96,25 +98,25 @@
         }
     }
 
-    public void upDate(int progressBar, Course.Status status){
-        AppDatabase db = App.getInstance().getDatabase();
+    public void upDate(int progressBar, Course.Status status) {
+        AppDatabase db = App.getDatabase();
         CourseDao coursesDao = db.courseDao();
         setProgressBar(progressBar);
         setStatus(status);
         coursesDao.update(this);
     }
-    
-    public Drawable getImage(){
+
+    public Drawable getImage() {
         Drawable drawable = new BitmapDrawable(fullPathToImage());
         return drawable;
     }
-    
+
     public Drawable getImage(AssetManager manager) throws IOException {
         Drawable drawable = new BitmapDrawable(manager.open(fullPathToImage()));
         return drawable;
     }
-    
-    private String fullPathToImage(){
+
+    private String fullPathToImage() {
         return Const.IMAGES_ROOT_FOLDER + courseNameID + "/" + courseNameID + ".png";
     }
 }
Index: app/src/main/java/skarlat/dev/ecoproject/adapter/NewEJAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.adapter\n\nimport android.annotation.SuppressLint\nimport androidx.recyclerview.widget.DiffUtil\nimport com.hannesdorfmann.adapterdelegates4.AsyncListDifferDelegationAdapter\nimport work.upstarts.editorjskit.EJKit\nimport work.upstarts.editorjskit.models.EJBlock\nimport work.upstarts.editorjskit.ui.EditorJsAdapter\nimport work.upstarts.editorjskit.ui.adapterdelegates.*\nimport work.upstarts.editorjskit.ui.theme.EJStyle\n\nclass NewEJAdapter(style: EJStyle? = EJKit.ejStyle,\n                   diffCallback: DiffUtil.ItemCallback<Any>? = null) : AsyncListDifferDelegationAdapter<Any>(diffCallback\n        ?: DIFF_CALLBACK) {\n    init {\n        initDelegates(style)\n    }\n\n    fun initDelegates(style: EJStyle?) {\n        delegatesManager\n                .addDelegate(HeaderAdapterDelegate(style))\n                .addDelegate(ParagraphAdapterDelegate(style))\n                .addDelegate(DividerAdapterDelegate(style))\n                .addDelegate(ImageAdapterDelegate(style))\n                .addDelegate(ListAdapterDelegate(style))\n                .addDelegate(TableAdapterDelegate(style))\n                .addDelegate(RawHtmlAdapterDelegate(style))\n                .addDelegate(ArticleQuoteElement(style))\n\n    }\n\n}\n\nprivate val DIFF_CALLBACK = object : DiffUtil.ItemCallback<Any>() {\n\n    override fun areItemsTheSame(oldItem: Any, newItem: Any): Boolean {\n        if (oldItem === newItem) return true\n        return if (newItem is EJBlock && oldItem is EJBlock) {\n            oldItem.data == newItem.data\n        } else false\n    }\n\n    @SuppressLint(\"DiffUtilEquals\")\n    override fun areContentsTheSame(oldItem: Any, newItem: Any) = oldItem == newItem\n}
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/adapter/NewEJAdapter.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/adapter/ArticleAdapter.kt	(date 1604520122000)
@@ -3,14 +3,16 @@
 import android.annotation.SuppressLint
 import androidx.recyclerview.widget.DiffUtil
 import com.hannesdorfmann.adapterdelegates4.AsyncListDifferDelegationAdapter
+import skarlat.dev.ecoproject.eitorjs.AdviceLinkElement
+import skarlat.dev.ecoproject.eitorjs.ArticleImageElement
+import skarlat.dev.ecoproject.eitorjs.ArticleQuoteElement
 import work.upstarts.editorjskit.EJKit
 import work.upstarts.editorjskit.models.EJBlock
-import work.upstarts.editorjskit.ui.EditorJsAdapter
 import work.upstarts.editorjskit.ui.adapterdelegates.*
 import work.upstarts.editorjskit.ui.theme.EJStyle
 
-class NewEJAdapter(style: EJStyle? = EJKit.ejStyle,
-                   diffCallback: DiffUtil.ItemCallback<Any>? = null) : AsyncListDifferDelegationAdapter<Any>(diffCallback
+class ArticleAdapter(style: EJStyle? = EJKit.ejStyle,
+                     diffCallback: DiffUtil.ItemCallback<Any>? = null) : AsyncListDifferDelegationAdapter<Any>(diffCallback
         ?: DIFF_CALLBACK) {
     init {
         initDelegates(style)
@@ -26,7 +28,8 @@
                 .addDelegate(TableAdapterDelegate(style))
                 .addDelegate(RawHtmlAdapterDelegate(style))
                 .addDelegate(ArticleQuoteElement(style))
-
+                .addDelegate(AdviceLinkElement(style))
+                .addDelegate(ArticleImageElement(style))
     }
 
 }
Index: app/src/main/java/skarlat/dev/ecoproject/activity/RemindPasswordActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/RemindPasswordActivity.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/RemindPasswordActivity.java	(date 1604520122000)
@@ -0,0 +1,36 @@
+package skarlat.dev.ecoproject.activity;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+
+import com.google.android.material.snackbar.Snackbar;
+import com.google.android.material.textfield.TextInputEditText;
+
+import skarlat.dev.ecoproject.R;
+
+public class RemindPasswordActivity extends AppCompatActivity {
+    private Button remindButton;
+    private TextInputEditText email;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_remind);
+        email = findViewById(R.id.user_email);
+        remindButton = findViewById(R.id.remind);
+    }
+
+    public void onClick(View v) {
+        int pressed = v.getId();
+        if (pressed == R.id.remind) {
+            Snackbar.make(v, "На почту отправлена иснтрукция по восстановлению пароля :-)",
+                    Snackbar.LENGTH_LONG)
+                    .show();
+            onBackPressed();
+        }
+    }
+
+}
Index: app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoCard.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/EcoCard.java	(date 1604520122000)
@@ -0,0 +1,108 @@
+package skarlat.dev.ecoproject.includes.dataclass;
+
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+
+import androidx.annotation.NonNull;
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+import java.io.IOException;
+import java.io.Serializable;
+
+import skarlat.dev.ecoproject.App;
+import skarlat.dev.ecoproject.Const;
+import skarlat.dev.ecoproject.includes.database.AppDatabase;
+import skarlat.dev.ecoproject.includes.database.dao.CardsDao;
+
+@Entity
+public class EcoCard implements EcoInterface, Serializable {
+    private final static String postfixPath = "_cover_hdpi";
+    @PrimaryKey
+    @NonNull
+    public String cardNameID;
+
+    public String courseNameID;
+
+    public String title;
+
+    public String description;
+
+    public String fullDescription;
+
+    public int isActive;
+
+    public enum Status {
+        CLOSED,
+        OPENED,
+        WATCHED,
+    }
+
+    @Override
+    public String getName() {
+        return this.cardNameID;
+    }
+
+    @Override
+    public String getTitle() {
+        return this.title;
+    }
+
+    @Override
+    public String getDescription() {
+        return this.description;
+    }
+
+    @Override
+    public String getFullDescription() {
+        return this.fullDescription;
+    }
+
+    public String getCourseNameID() {
+        return this.courseNameID;
+    }
+
+    @Override
+    public Enum getStatus() {
+        switch (this.isActive) {
+            case 0:
+                return Status.CLOSED;
+            case 1:
+                return Status.OPENED;
+            case 2:
+                return Status.WATCHED;
+        }
+        return null;
+    }
+
+    public Drawable getImage() throws IOException {
+        Drawable drawable = new BitmapDrawable(App.instance.getAssets().open(getPathImage()));
+        return drawable;
+    }
+
+    @Override
+    public String getPathImage() {
+        return Const.IMAGES_ROOT_FOLDER + courseNameID + "/" + cardNameID + postfixPath + ".png";
+    }
+
+    public void upDate(EcoCard.Status status) {
+        AppDatabase db = App.getDatabase();
+        CardsDao cardsDao = db.cardsDao();
+        setStatus(status);
+        cardsDao.update(this);
+    }
+
+    public void setStatus(EcoCard.Status status) {
+        switch (status) {
+            case OPENED:
+                this.isActive = 1;
+                break;
+            case WATCHED:
+                this.isActive = 2;
+                break;
+            case CLOSED:
+                this.isActive = 0;
+                break;
+        }
+    }
+}
Index: app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/Education.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/Education.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/includes/dataclass/Education.java	(date 1604520122000)
@@ -0,0 +1,16 @@
+package skarlat.dev.ecoproject.includes.dataclass;
+
+import java.io.InputStream;
+import java.io.Serializable;
+import java.util.List;
+import java.util.Map;
+
+public class Education implements Serializable {
+    List<Course> courses;
+    Map<Course.Status, List<Course>> mapOfCouses;
+
+    public Education(InputStream inputStream) {
+
+    }
+
+}
Index: app/src/main/java/skarlat/dev/ecoproject/activity/CourseCardActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.activity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport skarlat.dev.ecoproject.Course;\nimport skarlat.dev.ecoproject.EcoCard;\nimport skarlat.dev.ecoproject.R;\nimport skarlat.dev.ecoproject.adapter.CardsViewAdapter;\nimport skarlat.dev.ecoproject.customView.ProgressBarView;\nimport skarlat.dev.ecoproject.databinding.ActivityCourseCardBinding;\nimport skarlat.dev.ecoproject.databinding.ActivityHomeBinding;\nimport skarlat.dev.ecoproject.includes.database.DatabaseHelper;\n\npublic class CourseCardActivity extends AppCompatActivity {\n    private ProgressBarView progressBarView;\n    private TextView leftCards;\n    private TextView cursTitle;\n    private TextView courseDesc;\n    private RecyclerView recyclerView;\n    private int progress;\n    private Button startCourse;\n    private String courseName;\n    private DatabaseHelper db = new DatabaseHelper();\n    private List<EcoCard> ecoCard;\n    private Course currentCourse;\n    private final int REQUST = 1;\n    private ActivityCourseCardBinding binding;\n\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = ActivityCourseCardBinding.inflate(getLayoutInflater());\n\n        setContentView(binding.getRoot());\n\n        Bundle tagView = getIntent().getExtras();\n\n        currentCourse = db.getCourseByName(tagView.get(\"OPEN_COURSE\").toString());\n        courseName = currentCourse.getName();\n\n        cursTitle = binding.cursTitle;\n        progressBarView = binding.pbHorizontal;\n        leftCards = binding.leftCards;\n        courseDesc = binding.courseDesc;\n\n        ecoCard = db.getAllCardsByCourseNameID(courseName);\n\n        // получение ID по имени\n       // int drawableID = this.getResources().getIdentifier(imgCourse, \"drawable\", getPackageName());\n       // courseImgView.setBackgroundResource(drawableID);\n        cursTitle.setText(currentCourse.getTitle());\n        progress = currentCourse.getProgressBar();\n        progress = db.getCourseByName(courseName).getProgressBar();\n        progressBarView.setValue(progress);\n        leftCards.setText(db.getLeftCards(courseName));\n        courseDesc.setText(currentCourse.getFullDescription());\n\n        try {\n            binding.courseAvatar.setImageDrawable(currentCourse.getImage(getAssets()));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n//        if ( progress > 0  && progress < 100)\n//            startCourse.setText(\"Продолжить обучение\");\n//        else if ( progress >= 100){\n//            startCourse.setVisibility(View.GONE);\n//        }\n//        else\n//            startCourse.setText(\"Начать обучение\");\n\n\n        CardsViewAdapter adapter = new CardsViewAdapter(CourseCardActivity.this, ecoCard);\n        binding.recycleCards.setAdapter(adapter);\n        db.upDateIsCurrentCourse(courseName);\n    }\n\n\n    @Override\n    public void startActivityForResult(Intent intent, int requestCode) {\n        super.startActivityForResult(intent, requestCode);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        // TODO(\"LOGIC FOR CLOSE CARD\")\n//        progress = currentCourse.getProgressBar();\n//        progressBarView.setValue(progress);\n//        leftCards.setText(db.getLeftCards(courseName));\n//\n//        CardsViewAdapter adapter = new CardsViewAdapter(CourseCardActivity.this, ecoCard);\n//        recyclerView.setAdapter(adapter);\n//\n//        if ( progress > 0  && progress < 100)\n//            startCourse.setText(\"Продолжить обучение\");\n//        else if ( progress >= 100){\n//            startCourse.setVisibility(View.GONE);\n//        }\n//        else\n//            startCourse.setText(\"Начать обучение\");\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n\n    public void onBackBtn(View view){\n        onBackPressed();\n    }\n\n\n    @Override\n    public void onBackPressed() {\n        super.onBackPressed();\n    }\n\n    /**\n     * View карточки обновляет базу данных при переходе\n     * @param view\n     */\n    public void openCard(View view) {\n        EcoCard currentCard = (EcoCard) view.getTag();\n\n        Intent intent = new Intent(this, EcoCardActivity.class);\n        intent.putExtra(currentCard.getClass().getSimpleName(), currentCard);\n        if (currentCard.getStatus() == EcoCard.Status.WATCHED) {\n            startActivityForResult(intent, REQUST);\n        }else {\n\n            for (int i = 0; i < ecoCard.size(); i++) {\n                if (ecoCard.get(i).getName() == currentCard.getName() && (i + 1) < ecoCard.size()) {\n                    ecoCard.get(i + 1).upDate(EcoCard.Status.OPENED);\n                    db.updateFirebaseProgress(\"Cards\" ,ecoCard.get(i + 1).getName(), \"status\", 1);\n                    break;\n                }\n            }\n\n            currentCard.upDate(EcoCard.Status.WATCHED);\n            db.updateFirebaseProgress(\"Cards\" ,currentCard.getName(), \"status\", 2);\n            upDateCurrentCourse();\n\n            startActivityForResult(intent, REQUST);\n        }\n    }\n\n    /**\n     * Progress бар для базы данных\n     */\n    private void upDateCurrentCourse(){\n\n        double res =  100.00 / (double) ecoCard.size();\n        res = Math.ceil(res);\n\n        progress += res;\n        if (progress >= 100){\n            currentCourse.upDate(progress, Course.Status.FINISHED);\n        }\n        else{\n            currentCourse.upDate(progress, Course.Status.CURRENT);\n        }\n        db.updateFirebaseProgress(\"Courses\" ,currentCourse.getName(), \"progress\", progress);\n    }\n\n    /**\n     * Кнопка продолжить обучение\n     * Обновляет базу данных при нажатии\n     * @param view\n     */\n    public void startBtn(View view){\n        for (int i = 0; i < ecoCard.size(); i++) {\n            EcoCard card = ecoCard.get(i);\n            Enum status = card.getStatus();\n            if (status == EcoCard.Status.OPENED){\n                Intent intent = new Intent(this, EcoCardActivity.class);\n\n                intent.putExtra(card.getClass().getSimpleName(),card);\n\n                upDateCurrentCourse();\n\n                if (i != ecoCard.size() - 1) {\n                    ecoCard.get(i + 1).upDate(EcoCard.Status.OPENED);\n                    db.updateFirebaseProgress(\"Cards\" ,ecoCard.get(i + 1).getName(), \"status\", 1);\n                }\n                card.upDate(EcoCard.Status.WATCHED);\n                db.updateFirebaseProgress(\"Cards\" ,card.getName(), \"status\", 2);\n                startActivityForResult(intent,REQUST);\n                break;\n            }\n        }\n    }\n}\n
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/CourseCardActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/CourseActivity.java	(date 1604520122000)
@@ -4,7 +4,6 @@
 import android.os.Bundle;
 import android.view.View;
 import android.widget.Button;
-import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.Nullable;
@@ -14,16 +13,14 @@
 import java.io.IOException;
 import java.util.List;
 
-import skarlat.dev.ecoproject.Course;
-import skarlat.dev.ecoproject.EcoCard;
-import skarlat.dev.ecoproject.R;
+import skarlat.dev.ecoproject.databinding.ActivityCourseCardBinding;
+import skarlat.dev.ecoproject.includes.dataclass.Course;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
 import skarlat.dev.ecoproject.adapter.CardsViewAdapter;
 import skarlat.dev.ecoproject.customView.ProgressBarView;
-import skarlat.dev.ecoproject.databinding.ActivityCourseCardBinding;
-import skarlat.dev.ecoproject.databinding.ActivityHomeBinding;
 import skarlat.dev.ecoproject.includes.database.DatabaseHelper;
 
-public class CourseCardActivity extends AppCompatActivity {
+public class CourseActivity extends AppCompatActivity {
     private ProgressBarView progressBarView;
     private TextView leftCards;
     private TextView cursTitle;
@@ -59,8 +56,8 @@
         ecoCard = db.getAllCardsByCourseNameID(courseName);
 
         // получение ID по имени
-       // int drawableID = this.getResources().getIdentifier(imgCourse, "drawable", getPackageName());
-       // courseImgView.setBackgroundResource(drawableID);
+        // int drawableID = this.getResources().getIdentifier(imgCourse, "drawable", getPackageName());
+        // courseImgView.setBackgroundResource(drawableID);
         cursTitle.setText(currentCourse.getTitle());
         progress = currentCourse.getProgressBar();
         progress = db.getCourseByName(courseName).getProgressBar();
@@ -83,7 +80,7 @@
 //            startCourse.setText("Начать обучение");
 
 
-        CardsViewAdapter adapter = new CardsViewAdapter(CourseCardActivity.this, ecoCard);
+        CardsViewAdapter adapter = new CardsViewAdapter(CourseActivity.this, ecoCard);
         binding.recycleCards.setAdapter(adapter);
         db.upDateIsCurrentCourse(courseName);
     }
@@ -114,7 +111,7 @@
         super.onActivityResult(requestCode, resultCode, data);
     }
 
-    public void onBackBtn(View view){
+    public void onBackBtn(View view) {
         onBackPressed();
     }
 
@@ -126,27 +123,28 @@
 
     /**
      * View карточки обновляет базу данных при переходе
+     *
      * @param view
      */
     public void openCard(View view) {
         EcoCard currentCard = (EcoCard) view.getTag();
 
-        Intent intent = new Intent(this, EcoCardActivity.class);
+        Intent intent = new Intent(this, CardActivity.class);
         intent.putExtra(currentCard.getClass().getSimpleName(), currentCard);
         if (currentCard.getStatus() == EcoCard.Status.WATCHED) {
             startActivityForResult(intent, REQUST);
-        }else {
+        } else {
 
             for (int i = 0; i < ecoCard.size(); i++) {
                 if (ecoCard.get(i).getName() == currentCard.getName() && (i + 1) < ecoCard.size()) {
                     ecoCard.get(i + 1).upDate(EcoCard.Status.OPENED);
-                    db.updateFirebaseProgress("Cards" ,ecoCard.get(i + 1).getName(), "status", 1);
+                    db.updateFirebaseProgress("Cards", ecoCard.get(i + 1).getName(), "status", 1);
                     break;
                 }
             }
 
             currentCard.upDate(EcoCard.Status.WATCHED);
-            db.updateFirebaseProgress("Cards" ,currentCard.getName(), "status", 2);
+            db.updateFirebaseProgress("Cards", currentCard.getName(), "status", 2);
             upDateCurrentCourse();
 
             startActivityForResult(intent, REQUST);
@@ -156,44 +154,44 @@
     /**
      * Progress бар для базы данных
      */
-    private void upDateCurrentCourse(){
+    private void upDateCurrentCourse() {
 
-        double res =  100.00 / (double) ecoCard.size();
+        double res = 100.00 / (double) ecoCard.size();
         res = Math.ceil(res);
 
         progress += res;
-        if (progress >= 100){
+        if (progress >= 100) {
             currentCourse.upDate(progress, Course.Status.FINISHED);
-        }
-        else{
+        } else {
             currentCourse.upDate(progress, Course.Status.CURRENT);
         }
-        db.updateFirebaseProgress("Courses" ,currentCourse.getName(), "progress", progress);
+        db.updateFirebaseProgress("Courses", currentCourse.getName(), "progress", progress);
     }
 
     /**
      * Кнопка продолжить обучение
      * Обновляет базу данных при нажатии
+     *
      * @param view
      */
-    public void startBtn(View view){
+    public void startBtn(View view) {
         for (int i = 0; i < ecoCard.size(); i++) {
             EcoCard card = ecoCard.get(i);
             Enum status = card.getStatus();
-            if (status == EcoCard.Status.OPENED){
-                Intent intent = new Intent(this, EcoCardActivity.class);
+            if (status == EcoCard.Status.OPENED) {
+                Intent intent = new Intent(this, CardActivity.class);
 
-                intent.putExtra(card.getClass().getSimpleName(),card);
+                intent.putExtra(card.getClass().getSimpleName(), card);
 
                 upDateCurrentCourse();
 
                 if (i != ecoCard.size() - 1) {
                     ecoCard.get(i + 1).upDate(EcoCard.Status.OPENED);
-                    db.updateFirebaseProgress("Cards" ,ecoCard.get(i + 1).getName(), "status", 1);
+                    db.updateFirebaseProgress("Cards", ecoCard.get(i + 1).getName(), "status", 1);
                 }
                 card.upDate(EcoCard.Status.WATCHED);
-                db.updateFirebaseProgress("Cards" ,card.getName(), "status", 2);
-                startActivityForResult(intent,REQUST);
+                db.updateFirebaseProgress("Cards", card.getName(), "status", 2);
+                startActivityForResult(intent, REQUST);
                 break;
             }
         }
Index: app/src/main/java/skarlat/dev/ecoproject/activity/CardActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/CardActivity.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/CardActivity.java	(date 1604520122000)
@@ -0,0 +1,119 @@
+package skarlat.dev.ecoproject.activity;
+
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.ScrollView;
+import android.widget.TextView;
+import android.widget.Toolbar;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.RecyclerView;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import skarlat.dev.ecoproject.Const;
+import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
+import skarlat.dev.ecoproject.includes.dataclass.EcoSoviet;
+import skarlat.dev.ecoproject.R;
+import skarlat.dev.ecoproject.databinding.ActivityEcoCardsBinding;
+import skarlat.dev.ecoproject.includes.database.DatabaseHelper;
+
+//import skarlat.dev.ecoproject.activity.adapters;
+//import androidx.appcompat.widget.Toolbar;
+
+public class CardActivity extends AppCompatActivity {
+    public static String TAG = "EcoCardActivity";
+    private RecyclerView recyclerView;
+    private ScrollView scrollView;
+    private EcoCard ecoCard;
+    private DatabaseHelper db;
+    private View fullDescView;
+    List<EcoSoviet> ecoSoviets = new ArrayList<>();
+    Drawable whyBackground;
+    Drawable howBackground;
+    ColorStateList whyColor;
+    ColorStateList howColor;
+    Toolbar myToolbar;
+    LinearLayout linearLayout;
+    private ActivityEcoCardsBinding binding;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        binding = ActivityEcoCardsBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+        db = new DatabaseHelper();
+        Bundle bundle = getIntent().getExtras();
+        ecoCard = (EcoCard) bundle.get(EcoCard.class.getSimpleName());
+        String path = ecoCard.cardNameID + ".png";
+        try {
+            binding.cardPicture.setImageDrawable(ecoCard.getImage());
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        binding.whyItPossible.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent whyIntent = new Intent(CardActivity.this, WhyActivity.class);
+                whyIntent.putExtra(Const.ARTICLE_JSON_PATH, ecoCard.courseNameID + "/" + ecoCard.cardNameID + ".json");
+                startActivity(whyIntent);
+            }
+        });
+        TextView textView = findViewById(R.id.card_title);
+        textView.setText(capitalize(ecoCard.title));
+        textView = findViewById(R.id.card_category);
+        textView.setText(ecoCard.description);
+        initiList();
+        linearLayout = findViewById(R.id.card_linear_layout);
+        int i = 0;
+        Iterator iterator = ecoSoviets.iterator();
+        if (!ecoSoviets.isEmpty()) {
+            do {
+                inflateLayout((EcoSoviet) iterator.next());
+            } while (iterator.hasNext());
+        }
+
+    }
+
+    private String capitalize(String cap) {
+        return cap.substring(0, 1).concat(cap.substring(1).toLowerCase());
+    }
+
+    private void inflateLayout(EcoSoviet ecoSoviet) {
+        LayoutInflater layoutInflater = LayoutInflater.from(this);
+        View view = layoutInflater.inflate(R.layout.card_soviet, null, false);
+        ((TextView) view.findViewById(R.id.header_card)).setText(ecoSoviet.getTitle());
+        ((TextView) view.findViewById(R.id.descr_card)).setText(ecoSoviet.getDescription());
+        linearLayout.addView(view);
+    }
+
+    private void log(String message) {
+        Log.d(TAG, message);
+    } // Для дебагинга и логинга
+
+    protected void initiList() {
+        ecoSoviets = db.getAllByCardName(ecoCard.getName());
+    }
+
+
+    public void onBackBtn(View view) {
+        onBackPressed();
+    }
+
+
+    @Override
+    public void onBackPressed() {
+        setResult(RESULT_OK);
+        super.onBackPressed();
+    }
+}
Index: app/src/main/java/skarlat/dev/ecoproject/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.viewpager.widget.ViewPager;\n\nimport android.os.Bundle;\n\nimport com.ogaclejapan.smarttablayout.SmartTabLayout;\nimport com.ogaclejapan.smarttablayout.utils.v4.FragmentPagerItemAdapter;\nimport com.ogaclejapan.smarttablayout.utils.v4.FragmentPagerItems;\n\n\npublic class TestActivity extends AppCompatActivity {\n\t\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_test);\n//\t\tFragmentPagerItemAdapter adapter = new FragmentPagerItemAdapter(\n//\t\t\t\tgetSupportFragmentManager(), FragmentPagerItems.with(this)\n//\t\t\t\t\t\t                             .add(\"2\", PageFragment.class)\n//\t\t\t\t\t\t                             .add(\"1\".concat(\" !\"), PageFragment.class)\n//\t\t\t\t\t\t                             .create());\n//\n//\t\tViewPager viewPager = (ViewPager) findViewById(R.id.viewpager);\n//\t\tviewPager.setAdapter(adapter);\n//\n//\t\tSmartTabLayout viewPagerTab = (SmartTabLayout) findViewById(R.id.viewpagertab);\n//\t\tviewPagerTab.setViewPager(viewPager);\n\t}\n}\n
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/TestActivity.java	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/TestActivity.java	(date 1604520122000)
@@ -1,4 +1,4 @@
-package skarlat.dev.ecoproject;
+package skarlat.dev.ecoproject.activity;
 
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.viewpager.widget.ViewPager;
@@ -9,13 +9,15 @@
 import com.ogaclejapan.smarttablayout.utils.v4.FragmentPagerItemAdapter;
 import com.ogaclejapan.smarttablayout.utils.v4.FragmentPagerItems;
 
+import skarlat.dev.ecoproject.R;
+
 
 public class TestActivity extends AppCompatActivity {
-	
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		setContentView(R.layout.activity_test);
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_test);
 //		FragmentPagerItemAdapter adapter = new FragmentPagerItemAdapter(
 //				getSupportFragmentManager(), FragmentPagerItems.with(this)
 //						                             .add("2", PageFragment.class)
@@ -27,5 +29,5 @@
 //
 //		SmartTabLayout viewPagerTab = (SmartTabLayout) findViewById(R.id.viewpagertab);
 //		viewPagerTab.setViewPager(viewPager);
-	}
+    }
 }
Index: app/src/main/java/skarlat/dev/ecoproject/network/FireBaseAuthenticator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/network/FireBaseAuthenticator.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/network/FireBaseAuthenticator.java	(date 1604520122000)
@@ -0,0 +1,22 @@
+package skarlat.dev.ecoproject.network;
+
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+
+import skarlat.dev.ecoproject.User;
+
+public class FireBaseAuthenticator extends Authenticator<FirebaseAuth> {
+
+    public FireBaseAuthenticator(FirebaseAuth instance) {
+        super(instance);
+    }
+
+    @Override
+    public User getCurrentUser() {
+        FirebaseUser user = instance.getCurrentUser();
+        if (user == null) {
+            return null;
+        }
+        return new User(user.getDisplayName());
+    }
+}
Index: app/src/main/java/skarlat/dev/ecoproject/network/Loginner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/network/Loginner.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/network/Loginner.java	(date 1604520122000)
@@ -0,0 +1,16 @@
+package skarlat.dev.ecoproject.network;
+
+import skarlat.dev.ecoproject.User;
+
+abstract public class Loginner {
+    protected String passwd, eMail;
+
+    public Loginner(String passwd, String eMail) {
+        this.passwd = passwd;
+        this.eMail = eMail;
+    }
+
+    abstract public User logIn(String passwd, String eMail);
+
+    abstract public User logIn();
+}
Index: app/src/main/java/skarlat/dev/ecoproject/network/Authenticator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/network/Authenticator.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/network/Authenticator.java	(date 1604520122000)
@@ -0,0 +1,17 @@
+package skarlat.dev.ecoproject.network;
+
+import skarlat.dev.ecoproject.User;
+
+public abstract class Authenticator<T> {
+    protected T instance;
+
+    public Authenticator(T instance) {
+        this.instance = instance;
+    }
+
+    public abstract User getCurrentUser();
+
+    T getInstance() {
+        return instance;
+    }
+}
Index: app/src/main/java/skarlat/dev/ecoproject/eitorjs/AdviceLinkElement.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/eitorjs/AdviceLinkElement.kt	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/eitorjs/AdviceLinkElement.kt	(date 1604520122000)
@@ -0,0 +1,53 @@
+package skarlat.dev.ecoproject.eitorjs
+
+import android.content.Intent
+import android.net.Uri
+import android.view.View
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.hannesdorfmann.adapterdelegates4.AdapterDelegate
+import kotlinx.android.synthetic.main.element_advice_link.view.*
+import skarlat.dev.ecoproject.R
+import work.upstarts.editorjskit.environment.inflate
+import work.upstarts.editorjskit.models.EJCustomBlock
+import work.upstarts.editorjskit.ui.theme.EJStyle
+
+class AdviceLinkElement(private val theme: EJStyle? = null) : AdapterDelegate<MutableList<Any>>() {
+
+    var items: MutableList<Any>? = null
+
+    override fun onCreateViewHolder(parent: ViewGroup): RecyclerView.ViewHolder {
+        val view = parent.inflate(R.layout.element_advice_link)
+        return ViewHolder(view)
+    }
+
+    override fun isForViewType(items: MutableList<Any>, position: Int): Boolean {
+        return items[position] is EJCustomBlock && (items[position] as EJCustomBlock).type == ArticleEcoTipsBlocks.ADVICE_LINK
+    }
+
+    override fun onBindViewHolder(items: MutableList<Any>, position: Int, holder: RecyclerView.ViewHolder, payloads: MutableList<Any>) {
+        (holder as ViewHolder).bind(items[position] as EJCustomBlock)
+    }
+
+    private class ViewHolder(val view: View) : RecyclerView.ViewHolder(view) {
+        private lateinit var adviceLinkBlock: EJCustomBlock
+
+        fun bind(adviceLinkBlock: EJCustomBlock) {
+            this.adviceLinkBlock = adviceLinkBlock
+
+            with(itemView) {
+                if (adviceLinkBlock.data is ArticleAdviceLinkData) {
+                    val data = adviceLinkBlock.data as ArticleAdviceLinkData
+                    descriptionText.text = data.text
+                    setOnClickListener {
+                        val openLinkIntent = Intent()
+                        openLinkIntent.action = Intent.ACTION_VIEW
+                        openLinkIntent.data = Uri.parse(data.url)
+                        context.startActivity(openLinkIntent)
+                    }
+                }
+
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleEcoTipsBlocks.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleEcoTipsBlocks.kt	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleEcoTipsBlocks.kt	(date 1604520122000)
@@ -0,0 +1,23 @@
+package skarlat.dev.ecoproject.eitorjs
+
+import work.upstarts.editorjskit.models.EJAbstractBlockType
+
+/**
+ * Enum class contains custom EJ blocks. Declare it this.
+ */
+enum class ArticleEcoTipsBlocks(override val jsonName: String) : EJAbstractBlockType {
+    QUOTE("quote"),
+    ADVICE_LINK("advice_link"),
+    ARTICLE_IMAGE("article_image");
+
+    companion object {
+        fun fromString(jsonName: String): ArticleEcoTipsBlocks {
+            return when (jsonName) {
+                "quote" -> QUOTE
+                "advice_link" -> ADVICE_LINK
+                "article_image" -> ARTICLE_IMAGE
+                else -> throw IllegalArgumentException(jsonName)
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/network/FireBaseLoginner.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/network/FireBaseLoginner.java	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/network/FireBaseLoginner.java	(date 1604520122000)
@@ -0,0 +1,57 @@
+package skarlat.dev.ecoproject.network;
+
+import android.util.Log;
+
+import androidx.annotation.NonNull;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.AuthResult;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+
+import skarlat.dev.ecoproject.App;
+import skarlat.dev.ecoproject.User;
+
+public class FireBaseLoginner extends Loginner implements OnCompleteListener<AuthResult> {
+    private final String TAG = "FireBaseLoginner";
+    private String operation;
+    private String debugLogInGoogle = "signInWithGoogle";
+
+    public FireBaseLoginner(String passwd, String eMail) {
+        super(passwd, eMail);
+    }
+
+    @Override
+    public User logIn(String passwd, String eMail) {
+        operation = "signInWithEmail";
+        FirebaseAuth mAuth = (FirebaseAuth) App.auth.getInstance();
+        /*FirebaseUser user* =*/
+        mAuth
+                .signInWithEmailAndPassword(eMail, passwd)
+                .addOnCompleteListener(this);
+//				                    .getResult()
+//				                    .getUser();
+        FirebaseUser user = mAuth.getCurrentUser();
+        if (user == null)
+            return null;
+        return new User(user.getDisplayName());
+    }
+
+//	public
+
+    @Override
+    public User logIn() {
+        return logIn(this.passwd, this.eMail);
+    }
+
+
+    @Override
+    public void onComplete(@NonNull Task<AuthResult> task) {
+        if (task.isSuccessful()) {
+            Log.d(TAG, "Task " + operation + " is successful");
+        } else {
+            Log.d(TAG, "Task " + operation + " is failure");
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleImageElement.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleImageElement.kt	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleImageElement.kt	(date 1604520122000)
@@ -0,0 +1,74 @@
+package skarlat.dev.ecoproject.eitorjs
+
+
+import android.graphics.Paint
+import android.graphics.drawable.BitmapDrawable
+import android.graphics.drawable.Drawable
+import android.view.View
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.hannesdorfmann.adapterdelegates4.AdapterDelegate
+import kotlinx.android.synthetic.main.article_image.view.*
+import kotlinx.android.synthetic.main.quote_element.view.*
+import skarlat.dev.ecoproject.App
+import skarlat.dev.ecoproject.R
+import work.upstarts.editorjskit.environment.inflate
+import work.upstarts.editorjskit.models.EJCustomBlock
+import work.upstarts.editorjskit.models.data.EJData
+import work.upstarts.editorjskit.ui.theme.EJStyle
+import java.io.InputStream
+
+class ArticleImageElement(private val theme: EJStyle? = null) : AdapterDelegate<MutableList<Any>>() {
+
+    var items: MutableList<Any>? = null
+
+    override fun onCreateViewHolder(parent: ViewGroup): RecyclerView.ViewHolder {
+        val view = parent.inflate(R.layout.article_image)
+        return ViewHolder(view)
+    }
+
+    override fun isForViewType(items: MutableList<Any>, position: Int): Boolean {
+        return items[position] is EJCustomBlock && (items[position] as EJCustomBlock).type == ArticleEcoTipsBlocks.ARTICLE_IMAGE
+    }
+
+    override fun onBindViewHolder(items: MutableList<Any>, position: Int, holder: RecyclerView.ViewHolder, payloads: MutableList<Any>) {
+        (holder as ViewHolder).bind(items[position] as EJCustomBlock)
+    }
+
+    fun applyHeaderTheme(view: View, headerInitializer: (EJStyle, Paint) -> Unit) {
+        theme?.let {
+            view.quoteText.apply {
+                headerInitializer(it, paint)
+            }
+        }
+    }
+
+    private inner class ViewHolder(val view: View) : RecyclerView.ViewHolder(view) {
+        private lateinit var data: EJData
+
+        fun bind(quoteBlock: EJCustomBlock) {
+            this.data = quoteBlock.data
+
+            with(itemView) {
+                if (data is ArticleImageData) {
+                    caption.text = (data as ArticleImageData).caption
+                    imageView.setImageDrawable(getImageDrawable((data as ArticleImageData).path))
+                }
+            }
+        }
+
+        private fun getImageDrawable(path: String): Drawable {
+            val assetManager = App.instance.resources.assets
+            var drawable: Drawable
+
+            try {
+                val steam: InputStream = assetManager.open(path)
+                drawable = BitmapDrawable(steam)
+//            drawable = Drawable.createFromPath(path)!!
+            } catch (p: Exception) {
+                drawable = App.instance.getDrawable(R.drawable.lvl_1_1)!!
+            }
+            return drawable
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/click_ripple.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/click_ripple.xml	(date 1604520122000)
+++ app/src/main/res/drawable/click_ripple.xml	(date 1604520122000)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ripple xmlns:android="http://schemas.android.com/apk/res/android"
+    android:color="?android:colorControlHighlight">
+
+</ripple>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_exit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_exit.xml	(date 1604520122000)
+++ app/src/main/res/drawable/ic_exit.xml	(date 1604520122000)
@@ -0,0 +1,13 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="56dp"
+    android:height="56dp"
+    android:viewportWidth="56"
+    android:viewportHeight="56">
+    <path
+        android:fillColor="#00000000"
+        android:fillType="evenOdd"
+        android:pathData="M28.1242,26L34,20M28.1242,26L34,32M28.1242,26L22,20M28.1242,26L22,32"
+        android:strokeWidth="2"
+        android:strokeColor="#FFFFFF"
+        android:strokeLineCap="round" />
+</vector>
Index: app/src/main/java/skarlat/dev/ecoproject/adapter/ArticleQuoteElement.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.adapter\n\nimport android.graphics.Paint\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.recyclerview.widget.RecyclerView\nimport com.hannesdorfmann.adapterdelegates4.AdapterDelegate\nimport kotlinx.android.synthetic.main.quote_element.view.*\nimport skarlat.dev.ecoproject.EJQuoteBlockType\nimport skarlat.dev.ecoproject.EJQuoteData\nimport skarlat.dev.ecoproject.R\nimport work.upstarts.editorjskit.EJKit\nimport work.upstarts.editorjskit.environment.inflate\nimport work.upstarts.editorjskit.models.EJAbstractCustomBlock\nimport work.upstarts.editorjskit.models.EJBlock\nimport work.upstarts.editorjskit.models.EJCustomBlock\nimport work.upstarts.editorjskit.models.EJHeaderBlock\nimport work.upstarts.editorjskit.ui.theme.EJStyle\n\nclass ArticleQuoteElement(private val theme: EJStyle? = null): AdapterDelegate<MutableList<Any>>() {\n\n    var items: MutableList<Any>? = null\n\n    override fun onCreateViewHolder(parent: ViewGroup): RecyclerView.ViewHolder {\n        val view = parent.inflate(R.layout.quote_element)\n        return ViewHolder(view)\n    }\n\n    override fun isForViewType(items: MutableList<Any>, position: Int): Boolean {\n        return items[position] is EJCustomBlock && (items[position] as EJCustomBlock).type == EJQuoteBlockType.QUOTE\n    }\n\n    override fun onBindViewHolder(items: MutableList<Any>, position: Int, holder: RecyclerView.ViewHolder, payloads: MutableList<Any>) {\n        (holder as ViewHolder).bind(items[position] as EJCustomBlock)\n    }\n\n    fun applyHeaderTheme(view: View, headerInitializer: (EJStyle, Paint) -> Unit) {\n        theme?.let {\n            view.quoteText.apply {\n                headerInitializer(it, paint)\n            }\n        }\n    }\n\n    private inner class ViewHolder(val view: View) : RecyclerView.ViewHolder(view) {\n        private lateinit var quoteBlock: EJCustomBlock\n\n        fun bind(quoteBlock: EJCustomBlock) {\n            this.quoteBlock = quoteBlock\n\n            with(itemView) {\n                quoteText.text = (quoteBlock.data as EJQuoteData).text\n            }\n\n//            applyHeaderTheme(view) { theme, paint ->\n//                theme.applyHeadingStyle(view, paint, headerBlock.data.level)\n//            }\n        }\n    }\n}
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/adapter/ArticleQuoteElement.kt	(revision 6e3d974f6d14f511b9699ac026e8b6cbe78afb19)
+++ app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleQuoteElement.kt	(date 1604520122000)
@@ -1,4 +1,4 @@
-package skarlat.dev.ecoproject.adapter
+package skarlat.dev.ecoproject.eitorjs
 
 import android.graphics.Paint
 import android.view.View
@@ -6,18 +6,12 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.hannesdorfmann.adapterdelegates4.AdapterDelegate
 import kotlinx.android.synthetic.main.quote_element.view.*
-import skarlat.dev.ecoproject.EJQuoteBlockType
-import skarlat.dev.ecoproject.EJQuoteData
 import skarlat.dev.ecoproject.R
-import work.upstarts.editorjskit.EJKit
 import work.upstarts.editorjskit.environment.inflate
-import work.upstarts.editorjskit.models.EJAbstractCustomBlock
-import work.upstarts.editorjskit.models.EJBlock
 import work.upstarts.editorjskit.models.EJCustomBlock
-import work.upstarts.editorjskit.models.EJHeaderBlock
 import work.upstarts.editorjskit.ui.theme.EJStyle
 
-class ArticleQuoteElement(private val theme: EJStyle? = null): AdapterDelegate<MutableList<Any>>() {
+class ArticleQuoteElement(private val theme: EJStyle? = null) : AdapterDelegate<MutableList<Any>>() {
 
     var items: MutableList<Any>? = null
 
@@ -27,7 +21,7 @@
     }
 
     override fun isForViewType(items: MutableList<Any>, position: Int): Boolean {
-        return items[position] is EJCustomBlock && (items[position] as EJCustomBlock).type == EJQuoteBlockType.QUOTE
+        return items[position] is EJCustomBlock && (items[position] as EJCustomBlock).type == ArticleEcoTipsBlocks.QUOTE
     }
 
     override fun onBindViewHolder(items: MutableList<Any>, position: Int, holder: RecyclerView.ViewHolder, payloads: MutableList<Any>) {
@@ -49,12 +43,8 @@
             this.quoteBlock = quoteBlock
 
             with(itemView) {
-                quoteText.text = (quoteBlock.data as EJQuoteData).text
+                quoteText.text = (quoteBlock.data as ArticleQuoteData).text
             }
-
-//            applyHeaderTheme(view) { theme, paint ->
-//                theme.applyHeadingStyle(view, paint, headerBlock.data.level)
-//            }
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleData.kt	(date 1604520122000)
+++ app/src/main/java/skarlat/dev/ecoproject/eitorjs/ArticleData.kt	(date 1604520122000)
@@ -0,0 +1,17 @@
+package skarlat.dev.ecoproject.eitorjs
+
+import work.upstarts.editorjskit.models.data.EJData
+
+data class ArticleQuoteData(
+        val text: String
+) : EJData()
+
+data class ArticleAdviceLinkData(
+        val text: String,
+        val url: String
+) : EJData()
+
+data class ArticleImageData(
+        val caption: String,
+        val path: String
+) : EJData()
\ No newline at end of file
Index: app/src/main/assets/why.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/why.json	(date 1604520122000)
+++ app/src/main/assets/why.json	(date 1604520122000)
@@ -0,0 +1,69 @@
+{
+  "time" : 1560845515750,
+  "blocks" : [
+    {
+      "type" : "header",
+      "data" : {
+        "text" : "Почему это важно?",
+        "level" : 1
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Электроэнергия — один из поставщиков загрязнителей в почву, воду и атмосферу. Такими загрязнителями чаще всего выступают продукты сгорания топлива (уголь, нефть, газ и тд.)."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Во всем мире более 80% энергии получают из ископаемого топлива (уголь, нефть, газ). Его количество на нашей Земле ограничено."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Около 33% всего добываемого топлива сжигается в теплоэлектростанциях \u2028(в России — 67%). На наиболее экологичные отрасли энергетики в России приходится около 0,1% (солнечная, ветровая, гидротермальная энергетики и электростанции на биотопливе), а например, во Франции — более 20%. "
+      }
+    },
+    {
+      "type" : "quote",
+      "data" : {
+        "text" : "Да потому что!"
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Необходимо"
+      }
+    },
+    {
+      "type": "image",
+      "data": {
+        "file": {
+          "url": "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+        },
+        "caption": "Here could be some caption for this picture",
+        "withBorder": true,
+        "stretched": false,
+        "withBackground": true
+      }
+    },
+    {
+      "type": "article_image",
+      "data": {
+        "caption": "Новогиреевская солнечная электростанция",
+        "path": "images.lvl-1/lvl-1.png"
+      }
+    },
+    {
+      "type" : "advice_link",
+      "data" : {
+        "text" : "В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012.",
+        "url" : "https://github.com/bboyzlodey/ecoproject"
+      }
+    }
+  ],
+  "version" : "2.12.3"
+}
\ No newline at end of file
Index: app/src/main/res/layout/article_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/article_image.xml	(date 1604520122000)
+++ app/src/main/res/layout/article_image.xml	(date 1604520122000)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintDimensionRatio="16:9"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:src="@drawable/begin_button" />
+
+    <TextView
+        android:id="@+id/caption"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="16dp"
+        android:layout_marginTop="8dp"
+        android:layout_marginEnd="16dp"
+        android:gravity="center_horizontal"
+        android:textColor="@color/colorCaptionText"
+        android:textSize="14sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/imageView"
+        tools:text="Новогиреевская солнечная электростанция" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/element_advice_link.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/element_advice_link.xml	(date 1604520122000)
+++ app/src/main/res/layout/element_advice_link.xml	(date 1604520122000)
@@ -0,0 +1,55 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:padding="16dp">
+
+    <skarlat.dev.ecoproject.customView.AdviceView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="16dp"
+        android:background="@android:color/transparent"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/descriptionText"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:fontFamily="@font/bellota_bold"
+                android:textColor="@android:color/black"
+                android:textSize="16sp"
+                tools:text="В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012." />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="4dp"
+                android:orientation="horizontal">
+
+                <TextView
+                    android:id="@+id/why_readMore_const"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_vertical"
+                    android:fontFamily="@font/bellota_bold"
+                    android:text="Открыть ссылку"
+                    android:textColor="@color/colorBolotoButton"
+                    android:textSize="14sp" />
+
+                <ImageView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_vertical"
+                    android:layout_marginLeft="6dp"
+                    android:background="@null"
+                    android:src="@drawable/ic_vector_4" />
+            </LinearLayout>
+        </LinearLayout>
+
+    </skarlat.dev.ecoproject.customView.AdviceView>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/assets/lvl-1/save_water.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/lvl-1/save_water.json	(date 1604520122000)
+++ app/src/main/assets/lvl-1/save_water.json	(date 1604520122000)
@@ -0,0 +1,69 @@
+{
+  "time" : 1560845515750,
+  "blocks" : [
+    {
+      "type" : "header",
+      "data" : {
+        "text" : "Почему это важно?",
+        "level" : 1
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Электроэнергия — один из поставщиков загрязнителей в почву, воду и атмосферу. Такими загрязнителями чаще всего выступают продукты сгорания топлива (уголь, нефть, газ и тд.)."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Во всем мире более 80% энергии получают из ископаемого топлива (уголь, нефть, газ). Его количество на нашей Земле ограничено."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Около 33% всего добываемого топлива сжигается в теплоэлектростанциях \u2028(в России — 67%). На наиболее экологичные отрасли энергетики в России приходится около 0,1% (солнечная, ветровая, гидротермальная энергетики и электростанции на биотопливе), а например, во Франции — более 20%. "
+      }
+    },
+    {
+      "type" : "quote",
+      "data" : {
+        "text" : "Да потому что!"
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Необходимо"
+      }
+    },
+    {
+      "type": "image",
+      "data": {
+        "file": {
+          "url": "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+        },
+        "caption": "Here could be some caption for this picture",
+        "withBorder": true,
+        "stretched": false,
+        "withBackground": true
+      }
+    },
+    {
+      "type": "article_image",
+      "data": {
+        "caption": "Новогиреевская солнечная электростанция",
+        "path": "images.lvl-1/lvl-1.png"
+      }
+    },
+    {
+      "type" : "advice_link",
+      "data" : {
+        "text" : "В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012.",
+        "url" : "https://github.com/bboyzlodey/ecoproject"
+      }
+    }
+  ],
+  "version" : "2.12.3"
+}
\ No newline at end of file
Index: app/src/main/assets/lvl-1/save_food.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/lvl-1/save_food.json	(date 1604520122000)
+++ app/src/main/assets/lvl-1/save_food.json	(date 1604520122000)
@@ -0,0 +1,69 @@
+{
+  "time" : 1560845515750,
+  "blocks" : [
+    {
+      "type" : "header",
+      "data" : {
+        "text" : "Почему это важно?",
+        "level" : 1
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Электроэнергия — один из поставщиков загрязнителей в почву, воду и атмосферу. Такими загрязнителями чаще всего выступают продукты сгорания топлива (уголь, нефть, газ и тд.)."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Во всем мире более 80% энергии получают из ископаемого топлива (уголь, нефть, газ). Его количество на нашей Земле ограничено."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Около 33% всего добываемого топлива сжигается в теплоэлектростанциях \u2028(в России — 67%). На наиболее экологичные отрасли энергетики в России приходится около 0,1% (солнечная, ветровая, гидротермальная энергетики и электростанции на биотопливе), а например, во Франции — более 20%. "
+      }
+    },
+    {
+      "type" : "quote",
+      "data" : {
+        "text" : "Да потому что!"
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Необходимо"
+      }
+    },
+    {
+      "type": "image",
+      "data": {
+        "file": {
+          "url": "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+        },
+        "caption": "Here could be some caption for this picture",
+        "withBorder": true,
+        "stretched": false,
+        "withBackground": true
+      }
+    },
+    {
+      "type": "article_image",
+      "data": {
+        "caption": "Новогиреевская солнечная электростанция",
+        "path": "images.lvl-1/lvl-1.png"
+      }
+    },
+    {
+      "type" : "advice_link",
+      "data" : {
+        "text" : "В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012.",
+        "url" : "https://github.com/bboyzlodey/ecoproject"
+      }
+    }
+  ],
+  "version" : "2.12.3"
+}
\ No newline at end of file
Index: app/src/main/assets/lvl-1/save_warm.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/lvl-1/save_warm.json	(date 1604520122000)
+++ app/src/main/assets/lvl-1/save_warm.json	(date 1604520122000)
@@ -0,0 +1,69 @@
+{
+  "time" : 1560845515750,
+  "blocks" : [
+    {
+      "type" : "header",
+      "data" : {
+        "text" : "Почему это важно?",
+        "level" : 1
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Электроэнергия — один из поставщиков загрязнителей в почву, воду и атмосферу. Такими загрязнителями чаще всего выступают продукты сгорания топлива (уголь, нефть, газ и тд.)."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Во всем мире более 80% энергии получают из ископаемого топлива (уголь, нефть, газ). Его количество на нашей Земле ограничено."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Около 33% всего добываемого топлива сжигается в теплоэлектростанциях \u2028(в России — 67%). На наиболее экологичные отрасли энергетики в России приходится около 0,1% (солнечная, ветровая, гидротермальная энергетики и электростанции на биотопливе), а например, во Франции — более 20%. "
+      }
+    },
+    {
+      "type" : "quote",
+      "data" : {
+        "text" : "Да потому что!"
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Необходимо"
+      }
+    },
+    {
+      "type": "image",
+      "data": {
+        "file": {
+          "url": "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+        },
+        "caption": "Here could be some caption for this picture",
+        "withBorder": true,
+        "stretched": false,
+        "withBackground": true
+      }
+    },
+    {
+      "type": "article_image",
+      "data": {
+        "caption": "Новогиреевская солнечная электростанция",
+        "path": "images.lvl-1/lvl-1.png"
+      }
+    },
+    {
+      "type" : "advice_link",
+      "data" : {
+        "text" : "В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012.",
+        "url" : "https://github.com/bboyzlodey/ecoproject"
+      }
+    }
+  ],
+  "version" : "2.12.3"
+}
\ No newline at end of file
Index: app/src/main/assets/lvl-1/save_electricity.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/lvl-1/save_electricity.json	(date 1604520122000)
+++ app/src/main/assets/lvl-1/save_electricity.json	(date 1604520122000)
@@ -0,0 +1,69 @@
+{
+  "time" : 1560845515750,
+  "blocks" : [
+    {
+      "type" : "header",
+      "data" : {
+        "text" : "Почему это важно?",
+        "level" : 1
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Электроэнергия — один из поставщиков загрязнителей в почву, воду и атмосферу. Такими загрязнителями чаще всего выступают продукты сгорания топлива (уголь, нефть, газ и тд.)."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Во всем мире более 80% энергии получают из ископаемого топлива (уголь, нефть, газ). Его количество на нашей Земле ограничено."
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Около 33% всего добываемого топлива сжигается в теплоэлектростанциях \u2028(в России — 67%). На наиболее экологичные отрасли энергетики в России приходится около 0,1% (солнечная, ветровая, гидротермальная энергетики и электростанции на биотопливе), а например, во Франции — более 20%. "
+      }
+    },
+    {
+      "type" : "quote",
+      "data" : {
+        "text" : "Да потому что!"
+      }
+    },
+    {
+      "type" : "paragraph",
+      "data" : {
+        "text" : "Необходимо"
+      }
+    },
+    {
+      "type": "image",
+      "data": {
+        "file": {
+          "url": "https://static.tildacdn.com/tild6366-6666-4765-b065-633965636536/logo.png"
+        },
+        "caption": "Here could be some caption for this picture",
+        "withBorder": true,
+        "stretched": false,
+        "withBackground": true
+      }
+    },
+    {
+      "type": "article_image",
+      "data": {
+        "caption": "Новогиреевская солнечная электростанция",
+        "path": "images.lvl-1/lvl-1.png"
+      }
+    },
+    {
+      "type" : "advice_link",
+      "data" : {
+        "text" : "В.А. Зайцев. Промышленная экология. – М.: БИНОМ. Лаборатория знаний, 2012.",
+        "url" : "https://github.com/bboyzlodey/ecoproject"
+      }
+    }
+  ],
+  "version" : "2.12.3"
+}
\ No newline at end of file
Index: .idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/codeStyleConfig.xml	(date 1604520122000)
+++ .idea/codeStyles/codeStyleConfig.xml	(date 1604520122000)
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="EcoProject" />
+  </state>
+</component>
\ No newline at end of file
