Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n\n    <!-- Base application theme. -->\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <!-- Customize your theme here. -->\n        <item name=\"colorButtonNormal\">@color/colorBolotoButton</item>\n        <item name=\"android:statusBarColor\">@color/colorBlack</item>\n        <item name=\"tabIndicatorColor\">@color/colorWhite</item>\n        <item name=\"android:textAllCaps\">false</item>\n        <item name=\"android:textColor\">@color/colorBlack</item>\n        <item name=\"android:fontFamily\">@font/roboto</item>\n        <item name=\"android:textCursorDrawable\">@drawable/cursor_boloto</item>\n    </style>\n\n    <style name=\"HeaderText\" parent=\"@android:style/TextAppearance\">\n        <item name=\"android:textColor\">@color/colorPrimary</item>\n        <item name=\"fontFamily\">@font/bellota_bold</item>\n    </style>\n\n    <style name=\"ParagraphText\" parent=\"@android:style/TextAppearance\">\n        <item name=\"android:textColor\">@color/delimeter_color</item>\n        <item name=\"android:paddingStart\">16dp</item>\n    </style>\n\n    <style name=\"titleTextAppearance\" parent=\"@style/Widget.AppCompat.TextView\">\n        <item name=\"android:gravity\">center_horizontal|bottom</item>\n        <item name=\"android:layout_width\">match_parent</item>\n        <item name=\"android:layout_gravity\">center</item>\n        <item name=\"android:textAlignment\">center</item>\n    </style>\n\n    <style name=\"Home\" parent=\"Widget.AppCompat.ButtonBar\">\n        <item name=\"background\">@color/colorWhite</item>\n    </style>\n\n    <style name=\"nameOfSoviet\" parent=\"@style/Widget.AppCompat.TextView\">\n        <item name=\"android:textSize\">20sp</item>\n        <item name=\"android:textColor\">#252723</item>\n        <item name=\"android:textStyle\">bold</item>\n    </style>\n\n    <style name=\"FullscreenCustom\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n        <item name=\"android:windowFullscreen\">true</item>\n        <item name=\"android:windowContentOverlay\">@null</item>\n    </style>\n\n\n    <style name=\"MyCustomTabLayout\" parent=\"Widget.Design.TabLayout\">\n        <item name=\"tabIndicatorColor\">#0000FF</item>\n    </style>\n\n    <style name=\"Theme.App\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense\">\n        ...\n        <item name=\"colorPrimary\">@color/colorGray</item>\n        <!--\t\t<item name=\"colorOnSurface\">@color/shrine_pink_900</item>-->\n        <!--\t\t<item name=\"colorError\">@color/shrine_red</item>-->\n        <!--\t\t<item name=\"textAppearanceSubtitle1\">@style/TextAppearance.App.Subtitle1</item>-->\n        <!--\t\t<item name=\"textAppearanceCaption\">@style/TextAppearance.App.Caption</item>-->\n    </style>\n\n    <style name=\"AppTheme.NoActionBar\">\n        <item name=\"windowActionBar\">false</item>\n        <item name=\"windowNoTitle\">true</item>\n    </style>\n\n    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\" />\n\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\n\n\t<style name=\"CustomTabText\" parent=\"TextAppearance.Design.Tab\">\n\t\t<item name=\"android:textSize\">17dp</item>\n\n\t\t<item name=\"android:fontFamily\">@font/sf_font_pro</item>\n\n\t</style>\n\n\n</resources>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ app/src/main/res/values/styles.xml	(date 1604598533000)
@@ -75,4 +75,14 @@
 	</style>
 
 
+	<style name="CustomTabText" parent="TextAppearance.Design.Tab">
+		<item name="android:textSize">17dp</item>
+
+		<item name="android:fontFamily">@font/sf_font_pro</item>
+
+	</style>
+
+
+
+
 </resources>
Index: app/src/main/res/layout/activity_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n\txmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\txmlns:tools=\"http://schemas.android.com/tools\"\n\tandroid:layout_width=\"match_parent\"\n\tandroid:layout_height=\"match_parent\"\n\ttools:context=\".TestActivity\">\n\n\t<com.google.android.material.tabs.TabLayout\n\t\tandroid:layout_marginTop=\"16dp\"\n\t\tandroid:layout_height=\"32dp\"\n\t\tandroid:layout_marginStart=\"16dp\"\n\t\tandroid:layout_marginEnd=\"16dp\"\n\t\tandroid:layout_width=\"match_parent\"\n\t\tapp:tabGravity=\"fill\"\n\t\tapp:tabMode=\"fixed\"\n\t\tapp:tabMaxWidth=\"40dp\"\n\t\tapp:tabMinWidth=\"32dp\"\n\t\tapp:tabIndicator=\"@drawable/circle\"\n\t\tapp:tabIndicatorColor=\"@color/colorBolotoButton\"\n\t\tapp:tabIndicatorHeight=\"32dp\"\n\t\tandroid:clipToPadding=\"true\"\n\t\tapp:tabSelectedTextColor=\"@color/colorWhite\"\n\t\tandroid:clickable=\"false\"\n\t\t>\n\n\t\t<com.google.android.material.tabs.TabItem\n\t\t\tandroid:text=\"3\"\n\t\t\tandroid:layout_height=\"wrap_content\"\n\t\t\tandroid:layout_width=\"wrap_content\"\n\t\t\tandroid:clickable=\"false\"\n\t\t\t/>\n\n\t</com.google.android.material.tabs.TabLayout>\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_test.xml	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ app/src/main/res/layout/activity_test.xml	(date 1604598574000)
@@ -1,36 +1,86 @@
 <?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	xmlns:app="http://schemas.android.com/apk/res-auto"
-	xmlns:tools="http://schemas.android.com/tools"
-	android:layout_width="match_parent"
-	android:layout_height="match_parent"
-	tools:context=".TestActivity">
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    >
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="90dp"
+        android:background="@color/colorBolotoButton"
+        app:layout_scrollFlags="scroll|enterAlways"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light">
+
+        <TextView
+            android:id="@+id/textViewToolbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_alignParentLeft="true"
+            android:layout_alignParentRight="true"
+            android:layout_marginRight="120dp"
+            android:fontFamily="@font/bellota_bold"
+            android:gravity="center_vertical"
+            android:text="Проверим знания!"
+            android:textColor="@color/cardview_light_background"
+            android:textSize="24dp" />
+
+
+    </androidx.appcompat.widget.Toolbar>
+
 
-	<com.google.android.material.tabs.TabLayout
-		android:layout_marginTop="16dp"
-		android:layout_height="32dp"
-		android:layout_marginStart="16dp"
-		android:layout_marginEnd="16dp"
-		android:layout_width="match_parent"
-		app:tabGravity="fill"
-		app:tabMode="fixed"
-		app:tabMaxWidth="40dp"
-		app:tabMinWidth="32dp"
-		app:tabIndicator="@drawable/circle"
-		app:tabIndicatorColor="@color/colorBolotoButton"
-		app:tabIndicatorHeight="32dp"
-		android:clipToPadding="true"
-		app:tabSelectedTextColor="@color/colorWhite"
-		android:clickable="false"
-		>
-
-		<com.google.android.material.tabs.TabItem
-			android:text="3"
-			android:layout_height="wrap_content"
-			android:layout_width="wrap_content"
-			android:clickable="false"
-			/>
+    <com.google.android.material.tabs.TabLayout
+
+
+        android:id="@+id/tabLayout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="10dp"
+        android:clickable="false"
+        app:tabMaxWidth="0dp"
+            app:tabUnboundedRipple="true"
+            app:tabIndicatorColor="@color/colorBolotoButton"
+
+    >
+
+<!--        android:layout_gravity="center_horizontal"-->
+
+        <!--        android:fillViewport="false"-->
+
+        <!--        android:minHeight="60dp"-->
+        <!--        app:tabGravity="center"-->
+        <!--        app:tabIndicator="@drawable/circle"-->
+        <!--        app:tabIndicatorColor="@color/colorBolotoButton"-->
+        <!--        app:tabIndicatorGravity="center"-->
+        <!--        app:tabIndicatorHeight="35dp"-->
+        <!--        app:tabMinWidth="41dp"-->
+        <!--        app:tabMode="fixed"-->
+        <!--        app:tabSelectedTextColor="@color/colorWhite"-->
+        <!--        app:tabTextAppearance="@style/CustomTabText"-->
+        <!--        app:tabTextColor="@color/colorBlack"-->
+
+        <!--                <com.google.android.material.tabs.TabItem-->
+        <!--                    android:layout_width="match_parent"-->
+        <!--                    android:layout_height="match_parent"-->
+        <!--                    android:layout_margin="30dp"-->
+        <!--                    android:clickable="false"-->
+        <!--                    android:padding="30dp"-->
+
+        <!--                    />-->
 
-	</com.google.android.material.tabs.TabLayout>
+    </com.google.android.material.tabs.TabLayout>
 
-</RelativeLayout>
\ No newline at end of file
+    <androidx.viewpager2.widget.ViewPager2
+        android:id="@+id/quizViewPager"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="10dp"
+
+        />
+
+
+</LinearLayout>
+
Index: app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.activity;\n\nimport android.annotation.SuppressLint;\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.TextView;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport skarlat.dev.ecoproject.App;\nimport skarlat.dev.ecoproject.User;\nimport skarlat.dev.ecoproject.databinding.ActivityMainBinding;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private TextView count;\n    static final private int PROGRESS_BAR = 0;\n    private final String TAG = \"MainActivity\";\n    private ActivityMainBinding binding;\n\n    @SuppressLint(\"StaticFieldLeak\")\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        binding = ActivityMainBinding.inflate(getLayoutInflater());\n\n        // new feature WhyActivity\n\t\t/*Intent intent = new Intent(); // удалить\n\t\tintent.setClass(this, WhyActivity.class);\n\t\tstartActivity(intent);\n\t\tfinish();\n*/\n        // Код временно закоментирован для дебагинга\n        new AsyncTask<Void, Void, User>() {\n            @Override\n            protected User doInBackground(Void... voids) {\n                return App.auth.getCurrentUser();\n            }\n\n            @SuppressLint(\"StaticFieldLeak\")\n            @Override\n            protected void onPostExecute(User user) {\n                final Intent intent = new Intent();\n                if (user == null) {\n                    intent.setClass(getBaseContext(), SignInActivity.class);\n                    Log.d(TAG, \"User is null\");\n                } else {\n                    intent.setClass(getBaseContext(), HomeActivity.class);\n                    Log.d(TAG, \"User not null\");\n                }\n                binding.progress.setVisibility(View.INVISIBLE);\n                startActivity(intent);\n                super.onPostExecute(user);\n            }\n        }.execute();\n    }\n\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if (requestCode == PROGRESS_BAR) {\n            if (resultCode == RESULT_OK) {\n\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ app/src/main/java/skarlat/dev/ecoproject/activity/MainActivity.java	(date 1604598548000)
@@ -15,59 +15,57 @@
 import skarlat.dev.ecoproject.User;
 import skarlat.dev.ecoproject.databinding.ActivityMainBinding;
 
-public class MainActivity extends AppCompatActivity {
+public class MainActivity extends AppCompatActivity{
 
-    private TextView count;
-    static final private int PROGRESS_BAR = 0;
-    private final String TAG = "MainActivity";
-    private ActivityMainBinding binding;
-
-    @SuppressLint("StaticFieldLeak")
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        binding = ActivityMainBinding.inflate(getLayoutInflater());
+	private TextView count;
+	static final private int PROGRESS_BAR = 0;
+	private final String TAG = "MainActivity";
+	private ActivityMainBinding binding;
+	@SuppressLint("StaticFieldLeak")
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		binding = ActivityMainBinding.inflate(getLayoutInflater());
+		// new feature
+		Intent intent = new Intent(); // удалить
+//		intent.setClass(this, WhyActivity.class);
+//		startActivity(intent);
+//		finish();
 
-        // new feature WhyActivity
-		/*Intent intent = new Intent(); // удалить
-		intent.setClass(this, WhyActivity.class);
-		startActivity(intent);
-		finish();
-*/
-        // Код временно закоментирован для дебагинга
-        new AsyncTask<Void, Void, User>() {
-            @Override
-            protected User doInBackground(Void... voids) {
-                return App.auth.getCurrentUser();
-            }
+		// Код временно закоментирован для дебагинга
+		new AsyncTask<Void, Void, User>() {
+			@Override
+			protected User doInBackground(Void... voids) {
+				return App.auth.getCurrentUser();
+			}
 
-            @SuppressLint("StaticFieldLeak")
-            @Override
-            protected void onPostExecute(User user) {
-                final Intent intent = new Intent();
-                if (user == null) {
-                    intent.setClass(getBaseContext(), SignInActivity.class);
-                    Log.d(TAG, "User is null");
-                } else {
-                    intent.setClass(getBaseContext(), HomeActivity.class);
-                    Log.d(TAG, "User not null");
-                }
-                binding.progress.setVisibility(View.INVISIBLE);
-                startActivity(intent);
-                super.onPostExecute(user);
-            }
-        }.execute();
-    }
+			@SuppressLint("StaticFieldLeak")
+			@Override
+			protected void onPostExecute(User user) {
+				if (user == null)
+					{intent.setClass(getBaseContext(), SignInActivity.class);
+						Log.d(TAG, "User is null");
+					}
+				else{
+					intent.setClass(getBaseContext(), HomeActivity.class);
+					Log.d(TAG, "User not null");
+				}
+				binding.progress.setVisibility(View.INVISIBLE);
+				startActivity(intent);
+				super.onPostExecute(user);
+			}
+		}.execute();
+	}
 
 
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
+	@Override
+	protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+		super.onActivityResult(requestCode, resultCode, data);
 
-        if (requestCode == PROGRESS_BAR) {
-            if (resultCode == RESULT_OK) {
+		if (requestCode == PROGRESS_BAR){
+			if (resultCode == RESULT_OK){
 
-            }
-        }
-    }
+			}
+		}
+	}
 }
Index: app/src/main/java/skarlat/dev/ecoproject/adapter/CategoryAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package skarlat.dev.ecoproject.adapter;\n\nimport android.content.Context;\nimport android.os.Build;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\nimport android.widget.TextView;\n\nimport androidx.annotation.RequiresApi;\nimport androidx.cardview.widget.CardView;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.io.IOException;\nimport java.util.List;\n\nimport skarlat.dev.ecoproject.includes.dataclass.EcoCard;\nimport skarlat.dev.ecoproject.R;\n\npublic class CategoryAdapter extends RecyclerView.Adapter<CategoryAdapter.ViewHolder> {\n    private LayoutInflater inflater;\n    private List<EcoCard> ecoCards;\n\n    public CategoryAdapter(Context context, List<EcoCard> ecoCards) {\n        this.ecoCards = ecoCards;\n        this.inflater = LayoutInflater.from(context);\n    }\n\n    @Override\n    public CategoryAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n\n        View view = inflater.inflate(R.layout.card_by_category, parent, false);\n        return new CategoryAdapter.ViewHolder(view);\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    @Override\n    public void onBindViewHolder(CategoryAdapter.ViewHolder holder, int position) {\n        if (position == 0) {\n            forAll(holder);\n        }\n        EcoCard ecoCard = ecoCards.get(position);\n        holder.category.setText(\"Ресурсы\");\n        try {\n            holder.imageView.setImageDrawable(ecoCard.getImage());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n//\t\tholder.description.setText(ecoSoviet.getDescription());\n    }\n\n    @Override\n    public int getItemCount() {\n        return ecoCards.size();\n    }\n\n    public class ViewHolder extends RecyclerView.ViewHolder {\n        final TextView totalProgress, category;\n        final View view;\n        final CardView cardView;\n        final ImageView imageView;\n\n        ViewHolder(View view) {\n            super(view);\n            this.view = view;\n            totalProgress = view.findViewById(R.id.progress_category);\n            category = view.findViewById(R.id.title_category);\n            cardView = view.findViewById(R.id.current_category);\n            imageView = view.findViewById(R.id.image);\n        }\n    }\n\n    /**\n     * Метод, который посчитает все открытые карточки в формате N/list.size()\n     * Лучше бы от него уйти, потому что не работает на моем телефоне (API)\n     *\n     * @param holder\n     */\n    @RequiresApi(api = Build.VERSION_CODES.N)\n    protected void forAll(CategoryAdapter.ViewHolder holder) {\n//\t\tString all = \"Все\";\n//\t\tCollection<EcoCard> collection = (Collection<EcoCard>) ecoCards;\n//\t\tStream<EcoCard> ecoCardStream = collection.stream();\n//\t\tlong watched = ecoCardStream.filter(new Predicate<EcoCard>() {\n//\t\t\t@Override\n//\t\t\tpublic boolean test(EcoCard ecoCard) {\n//\t\t\t\treturn ecoCard.status == EcoCard.Status.WATCHED;\n//\t\t\t}\n//\t\t}).count();\n//\t\tholder.totalProgress.setText(watched + \"/\" + ecoCards.size());\n//\t\tholder.category.setText(all);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/skarlat/dev/ecoproject/adapter/CategoryAdapter.java	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ app/src/main/java/skarlat/dev/ecoproject/adapter/CategoryAdapter.java	(date 1604598548000)
@@ -15,70 +15,67 @@
 import java.io.IOException;
 import java.util.List;
 
-import skarlat.dev.ecoproject.includes.dataclass.EcoCard;
+import skarlat.dev.ecoproject.EcoCard;
 import skarlat.dev.ecoproject.R;
 
 public class CategoryAdapter extends RecyclerView.Adapter<CategoryAdapter.ViewHolder> {
-    private LayoutInflater inflater;
-    private List<EcoCard> ecoCards;
-
-    public CategoryAdapter(Context context, List<EcoCard> ecoCards) {
-        this.ecoCards = ecoCards;
-        this.inflater = LayoutInflater.from(context);
-    }
-
-    @Override
-    public CategoryAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-
-        View view = inflater.inflate(R.layout.card_by_category, parent, false);
-        return new CategoryAdapter.ViewHolder(view);
-    }
-
-    @RequiresApi(api = Build.VERSION_CODES.N)
-    @Override
-    public void onBindViewHolder(CategoryAdapter.ViewHolder holder, int position) {
-        if (position == 0) {
-            forAll(holder);
-        }
-        EcoCard ecoCard = ecoCards.get(position);
-        holder.category.setText("Ресурсы");
-        try {
-            holder.imageView.setImageDrawable(ecoCard.getImage());
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
+	private LayoutInflater inflater;
+	private List<EcoCard> ecoCards;
+	
+	public CategoryAdapter(Context context, List<EcoCard> ecoCards) {
+		this.ecoCards = ecoCards;
+		this.inflater = LayoutInflater.from(context);
+	}
+	@Override
+	public CategoryAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+		
+		View view = inflater.inflate(R.layout.card_by_category, parent, false);
+		return new CategoryAdapter.ViewHolder(view);
+	}
+	
+	@RequiresApi(api = Build.VERSION_CODES.N)
+	@Override
+	public void onBindViewHolder(CategoryAdapter.ViewHolder holder, int position) {
+		if (position == 0){
+			forAll(holder);
+		}
+		EcoCard ecoCard = ecoCards.get(position);
+		holder.category.setText("Ресурсы");
+		try {
+			holder.imageView.setImageDrawable(ecoCard.getImage());
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
 //		holder.description.setText(ecoSoviet.getDescription());
-    }
-
-    @Override
-    public int getItemCount() {
-        return ecoCards.size();
-    }
-
-    public class ViewHolder extends RecyclerView.ViewHolder {
-        final TextView totalProgress, category;
-        final View view;
-        final CardView cardView;
-        final ImageView imageView;
-
-        ViewHolder(View view) {
-            super(view);
-            this.view = view;
-            totalProgress = view.findViewById(R.id.progress_category);
-            category = view.findViewById(R.id.title_category);
-            cardView = view.findViewById(R.id.current_category);
-            imageView = view.findViewById(R.id.image);
-        }
-    }
-
-    /**
-     * Метод, который посчитает все открытые карточки в формате N/list.size()
-     * Лучше бы от него уйти, потому что не работает на моем телефоне (API)
-     *
-     * @param holder
-     */
-    @RequiresApi(api = Build.VERSION_CODES.N)
-    protected void forAll(CategoryAdapter.ViewHolder holder) {
+	}
+	
+	@Override
+	public int getItemCount() {
+		return ecoCards.size();
+	}
+	
+	public class ViewHolder extends RecyclerView.ViewHolder {
+		final TextView totalProgress, category;
+		final View view;
+		final CardView cardView;
+		final ImageView imageView;
+		ViewHolder(View view){
+			super(view);
+			this.view = view;
+			totalProgress = (TextView) view.findViewById(R.id.progress_category);
+			category = (TextView) view.findViewById(R.id.title_category);
+			cardView = (CardView) view.findViewById(R.id.current_category);
+			imageView = (ImageView) view.findViewById(R.id.tab_image);
+		}
+	}
+	
+	/**
+	 *  Метод, который посчитает все открытые карточки в формате N/list.size()
+	 *  Лучше бы от него уйти, потому что не работает на моем телефоне (API)
+	 * @param holder
+	 */
+	@RequiresApi(api = Build.VERSION_CODES.N)
+	protected void forAll(CategoryAdapter.ViewHolder holder){
 //		String all = "Все";
 //		Collection<EcoCard> collection = (Collection<EcoCard>) ecoCards;
 //		Stream<EcoCard> ecoCardStream = collection.stream();
@@ -90,5 +87,5 @@
 //		}).count();
 //		holder.totalProgress.setText(watched + "/" + ecoCards.size());
 //		holder.category.setText(all);
-    }
+	}
 }
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"delegatedBuild\" value=\"false\" />\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n      </GradleProjectSettings>\n    </option>\n    <option name=\"offlineMode\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ .idea/gradle.xml	(date 1604598802000)
@@ -18,6 +18,5 @@
         <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
-    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun Oct 11 14:57:06 MSK 2020\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1604598548000)
@@ -1,6 +1,6 @@
-#Sun Oct 11 14:57:06 MSK 2020
+#Mon Oct 19 20:22:31 CEST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
Index: app/src/main/res/drawable/circle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:shape=\"oval\"\n    android:innerRadius=\"41dp\">\n    <solid android:color=\"@color/colorGray\" />\n    <size\n        android:height=\"41dp\"\n        android:width=\"41dp\" />\n</shape>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/circle.xml	(revision fedab7acdf4bebfa9e20222887fed380c0fc655d)
+++ app/src/main/res/drawable/circle.xml	(date 1604598548000)
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="oval"
-    android:innerRadius="41dp">
-    <solid android:color="@color/colorGray" />
-    <size
-        android:height="41dp"
-        android:width="41dp" />
+	android:shape="oval" android:innerRadius="42dp"
+	>
+
+
+	<solid android:color="@color/colorGray"/>
+	<size android:height="42dp" android:width="42dp"/>
 </shape>
\ No newline at end of file
